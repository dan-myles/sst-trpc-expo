{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":39,"column":0,"index":1091}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":39,"column":0,"index":1091}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formDataToObject = formDataToObject;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /* eslint-disable @typescript-eslint/no-non-null-assertion */var isNumberString = str => /^\\d+$/.test(str);\n  function set(obj, path, value) {\n    if (path.length > 1) {\n      var newPath = [...path];\n      var key = newPath.shift();\n      var nextKey = newPath[0];\n      if (!obj[key]) {\n        obj[key] = isNumberString(nextKey) ? [] : {};\n      } else if (Array.isArray(obj[key]) && !isNumberString(nextKey)) {\n        obj[key] = Object.fromEntries(Object.entries(obj[key]));\n      }\n      set(obj[key], newPath, value);\n      return;\n    }\n    var p = path[0];\n    if (obj[p] === undefined) {\n      obj[p] = value;\n    } else if (Array.isArray(obj[p])) {\n      obj[p].push(value);\n    } else {\n      obj[p] = [obj[p], value];\n    }\n  }\n  function formDataToObject(formData) {\n    var obj = {};\n    for (var _ref of formData.entries()) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n      var key = _ref2[0];\n      var value = _ref2[1];\n      var parts = key.split(/[\\.\\[\\]]/).filter(Boolean);\n      set(obj, parts, value);\n    }\n    return obj;\n  }\n});","lineCount":42,"map":[[8,2,1,0],[8,63,1,62],[8,67,1,68,"isNumberString"],[8,81,1,82],[8,84,1,86,"str"],[8,87,1,89],[8,91,1,92],[8,98,1,99],[8,99,1,100,"test"],[8,103,1,104],[8,104,1,105,"str"],[8,107,1,108],[8,108,1,109],[9,2,2,0],[9,11,2,9,"set"],[9,14,2,12,"set"],[9,15,2,13,"obj"],[9,18,2,16],[9,20,2,18,"path"],[9,24,2,22],[9,26,2,24,"value"],[9,31,2,29],[9,33,2,31],[10,4,3,4],[10,8,3,8,"path"],[10,12,3,12],[10,13,3,13,"length"],[10,19,3,19],[10,22,3,22],[10,23,3,23],[10,25,3,25],[11,6,4,8],[11,10,4,14,"newPath"],[11,17,4,21],[11,20,4,24],[11,21,5,12],[11,24,5,15,"path"],[11,28,5,19],[11,29,6,9],[12,6,7,8],[12,10,7,14,"key"],[12,13,7,17],[12,16,7,20,"newPath"],[12,23,7,27],[12,24,7,28,"shift"],[12,29,7,33],[12,30,7,34],[12,31,7,35],[13,6,8,8],[13,10,8,14,"nextKey"],[13,17,8,21],[13,20,8,24,"newPath"],[13,27,8,31],[13,28,8,32],[13,29,8,33],[13,30,8,34],[14,6,9,8],[14,10,9,12],[14,11,9,13,"obj"],[14,14,9,16],[14,15,9,17,"key"],[14,18,9,20],[14,19,9,21],[14,21,9,23],[15,8,10,12,"obj"],[15,11,10,15],[15,12,10,16,"key"],[15,15,10,19],[15,16,10,20],[15,19,10,23,"isNumberString"],[15,33,10,37],[15,34,10,38,"nextKey"],[15,41,10,45],[15,42,10,46],[15,45,10,49],[15,47,10,51],[15,50,10,54],[15,51,10,55],[15,52,10,56],[16,6,11,8],[16,7,11,9],[16,13,11,15],[16,17,11,19,"Array"],[16,22,11,24],[16,23,11,25,"isArray"],[16,30,11,32],[16,31,11,33,"obj"],[16,34,11,36],[16,35,11,37,"key"],[16,38,11,40],[16,39,11,41],[16,40,11,42],[16,44,11,46],[16,45,11,47,"isNumberString"],[16,59,11,61],[16,60,11,62,"nextKey"],[16,67,11,69],[16,68,11,70],[16,70,11,72],[17,8,12,12,"obj"],[17,11,12,15],[17,12,12,16,"key"],[17,15,12,19],[17,16,12,20],[17,19,12,23,"Object"],[17,25,12,29],[17,26,12,30,"fromEntries"],[17,37,12,41],[17,38,12,42,"Object"],[17,44,12,48],[17,45,12,49,"entries"],[17,52,12,56],[17,53,12,57,"obj"],[17,56,12,60],[17,57,12,61,"key"],[17,60,12,64],[17,61,12,65],[17,62,12,66],[17,63,12,67],[18,6,13,8],[19,6,14,8,"set"],[19,9,14,11],[19,10,14,12,"obj"],[19,13,14,15],[19,14,14,16,"key"],[19,17,14,19],[19,18,14,20],[19,20,14,22,"newPath"],[19,27,14,29],[19,29,14,31,"value"],[19,34,14,36],[19,35,14,37],[20,6,15,8],[21,4,16,4],[22,4,17,4],[22,8,17,10,"p"],[22,9,17,11],[22,12,17,14,"path"],[22,16,17,18],[22,17,17,19],[22,18,17,20],[22,19,17,21],[23,4,18,4],[23,8,18,8,"obj"],[23,11,18,11],[23,12,18,12,"p"],[23,13,18,13],[23,14,18,14],[23,19,18,19,"undefined"],[23,28,18,28],[23,30,18,30],[24,6,19,8,"obj"],[24,9,19,11],[24,10,19,12,"p"],[24,11,19,13],[24,12,19,14],[24,15,19,17,"value"],[24,20,19,22],[25,4,20,4],[25,5,20,5],[25,11,20,11],[25,15,20,15,"Array"],[25,20,20,20],[25,21,20,21,"isArray"],[25,28,20,28],[25,29,20,29,"obj"],[25,32,20,32],[25,33,20,33,"p"],[25,34,20,34],[25,35,20,35],[25,36,20,36],[25,38,20,38],[26,6,21,8,"obj"],[26,9,21,11],[26,10,21,12,"p"],[26,11,21,13],[26,12,21,14],[26,13,21,15,"push"],[26,17,21,19],[26,18,21,20,"value"],[26,23,21,25],[26,24,21,26],[27,4,22,4],[27,5,22,5],[27,11,22,11],[28,6,23,8,"obj"],[28,9,23,11],[28,10,23,12,"p"],[28,11,23,13],[28,12,23,14],[28,15,23,17],[28,16,24,12,"obj"],[28,19,24,15],[28,20,24,16,"p"],[28,21,24,17],[28,22,24,18],[28,24,25,12,"value"],[28,29,25,17],[28,30,26,9],[29,4,27,4],[30,2,28,0],[31,2,29,0],[31,11,29,9,"formDataToObject"],[31,27,29,25,"formDataToObject"],[31,28,29,26,"formData"],[31,36,29,34],[31,38,29,36],[32,4,30,4],[32,8,30,10,"obj"],[32,11,30,13],[32,14,30,16],[32,15,30,17],[32,16,30,18],[33,4,31,4],[33,13,31,4,"_ref"],[33,17,31,4],[33,21,31,31,"formData"],[33,29,31,39],[33,30,31,40,"entries"],[33,37,31,47],[33,38,31,48],[33,39,31,49],[33,41,31,50],[34,6,31,50],[34,10,31,50,"_ref2"],[34,15,31,50],[34,22,31,50,"_slicedToArray2"],[34,37,31,50],[34,38,31,50,"default"],[34,45,31,50],[34,47,31,50,"_ref"],[34,51,31,50],[35,6,31,50],[35,10,31,16,"key"],[35,13,31,19],[35,16,31,19,"_ref2"],[35,21,31,19],[36,6,31,19],[36,10,31,21,"value"],[36,15,31,26],[36,18,31,26,"_ref2"],[36,23,31,26],[37,6,32,8],[37,10,32,14,"parts"],[37,15,32,19],[37,18,32,22,"key"],[37,21,32,25],[37,22,32,26,"split"],[37,27,32,31],[37,28,32,32],[37,38,32,42],[37,39,32,43],[37,40,32,44,"filter"],[37,46,32,50],[37,47,32,51,"Boolean"],[37,54,32,58],[37,55,32,59],[38,6,33,8,"set"],[38,9,33,11],[38,10,33,12,"obj"],[38,13,33,15],[38,15,33,17,"parts"],[38,20,33,22],[38,22,33,24,"value"],[38,27,33,29],[38,28,33,30],[39,4,34,4],[40,4,35,4],[40,11,35,11,"obj"],[40,14,35,14],[41,2,36,0],[42,0,36,1],[42,3]],"functionMap":{"names":["<global>","isNumberString","set","formDataToObject"],"mappings":"AAA,qFC,wBD;AEC;CF0B;AGC;CHO"}},"type":"js/module"}]}