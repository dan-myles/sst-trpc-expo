{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/wrapNativeSuper","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":102,"column":0,"index":2861}}],"key":"klKI26kbg7KjCUWxfs8kiTBX2S8="}},{"name":"./utils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"XZqiGndSzUFgS+0ABF5nOFWZJRU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultTransformer = void 0;\n  exports.getDataTransformer = getDataTransformer;\n  exports.transformResult = transformResult;\n  exports.transformTRPCResponse = transformTRPCResponse;\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _wrapNativeSuper2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/wrapNativeSuper\"));\n  var _utils = require(_dependencyMap[7], \"./utils.mjs\");\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  /**\n   * @internal\n   */\n  function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n      return transformer;\n    }\n    return {\n      input: transformer,\n      output: transformer\n    };\n  }\n  /**\n   * @internal\n   */\n  var defaultTransformer = exports.defaultTransformer = {\n    input: {\n      serialize: obj => obj,\n      deserialize: obj => obj\n    },\n    output: {\n      serialize: obj => obj,\n      deserialize: obj => obj\n    }\n  };\n  function transformTRPCResponseItem(config, item) {\n    if ('error' in item) {\n      return {\n        ...item,\n        error: config.transformer.output.serialize(item.error)\n      };\n    }\n    if ('data' in item.result) {\n      return {\n        ...item,\n        result: {\n          ...item.result,\n          data: config.transformer.output.serialize(item.result.data)\n        }\n      };\n    }\n    return item;\n  }\n  /**\n   * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n   **/\n  function transformTRPCResponse(config, itemOrItems) {\n    return Array.isArray(itemOrItems) ? itemOrItems.map(item => transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n  }\n  // FIXME:\n  // - the generics here are probably unnecessary\n  // - the RPC-spec could probably be simplified to combine HTTP + WS\n  /** @internal */\n  function transformResultInner(response, transformer) {\n    if ('error' in response) {\n      var error = transformer.deserialize(response.error);\n      return {\n        ok: false,\n        error: {\n          ...response,\n          error\n        }\n      };\n    }\n    var result = {\n      ...response.result,\n      ...((!response.result.type || response.result.type === 'data') && {\n        type: 'data',\n        data: transformer.deserialize(response.result.data)\n      })\n    };\n    return {\n      ok: true,\n      result\n    };\n  }\n  var TransformResultError = /*#__PURE__*/function (_Error) {\n    function TransformResultError() {\n      (0, _classCallCheck2.default)(this, TransformResultError);\n      return _callSuper(this, TransformResultError, ['Unable to transform response from server']);\n    }\n    (0, _inherits2.default)(TransformResultError, _Error);\n    return (0, _createClass2.default)(TransformResultError);\n  }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));\n  /**\n   * Transforms and validates that the result is a valid TRPCResponse\n   * @internal\n   */\n  function transformResult(response, transformer) {\n    var result;\n    try {\n      // Use the data transformers on the JSON-response\n      result = transformResultInner(response, transformer);\n    } catch {\n      throw new TransformResultError();\n    }\n    // check that output of the transformers is a valid TRPCResponse\n    if (!result.ok && (!(0, _utils.isObject)(result.error.error) || typeof result.error.error['code'] !== 'number')) {\n      throw new TransformResultError();\n    }\n    if (result.ok && !(0, _utils.isObject)(result.result)) {\n      throw new TransformResultError();\n    }\n    return result;\n  }\n});","lineCount":124,"map":[[16,2,1,0],[16,6,1,0,"_utils"],[16,12,1,0],[16,15,1,0,"require"],[16,22,1,0],[16,23,1,0,"_dependencyMap"],[16,37,1,0],[17,2,1,39],[17,11,1,39,"_callSuper"],[17,22,1,39,"t"],[17,23,1,39],[17,25,1,39,"o"],[17,26,1,39],[17,28,1,39,"e"],[17,29,1,39],[17,40,1,39,"o"],[17,41,1,39],[17,48,1,39,"_getPrototypeOf2"],[17,64,1,39],[17,65,1,39,"default"],[17,72,1,39],[17,74,1,39,"o"],[17,75,1,39],[17,82,1,39,"_possibleConstructorReturn2"],[17,109,1,39],[17,110,1,39,"default"],[17,117,1,39],[17,119,1,39,"t"],[17,120,1,39],[17,122,1,39,"_isNativeReflectConstruct"],[17,147,1,39],[17,152,1,39,"Reflect"],[17,159,1,39],[17,160,1,39,"construct"],[17,169,1,39],[17,170,1,39,"o"],[17,171,1,39],[17,173,1,39,"e"],[17,174,1,39],[17,186,1,39,"_getPrototypeOf2"],[17,202,1,39],[17,203,1,39,"default"],[17,210,1,39],[17,212,1,39,"t"],[17,213,1,39],[17,215,1,39,"constructor"],[17,226,1,39],[17,230,1,39,"o"],[17,231,1,39],[17,232,1,39,"apply"],[17,237,1,39],[17,238,1,39,"t"],[17,239,1,39],[17,241,1,39,"e"],[17,242,1,39],[18,2,1,39],[18,11,1,39,"_isNativeReflectConstruct"],[18,37,1,39],[18,51,1,39,"t"],[18,52,1,39],[18,56,1,39,"Boolean"],[18,63,1,39],[18,64,1,39,"prototype"],[18,73,1,39],[18,74,1,39,"valueOf"],[18,81,1,39],[18,82,1,39,"call"],[18,86,1,39],[18,87,1,39,"Reflect"],[18,94,1,39],[18,95,1,39,"construct"],[18,104,1,39],[18,105,1,39,"Boolean"],[18,112,1,39],[18,145,1,39,"t"],[18,146,1,39],[18,159,1,39,"_isNativeReflectConstruct"],[18,184,1,39],[18,196,1,39,"_isNativeReflectConstruct"],[18,197,1,39],[18,210,1,39,"t"],[18,211,1,39],[19,2,3,0],[20,0,4,0],[21,0,5,0],[22,2,5,4],[22,11,5,13,"getDataTransformer"],[22,29,5,31,"getDataTransformer"],[22,30,5,32,"transformer"],[22,41,5,43],[22,43,5,45],[23,4,6,4],[23,8,6,8],[23,15,6,15],[23,19,6,19,"transformer"],[23,30,6,30],[23,32,6,32],[24,6,7,8],[24,13,7,15,"transformer"],[24,24,7,26],[25,4,8,4],[26,4,9,4],[26,11,9,11],[27,6,10,8,"input"],[27,11,10,13],[27,13,10,15,"transformer"],[27,24,10,26],[28,6,11,8,"output"],[28,12,11,14],[28,14,11,16,"transformer"],[29,4,12,4],[29,5,12,5],[30,2,13,0],[31,2,14,0],[32,0,15,0],[33,0,16,0],[34,2,16,4],[34,6,16,10,"defaultTransformer"],[34,24,16,28],[34,27,16,28,"exports"],[34,34,16,28],[34,35,16,28,"defaultTransformer"],[34,53,16,28],[34,56,16,31],[35,4,17,4,"input"],[35,9,17,9],[35,11,17,11],[36,6,18,8,"serialize"],[36,15,18,17],[36,17,18,20,"obj"],[36,20,18,23],[36,24,18,26,"obj"],[36,27,18,29],[37,6,19,8,"deserialize"],[37,17,19,19],[37,19,19,22,"obj"],[37,22,19,25],[37,26,19,28,"obj"],[38,4,20,4],[38,5,20,5],[39,4,21,4,"output"],[39,10,21,10],[39,12,21,12],[40,6,22,8,"serialize"],[40,15,22,17],[40,17,22,20,"obj"],[40,20,22,23],[40,24,22,26,"obj"],[40,27,22,29],[41,6,23,8,"deserialize"],[41,17,23,19],[41,19,23,22,"obj"],[41,22,23,25],[41,26,23,28,"obj"],[42,4,24,4],[43,2,25,0],[43,3,25,1],[44,2,26,0],[44,11,26,9,"transformTRPCResponseItem"],[44,36,26,34,"transformTRPCResponseItem"],[44,37,26,35,"config"],[44,43,26,41],[44,45,26,43,"item"],[44,49,26,47],[44,51,26,49],[45,4,27,4],[45,8,27,8],[45,15,27,15],[45,19,27,19,"item"],[45,23,27,23],[45,25,27,25],[46,6,28,8],[46,13,28,15],[47,8,29,12],[47,11,29,15,"item"],[47,15,29,19],[48,8,30,12,"error"],[48,13,30,17],[48,15,30,19,"config"],[48,21,30,25],[48,22,30,26,"transformer"],[48,33,30,37],[48,34,30,38,"output"],[48,40,30,44],[48,41,30,45,"serialize"],[48,50,30,54],[48,51,30,55,"item"],[48,55,30,59],[48,56,30,60,"error"],[48,61,30,65],[49,6,31,8],[49,7,31,9],[50,4,32,4],[51,4,33,4],[51,8,33,8],[51,14,33,14],[51,18,33,18,"item"],[51,22,33,22],[51,23,33,23,"result"],[51,29,33,29],[51,31,33,31],[52,6,34,8],[52,13,34,15],[53,8,35,12],[53,11,35,15,"item"],[53,15,35,19],[54,8,36,12,"result"],[54,14,36,18],[54,16,36,20],[55,10,37,16],[55,13,37,19,"item"],[55,17,37,23],[55,18,37,24,"result"],[55,24,37,30],[56,10,38,16,"data"],[56,14,38,20],[56,16,38,22,"config"],[56,22,38,28],[56,23,38,29,"transformer"],[56,34,38,40],[56,35,38,41,"output"],[56,41,38,47],[56,42,38,48,"serialize"],[56,51,38,57],[56,52,38,58,"item"],[56,56,38,62],[56,57,38,63,"result"],[56,63,38,69],[56,64,38,70,"data"],[56,68,38,74],[57,8,39,12],[58,6,40,8],[58,7,40,9],[59,4,41,4],[60,4,42,4],[60,11,42,11,"item"],[60,15,42,15],[61,2,43,0],[62,2,44,0],[63,0,45,0],[64,0,46,0],[65,2,46,5],[65,11,46,14,"transformTRPCResponse"],[65,32,46,35,"transformTRPCResponse"],[65,33,46,36,"config"],[65,39,46,42],[65,41,46,44,"itemOrItems"],[65,52,46,55],[65,54,46,57],[66,4,47,4],[66,11,47,11,"Array"],[66,16,47,16],[66,17,47,17,"isArray"],[66,24,47,24],[66,25,47,25,"itemOrItems"],[66,36,47,36],[66,37,47,37],[66,40,47,40,"itemOrItems"],[66,51,47,51],[66,52,47,52,"map"],[66,55,47,55],[66,56,47,57,"item"],[66,60,47,61],[66,64,47,64,"transformTRPCResponseItem"],[66,89,47,89],[66,90,47,90,"config"],[66,96,47,96],[66,98,47,98,"item"],[66,102,47,102],[66,103,47,103],[66,104,47,104],[66,107,47,107,"transformTRPCResponseItem"],[66,132,47,132],[66,133,47,133,"config"],[66,139,47,139],[66,141,47,141,"itemOrItems"],[66,152,47,152],[66,153,47,153],[67,2,48,0],[68,2,49,0],[69,2,50,0],[70,2,51,0],[71,2,52,0],[72,2,52,17],[72,11,52,26,"transformResultInner"],[72,31,52,46,"transformResultInner"],[72,32,52,47,"response"],[72,40,52,55],[72,42,52,57,"transformer"],[72,53,52,68],[72,55,52,70],[73,4,53,4],[73,8,53,8],[73,15,53,15],[73,19,53,19,"response"],[73,27,53,27],[73,29,53,29],[74,6,54,8],[74,10,54,14,"error"],[74,15,54,19],[74,18,54,22,"transformer"],[74,29,54,33],[74,30,54,34,"deserialize"],[74,41,54,45],[74,42,54,46,"response"],[74,50,54,54],[74,51,54,55,"error"],[74,56,54,60],[74,57,54,61],[75,6,55,8],[75,13,55,15],[76,8,56,12,"ok"],[76,10,56,14],[76,12,56,16],[76,17,56,21],[77,8,57,12,"error"],[77,13,57,17],[77,15,57,19],[78,10,58,16],[78,13,58,19,"response"],[78,21,58,27],[79,10,59,16,"error"],[80,8,60,12],[81,6,61,8],[81,7,61,9],[82,4,62,4],[83,4,63,4],[83,8,63,10,"result"],[83,14,63,16],[83,17,63,19],[84,6,64,8],[84,9,64,11,"response"],[84,17,64,19],[84,18,64,20,"result"],[84,24,64,26],[85,6,65,8],[85,10,65,11],[85,11,65,12],[85,12,65,13,"response"],[85,20,65,21],[85,21,65,22,"result"],[85,27,65,28],[85,28,65,29,"type"],[85,32,65,33],[85,36,65,37,"response"],[85,44,65,45],[85,45,65,46,"result"],[85,51,65,52],[85,52,65,53,"type"],[85,56,65,57],[85,61,65,62],[85,67,65,68],[85,72,65,73],[86,8,66,12,"type"],[86,12,66,16],[86,14,66,18],[86,20,66,24],[87,8,67,12,"data"],[87,12,67,16],[87,14,67,18,"transformer"],[87,25,67,29],[87,26,67,30,"deserialize"],[87,37,67,41],[87,38,67,42,"response"],[87,46,67,50],[87,47,67,51,"result"],[87,53,67,57],[87,54,67,58,"data"],[87,58,67,62],[88,6,68,8],[88,7,68,9],[89,4,69,4],[89,5,69,5],[90,4,70,4],[90,11,70,11],[91,6,71,8,"ok"],[91,8,71,10],[91,10,71,12],[91,14,71,16],[92,6,72,8,"result"],[93,4,73,4],[93,5,73,5],[94,2,74,0],[95,2,74,1],[95,6,75,6,"TransformResultError"],[95,26,75,26],[95,52,75,26,"_Error"],[95,58,75,26],[96,4,76,4],[96,13,76,4,"TransformResultError"],[96,34,76,4],[96,36,76,17],[97,6,76,17],[97,10,76,17,"_classCallCheck2"],[97,26,76,17],[97,27,76,17,"default"],[97,34,76,17],[97,42,76,17,"TransformResultError"],[97,62,76,17],[98,6,76,17],[98,13,76,17,"_callSuper"],[98,23,76,17],[98,30,76,17,"TransformResultError"],[98,50,76,17],[98,53,77,14],[98,95,77,56],[99,4,78,4],[100,4,78,5],[100,8,78,5,"_inherits2"],[100,18,78,5],[100,19,78,5,"default"],[100,26,78,5],[100,28,78,5,"TransformResultError"],[100,48,78,5],[100,50,78,5,"_Error"],[100,56,78,5],[101,4,78,5],[101,15,78,5,"_createClass2"],[101,28,78,5],[101,29,78,5,"default"],[101,36,78,5],[101,38,78,5,"TransformResultError"],[101,58,78,5],[102,2,78,5],[102,21,78,5,"_wrapNativeSuper2"],[102,38,78,5],[102,39,78,5,"default"],[102,46,78,5],[102,48,75,35,"Error"],[102,53,75,40],[103,2,80,0],[104,0,81,0],[105,0,82,0],[106,0,83,0],[107,2,83,4],[107,11,83,13,"transformResult"],[107,26,83,28,"transformResult"],[107,27,83,29,"response"],[107,35,83,37],[107,37,83,39,"transformer"],[107,48,83,50],[107,50,83,52],[108,4,84,4],[108,8,84,8,"result"],[108,14,84,14],[109,4,85,4],[109,8,85,8],[110,6,86,8],[111,6,87,8,"result"],[111,12,87,14],[111,15,87,17,"transformResultInner"],[111,35,87,37],[111,36,87,38,"response"],[111,44,87,46],[111,46,87,48,"transformer"],[111,57,87,59],[111,58,87,60],[112,4,88,4],[112,5,88,5],[112,6,88,6],[112,12,88,13],[113,6,89,8],[113,12,89,14],[113,16,89,18,"TransformResultError"],[113,36,89,38],[113,37,89,39],[113,38,89,40],[114,4,90,4],[115,4,91,4],[116,4,92,4],[116,8,92,8],[116,9,92,9,"result"],[116,15,92,15],[116,16,92,16,"ok"],[116,18,92,18],[116,23,92,23],[116,24,92,24],[116,28,92,24,"isObject"],[116,43,92,32],[116,45,92,33,"result"],[116,51,92,39],[116,52,92,40,"error"],[116,57,92,45],[116,58,92,46,"error"],[116,63,92,51],[116,64,92,52],[116,68,92,56],[116,75,92,63,"result"],[116,81,92,69],[116,82,92,70,"error"],[116,87,92,75],[116,88,92,76,"error"],[116,93,92,81],[116,94,92,82],[116,100,92,88],[116,101,92,89],[116,106,92,94],[116,114,92,102],[116,115,92,103],[116,117,92,105],[117,6,93,8],[117,12,93,14],[117,16,93,18,"TransformResultError"],[117,36,93,38],[117,37,93,39],[117,38,93,40],[118,4,94,4],[119,4,95,4],[119,8,95,8,"result"],[119,14,95,14],[119,15,95,15,"ok"],[119,17,95,17],[119,21,95,21],[119,22,95,22],[119,26,95,22,"isObject"],[119,41,95,30],[119,43,95,31,"result"],[119,49,95,37],[119,50,95,38,"result"],[119,56,95,44],[119,57,95,45],[119,59,95,47],[120,6,96,8],[120,12,96,14],[120,16,96,18,"TransformResultError"],[120,36,96,38],[120,37,96,39],[120,38,96,40],[121,4,97,4],[122,4,98,4],[122,11,98,11,"result"],[122,17,98,17],[123,2,99,0],[124,0,99,1],[124,3]],"functionMap":{"names":["<global>","getDataTransformer","defaultTransformer.input.serialize","defaultTransformer.input.deserialize","defaultTransformer.output.serialize","defaultTransformer.output.deserialize","transformTRPCResponseItem","transformTRPCResponse","itemOrItems.map$argument_0","transformResultInner","TransformResultError","TransformResultError#constructor","transformResult"],"mappings":"AAA;ICI;CDQ;mBEK,UF;qBGC,UH;mBIG,UJ;qBKC,UL;AMG;CNiB;KOG;wDCC,+CD;CPC;iBSI;CTsB;AUC;ICC;KDE;CVC;IYI;CZgB"}},"type":"js/module"}]}