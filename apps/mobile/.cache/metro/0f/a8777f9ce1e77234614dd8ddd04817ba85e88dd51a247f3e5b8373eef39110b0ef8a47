{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":7,"column":22,"index":141}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"react-native-css-interop/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"KIUlTvE5AuYewa829d7bUXlSDig="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StatusBar = StatusBar;\n  exports.setStatusBarNetworkActivityIndicatorVisible = exports.setStatusBarHidden = exports.setStatusBarBackgroundColor = void 0;\n  exports.setStatusBarStyle = setStatusBarStyle;\n  exports.setStatusBarTranslucent = void 0;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _react = _interopRequireDefault(require(_dependencyMap[2], \"react\"));\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _jsxRuntime = require(_dependencyMap[4], \"react-native-css-interop/jsx-runtime\");\n  var _excluded = [\"style\", \"hideTransitionAnimation\", \"translucent\", \"backgroundColor\"];\n  var _jsxFileName = \"/Users/dan/Developer/personal/project-bt/node_modules/.pnpm/expo-status-bar@2.0.1_react-native@0.77.1_@babel+core@7.26.9_@babel+preset-env@7.26.9_@_67b9c5117e2d96b07ec69e46dc267aaf/node_modules/expo-status-bar/src/StatusBar.tsx\"; // @docsMissing\n  // @docsMissing\n  // @needsAudit\n  /**\n   * A component that allows you to configure your status bar without directly calling imperative\n   * methods like `setBarStyle`.\n   *\n   * You will likely have multiple `StatusBar` components mounted in the same app at the same time.\n   * For example, if you have multiple screens in your app, you may end up using one per screen.\n   * The props of each `StatusBar` component will be merged in the order that they were mounted.\n   * This component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\n   * component exported from React Native, and it provides defaults that work better for Expo users.\n   */\n  function StatusBar(_ref) {\n    var style = _ref.style,\n      hideTransitionAnimation = _ref.hideTransitionAnimation,\n      _ref$translucent = _ref.translucent,\n      translucent = _ref$translucent === void 0 ? true : _ref$translucent,\n      backgroundColorProp = _ref.backgroundColor,\n      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    // Pick appropriate default value depending on current theme, so if we are\n    // locked to light mode we don't end up with a light status bar\n    var colorScheme = (0, _reactNative.useColorScheme)();\n    var barStyle = _react.default.useMemo(() => styleToBarStyle(style, colorScheme), [style, colorScheme]);\n\n    // If translucent and no backgroundColor is provided, then use transparent\n    // background\n    var backgroundColor = backgroundColorProp;\n    if (translucent && !backgroundColor) {\n      backgroundColor = 'transparent';\n    }\n    return (0, _jsxRuntime.jsx)(_reactNative.StatusBar, {\n      ...props,\n      translucent: translucent,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      showHideTransition: hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation\n    });\n  }\n\n  // @needsAudit\n  /**\n   * Set the bar style of the status bar.\n   * @param style The color of the status bar text.\n   * @param animated If the transition should be animated.\n   */\n  function setStatusBarStyle(style, animated) {\n    _reactNative.StatusBar.setBarStyle(styleToBarStyle(style), animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the status bar.\n   * @param hidden If the status bar should be hidden.\n   * @param animation Animation to use when toggling hidden, defaults to `'none'`.\n   */\n  var setStatusBarHidden = exports.setStatusBarHidden = _reactNative.StatusBar.setHidden;\n\n  // @needsAudit\n  /**\n   * Set the background color of the status bar.\n   * @param backgroundColor The background color of the status bar.\n   * @param animated `true` to animate the background color change, `false` to change immediately.\n   * @platform android\n   */\n  var setStatusBarBackgroundColor = exports.setStatusBarBackgroundColor = _reactNative.StatusBar.setBackgroundColor;\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the network activity indicator.\n   * @param visible If the network activity indicator should be visible.\n   * @platform ios\n   */\n  var setStatusBarNetworkActivityIndicatorVisible = exports.setStatusBarNetworkActivityIndicatorVisible = _reactNative.StatusBar.setNetworkActivityIndicatorVisible;\n\n  // @needsAudit\n  /**\n   * Set the translucency of the status bar.\n   * @param translucent Whether the app can draw under the status bar. When `true`, content will be\n   * rendered under the status bar. This is always `true` on iOS and cannot be changed.\n   * @platform android\n   */\n  var setStatusBarTranslucent = exports.setStatusBarTranslucent = _reactNative.StatusBar.setTranslucent;\n  function styleToBarStyle() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _reactNative.Appearance?.getColorScheme() ?? 'light';\n    if (!colorScheme) {\n      colorScheme = 'light';\n    }\n    var resolvedStyle = style;\n    if (style === 'auto') {\n      resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n    } else if (style === 'inverted') {\n      resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n    }\n    return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n  }\n});","lineCount":112,"map":[[11,2,1,0],[11,6,1,0,"_react"],[11,12,1,0],[11,15,1,0,"_interopRequireDefault"],[11,37,1,0],[11,38,1,0,"require"],[11,45,1,0],[11,46,1,0,"_dependencyMap"],[11,60,1,0],[12,2,2,0],[12,6,2,0,"_reactNative"],[12,18,2,0],[12,21,2,0,"require"],[12,28,2,0],[12,29,2,0,"_dependencyMap"],[12,43,2,0],[13,2,7,22],[13,6,7,22,"_jsxRuntime"],[13,17,7,22],[13,20,7,22,"require"],[13,27,7,22],[13,28,7,22,"_dependencyMap"],[13,42,7,22],[14,2,7,22],[14,6,7,22,"_excluded"],[14,15,7,22],[15,2,7,22],[15,6,7,22,"_jsxFileName"],[15,18,7,22],[15,252,9,0],[16,2,12,0],[17,2,15,0],[18,2,65,0],[19,0,66,0],[20,0,67,0],[21,0,68,0],[22,0,69,0],[23,0,70,0],[24,0,71,0],[25,0,72,0],[26,0,73,0],[27,0,74,0],[28,2,75,7],[28,11,75,16,"StatusBar"],[28,20,75,25,"StatusBar"],[28,21,75,25,"_ref"],[28,25,75,25],[28,27,81,19],[29,4,81,19],[29,8,76,2,"style"],[29,13,76,7],[29,16,76,7,"_ref"],[29,20,76,7],[29,21,76,2,"style"],[29,26,76,7],[30,6,77,2,"hideTransitionAnimation"],[30,29,77,25],[30,32,77,25,"_ref"],[30,36,77,25],[30,37,77,2,"hideTransitionAnimation"],[30,60,77,25],[31,6,77,25,"_ref$translucent"],[31,22,77,25],[31,25,77,25,"_ref"],[31,29,77,25],[31,30,78,2,"translucent"],[31,41,78,13],[32,6,78,2,"translucent"],[32,17,78,13],[32,20,78,13,"_ref$translucent"],[32,36,78,13],[32,50,78,16],[32,54,78,20],[32,57,78,20,"_ref$translucent"],[32,73,78,20],[33,6,79,19,"backgroundColorProp"],[33,25,79,38],[33,28,79,38,"_ref"],[33,32,79,38],[33,33,79,2,"backgroundColor"],[33,48,79,17],[34,6,80,5,"props"],[34,11,80,10],[34,18,80,10,"_objectWithoutProperties2"],[34,43,80,10],[34,44,80,10,"default"],[34,51,80,10],[34,53,80,10,"_ref"],[34,57,80,10],[34,59,80,10,"_excluded"],[34,68,80,10],[35,4,82,2],[36,4,83,2],[37,4,84,2],[37,8,84,8,"colorScheme"],[37,19,84,19],[37,22,84,22],[37,26,84,22,"useColorScheme"],[37,53,84,36],[37,55,84,37],[37,56,84,38],[38,4,85,2],[38,8,85,8,"barStyle"],[38,16,85,16],[38,19,85,19,"React"],[38,33,85,24],[38,34,85,25,"useMemo"],[38,41,85,32],[38,42,85,33],[38,48,85,39,"styleToBarStyle"],[38,63,85,54],[38,64,85,55,"style"],[38,69,85,60],[38,71,85,62,"colorScheme"],[38,82,85,73],[38,83,85,74],[38,85,85,76],[38,86,85,77,"style"],[38,91,85,82],[38,93,85,84,"colorScheme"],[38,104,85,95],[38,105,85,96],[38,106,85,97],[40,4,87,2],[41,4,88,2],[42,4,89,2],[42,8,89,6,"backgroundColor"],[42,23,89,21],[42,26,89,24,"backgroundColorProp"],[42,45,89,43],[43,4,90,2],[43,8,90,6,"translucent"],[43,19,90,17],[43,23,90,21],[43,24,90,22,"backgroundColor"],[43,39,90,37],[43,41,90,39],[44,6,91,4,"backgroundColor"],[44,21,91,19],[44,24,91,22],[44,37,91,35],[45,4,92,2],[46,4,94,2],[46,11,95,4],[46,15,95,4,"_jsxRuntime"],[46,26,95,4],[46,27,95,4,"jsx"],[46,30,95,4],[46,32,95,5,"_reactNative"],[46,44,95,5],[46,45,95,5,"StatusBar"],[46,54,95,20],[47,6,95,20],[47,9,96,10,"props"],[47,14,96,15],[48,6,97,6,"translucent"],[48,17,97,17],[48,19,97,19,"translucent"],[48,30,97,31],[49,6,98,6,"barStyle"],[49,14,98,14],[49,16,98,16,"barStyle"],[49,24,98,25],[50,6,99,6,"backgroundColor"],[50,21,99,21],[50,23,99,23,"backgroundColor"],[50,38,99,39],[51,6,100,6,"showHideTransition"],[51,24,100,24],[51,26,100,26,"hideTransitionAnimation"],[51,49,100,49],[51,54,100,54],[51,60,100,60],[51,63,100,63,"undefined"],[51,72,100,72],[51,75,100,75,"hideTransitionAnimation"],[52,4,100,99],[52,5,101,5],[52,6,101,6],[53,2,103,0],[55,2,105,0],[56,2,106,0],[57,0,107,0],[58,0,108,0],[59,0,109,0],[60,0,110,0],[61,2,111,7],[61,11,111,16,"setStatusBarStyle"],[61,28,111,33,"setStatusBarStyle"],[61,29,111,34,"style"],[61,34,111,55],[61,36,111,57,"animated"],[61,44,111,75],[61,46,111,77],[62,4,112,2,"NativeStatusBar"],[62,26,112,17],[62,27,112,18,"setBarStyle"],[62,38,112,29],[62,39,112,30,"styleToBarStyle"],[62,54,112,45],[62,55,112,46,"style"],[62,60,112,51],[62,61,112,52],[62,63,112,54,"animated"],[62,71,112,62],[62,72,112,63],[63,2,113,0],[65,2,115,0],[66,2,116,0],[67,0,117,0],[68,0,118,0],[69,0,119,0],[70,0,120,0],[71,2,121,7],[71,6,121,13,"setStatusBarHidden"],[71,24,121,31],[71,27,121,31,"exports"],[71,34,121,31],[71,35,121,31,"setStatusBarHidden"],[71,53,121,31],[71,56,121,34,"NativeStatusBar"],[71,78,121,49],[71,79,121,50,"setHidden"],[71,88,121,59],[73,2,123,0],[74,2,124,0],[75,0,125,0],[76,0,126,0],[77,0,127,0],[78,0,128,0],[79,0,129,0],[80,2,130,7],[80,6,130,13,"setStatusBarBackgroundColor"],[80,33,130,40],[80,36,130,40,"exports"],[80,43,130,40],[80,44,130,40,"setStatusBarBackgroundColor"],[80,71,130,40],[80,74,130,43,"NativeStatusBar"],[80,96,130,58],[80,97,130,59,"setBackgroundColor"],[80,115,130,77],[82,2,132,0],[83,2,133,0],[84,0,134,0],[85,0,135,0],[86,0,136,0],[87,0,137,0],[88,2,138,7],[88,6,138,13,"setStatusBarNetworkActivityIndicatorVisible"],[88,49,138,56],[88,52,138,56,"exports"],[88,59,138,56],[88,60,138,56,"setStatusBarNetworkActivityIndicatorVisible"],[88,103,138,56],[88,106,139,2,"NativeStatusBar"],[88,128,139,17],[88,129,139,18,"setNetworkActivityIndicatorVisible"],[88,163,139,52],[90,2,141,0],[91,2,142,0],[92,0,143,0],[93,0,144,0],[94,0,145,0],[95,0,146,0],[96,0,147,0],[97,2,148,7],[97,6,148,13,"setStatusBarTranslucent"],[97,29,148,36],[97,32,148,36,"exports"],[97,39,148,36],[97,40,148,36,"setStatusBarTranslucent"],[97,63,148,36],[97,66,148,39,"NativeStatusBar"],[97,88,148,54],[97,89,148,55,"setTranslucent"],[97,103,148,69],[98,2,150,0],[98,11,150,9,"styleToBarStyle"],[98,26,150,24,"styleToBarStyle"],[98,27,150,24],[98,29,153,36],[99,4,153,36],[99,8,151,2,"style"],[99,13,151,23],[99,16,151,23,"arguments"],[99,25,151,23],[99,26,151,23,"length"],[99,32,151,23],[99,40,151,23,"arguments"],[99,49,151,23],[99,57,151,23,"undefined"],[99,66,151,23],[99,69,151,23,"arguments"],[99,78,151,23],[99,84,151,26],[99,90,151,32],[100,4,151,32],[100,8,152,2,"colorScheme"],[100,19,152,30],[100,22,152,30,"arguments"],[100,31,152,30],[100,32,152,30,"length"],[100,38,152,30],[100,46,152,30,"arguments"],[100,55,152,30],[100,63,152,30,"undefined"],[100,72,152,30],[100,75,152,30,"arguments"],[100,84,152,30],[100,90,152,33,"Appearance"],[100,113,152,43],[100,115,152,45,"getColorScheme"],[100,129,152,59],[100,130,152,60],[100,131,152,61],[100,135,152,65],[100,142,152,72],[101,4,154,2],[101,8,154,6],[101,9,154,7,"colorScheme"],[101,20,154,18],[101,22,154,20],[102,6,155,4,"colorScheme"],[102,17,155,15],[102,20,155,18],[102,27,155,25],[103,4,156,2],[104,4,158,2],[104,8,158,6,"resolvedStyle"],[104,21,158,19],[104,24,158,22,"style"],[104,29,158,27],[105,4,159,2],[105,8,159,6,"style"],[105,13,159,11],[105,18,159,16],[105,24,159,22],[105,26,159,24],[106,6,160,4,"resolvedStyle"],[106,19,160,17],[106,22,160,20,"colorScheme"],[106,33,160,31],[106,38,160,36],[106,45,160,43],[106,48,160,46],[106,54,160,52],[106,57,160,55],[106,64,160,62],[107,4,161,2],[107,5,161,3],[107,11,161,9],[107,15,161,13,"style"],[107,20,161,18],[107,25,161,23],[107,35,161,33],[107,37,161,35],[108,6,162,4,"resolvedStyle"],[108,19,162,17],[108,22,162,20,"colorScheme"],[108,33,162,31],[108,38,162,36],[108,45,162,43],[108,48,162,46],[108,55,162,53],[108,58,162,56],[108,64,162,62],[109,4,163,2],[110,4,165,2],[110,11,165,9,"resolvedStyle"],[110,24,165,22],[110,29,165,27],[110,36,165,34],[110,39,165,37],[110,54,165,52],[110,57,165,55],[110,71,165,69],[111,2,166,0],[112,0,166,1],[112,3]],"functionMap":{"names":["<global>","StatusBar","React.useMemo$argument_0","setStatusBarStyle","styleToBarStyle"],"mappings":"AAA;OC0E;iCCU,yCD;CDkB;OGQ;CHE;AIqC;CJgB"}},"type":"js/module"}]}