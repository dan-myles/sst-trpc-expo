{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":0,"index":4861}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":0,"index":4861}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":0,"index":4861}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./utils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"XZqiGndSzUFgS+0ABF5nOFWZJRU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RequestManager = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _utils = require(_dependencyMap[3], \"./utils.mjs\");\n  function _define_property(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  /**\n   * Manages WebSocket requests, tracking their lifecycle and providing utility methods\n   * for handling outgoing and pending requests.\n   *\n   * - **Outgoing requests**: Requests that are queued and waiting to be sent.\n   * - **Pending requests**: Requests that have been sent and are in flight awaiting a response.\n   *   For subscriptions, multiple responses may be received until the subscription is closed.\n   */\n  var RequestManager = exports.RequestManager = /*#__PURE__*/function () {\n    function RequestManager() {\n      (0, _classCallCheck2.default)(this, RequestManager);\n      /**\n      * Stores requests that are outgoing, meaning they are registered but not yet sent over the WebSocket.\n      */\n      _define_property(this, \"outgoingRequests\", new Array());\n      /**\n      * Stores requests that are pending (in flight), meaning they have been sent over the WebSocket\n      * and are awaiting responses. For subscriptions, this includes requests\n      * that may receive multiple responses.\n      */\n      _define_property(this, \"pendingRequests\", {});\n    }\n    return (0, _createClass2.default)(RequestManager, [{\n      key: \"register\",\n      value:\n      /**\n      * Registers a new request by adding it to the outgoing queue and setting up\n      * callbacks for lifecycle events such as completion or error.\n      *\n      * @param message - The outgoing message to be sent.\n      * @param callbacks - Callback functions to observe the request's state.\n      * @returns A cleanup function to manually remove the request.\n      */\n      function register(message, callbacks) {\n        var _withResolvers = (0, _utils.withResolvers)(),\n          end = _withResolvers.promise,\n          resolve = _withResolvers.resolve;\n        this.outgoingRequests.push({\n          id: String(message.id),\n          message,\n          end,\n          callbacks: {\n            next: callbacks.next,\n            complete: () => {\n              callbacks.complete();\n              resolve();\n            },\n            error: e => {\n              callbacks.error(e);\n              resolve();\n            }\n          }\n        });\n        return () => {\n          this.delete(message.id);\n          callbacks.complete();\n          resolve();\n        };\n      }\n      /**\n      * Deletes a request from both the outgoing and pending collections, if it exists.\n      */\n    }, {\n      key: \"delete\",\n      value: function _delete(messageId) {\n        if (messageId === null) return;\n        this.outgoingRequests = this.outgoingRequests.filter(_ref => {\n          var id = _ref.id;\n          return id !== String(messageId);\n        });\n        delete this.pendingRequests[String(messageId)];\n      }\n      /**\n      * Moves all outgoing requests to the pending state and clears the outgoing queue.\n      *\n      * The caller is expected to handle the actual sending of the requests\n      * (e.g., sending them over the network) after this method is called.\n      *\n      * @returns The list of requests that were transitioned to the pending state.\n      */\n    }, {\n      key: \"flush\",\n      value: function flush() {\n        var requests = this.outgoingRequests;\n        this.outgoingRequests = [];\n        for (var request of requests) {\n          this.pendingRequests[request.id] = request;\n        }\n        return requests;\n      }\n      /**\n      * Retrieves all currently pending requests, which are in flight awaiting responses\n      * or handling ongoing subscriptions.\n      */\n    }, {\n      key: \"getPendingRequests\",\n      value: function getPendingRequests() {\n        return Object.values(this.pendingRequests);\n      }\n      /**\n      * Retrieves a specific pending request by its message ID.\n      */\n    }, {\n      key: \"getPendingRequest\",\n      value: function getPendingRequest(messageId) {\n        if (messageId === null) return null;\n        return this.pendingRequests[String(messageId)];\n      }\n      /**\n      * Retrieves all outgoing requests, which are waiting to be sent.\n      */\n    }, {\n      key: \"getOutgoingRequests\",\n      value: function getOutgoingRequests() {\n        return this.outgoingRequests;\n      }\n      /**\n      * Retrieves all requests, both outgoing and pending, with their respective states.\n      *\n      * @returns An array of all requests with their state (\"outgoing\" or \"pending\").\n      */\n    }, {\n      key: \"getRequests\",\n      value: function getRequests() {\n        return [...this.getOutgoingRequests().map(request => ({\n          state: 'outgoing',\n          message: request.message,\n          end: request.end,\n          callbacks: request.callbacks\n        })), ...this.getPendingRequests().map(request => ({\n          state: 'pending',\n          message: request.message,\n          end: request.end,\n          callbacks: request.callbacks\n        }))];\n      }\n      /**\n      * Checks if there are any pending requests, including ongoing subscriptions.\n      */\n    }, {\n      key: \"hasPendingRequests\",\n      value: function hasPendingRequests() {\n        return this.getPendingRequests().length > 0;\n      }\n      /**\n      * Checks if there are any outgoing requests waiting to be sent.\n      */\n    }, {\n      key: \"hasOutgoingRequests\",\n      value: function hasOutgoingRequests() {\n        return this.outgoingRequests.length > 0;\n      }\n    }]);\n  }();\n});","lineCount":177,"map":[[9,2,1,0],[9,6,1,0,"_utils"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,3,0],[10,11,3,9,"_define_property"],[10,27,3,25,"_define_property"],[10,28,3,26,"obj"],[10,31,3,29],[10,33,3,31,"key"],[10,36,3,34],[10,38,3,36,"value"],[10,43,3,41],[10,45,3,43],[11,4,4,4],[11,8,4,8,"key"],[11,11,4,11],[11,15,4,15,"obj"],[11,18,4,18],[11,20,4,20],[12,6,5,8,"Object"],[12,12,5,14],[12,13,5,15,"defineProperty"],[12,27,5,29],[12,28,5,30,"obj"],[12,31,5,33],[12,33,5,35,"key"],[12,36,5,38],[12,38,5,40],[13,8,6,12,"value"],[13,13,6,17],[13,15,6,19,"value"],[13,20,6,24],[14,8,7,12,"enumerable"],[14,18,7,22],[14,20,7,24],[14,24,7,28],[15,8,8,12,"configurable"],[15,20,8,24],[15,22,8,26],[15,26,8,30],[16,8,9,12,"writable"],[16,16,9,20],[16,18,9,22],[17,6,10,8],[17,7,10,9],[17,8,10,10],[18,4,11,4],[18,5,11,5],[18,11,11,11],[19,6,12,8,"obj"],[19,9,12,11],[19,10,12,12,"key"],[19,13,12,15],[19,14,12,16],[19,17,12,19,"value"],[19,22,12,24],[20,4,13,4],[21,4,14,4],[21,11,14,11,"obj"],[21,14,14,14],[22,2,15,0],[23,2,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,2,16,0],[31,6,23,10,"RequestManager"],[31,20,23,24],[31,23,23,24,"exports"],[31,30,23,24],[31,31,23,24,"RequestManager"],[31,45,23,24],[32,4,124,4],[32,13,124,4,"RequestManager"],[32,28,124,4],[32,30,124,17],[33,6,124,17],[33,10,124,17,"_classCallCheck2"],[33,26,124,17],[33,27,124,17,"default"],[33,34,124,17],[33,42,124,17,"RequestManager"],[33,56,124,17],[34,6,125,8],[35,0,126,0],[36,0,127,0],[37,6,127,6,"_define_property"],[37,22,127,22],[37,23,127,23],[37,27,127,27],[37,29,127,29],[37,47,127,47],[37,49,127,49],[37,53,127,53,"Array"],[37,58,127,58],[37,59,127,59],[37,60,127,60],[37,61,127,61],[38,6,128,8],[39,0,129,0],[40,0,130,0],[41,0,131,0],[42,0,132,0],[43,6,132,6,"_define_property"],[43,22,132,22],[43,23,132,23],[43,27,132,27],[43,29,132,29],[43,46,132,46],[43,48,132,48],[43,49,132,49],[43,50,132,50],[43,51,132,51],[44,4,133,4],[45,4,133,5],[45,15,133,5,"_createClass2"],[45,28,133,5],[45,29,133,5,"default"],[45,36,133,5],[45,38,133,5,"RequestManager"],[45,52,133,5],[46,6,133,5,"key"],[46,9,133,5],[47,6,133,5,"value"],[47,11,133,5],[48,6,24,4],[49,0,25,0],[50,0,26,0],[51,0,27,0],[52,0,28,0],[53,0,29,0],[54,0,30,0],[55,0,31,0],[56,6,31,6],[56,15,31,6,"register"],[56,23,31,14,"register"],[56,24,31,15,"message"],[56,31,31,22],[56,33,31,24,"callbacks"],[56,42,31,33],[56,44,31,35],[57,8,32,8],[57,12,32,8,"_withResolvers"],[57,26,32,8],[57,29,32,42],[57,33,32,42,"withResolvers"],[57,53,32,55],[57,55,32,56],[57,56,32,57],[58,10,32,25,"end"],[58,13,32,28],[58,16,32,28,"_withResolvers"],[58,30,32,28],[58,31,32,16,"promise"],[58,38,32,23],[59,10,32,30,"resolve"],[59,17,32,37],[59,20,32,37,"_withResolvers"],[59,34,32,37],[59,35,32,30,"resolve"],[59,42,32,37],[60,8,33,8],[60,12,33,12],[60,13,33,13,"outgoingRequests"],[60,29,33,29],[60,30,33,30,"push"],[60,34,33,34],[60,35,33,35],[61,10,34,12,"id"],[61,12,34,14],[61,14,34,16,"String"],[61,20,34,22],[61,21,34,23,"message"],[61,28,34,30],[61,29,34,31,"id"],[61,31,34,33],[61,32,34,34],[62,10,35,12,"message"],[62,17,35,19],[63,10,36,12,"end"],[63,13,36,15],[64,10,37,12,"callbacks"],[64,19,37,21],[64,21,37,23],[65,12,38,16,"next"],[65,16,38,20],[65,18,38,22,"callbacks"],[65,27,38,31],[65,28,38,32,"next"],[65,32,38,36],[66,12,39,16,"complete"],[66,20,39,24],[66,22,39,26,"complete"],[66,23,39,26],[66,28,39,30],[67,14,40,20,"callbacks"],[67,23,40,29],[67,24,40,30,"complete"],[67,32,40,38],[67,33,40,39],[67,34,40,40],[68,14,41,20,"resolve"],[68,21,41,27],[68,22,41,28],[68,23,41,29],[69,12,42,16],[69,13,42,17],[70,12,43,16,"error"],[70,17,43,21],[70,19,43,24,"e"],[70,20,43,25],[70,24,43,28],[71,14,44,20,"callbacks"],[71,23,44,29],[71,24,44,30,"error"],[71,29,44,35],[71,30,44,36,"e"],[71,31,44,37],[71,32,44,38],[72,14,45,20,"resolve"],[72,21,45,27],[72,22,45,28],[72,23,45,29],[73,12,46,16],[74,10,47,12],[75,8,48,8],[75,9,48,9],[75,10,48,10],[76,8,49,8],[76,15,49,15],[76,21,49,19],[77,10,50,12],[77,14,50,16],[77,15,50,17,"delete"],[77,21,50,23],[77,22,50,24,"message"],[77,29,50,31],[77,30,50,32,"id"],[77,32,50,34],[77,33,50,35],[78,10,51,12,"callbacks"],[78,19,51,21],[78,20,51,22,"complete"],[78,28,51,30],[78,29,51,31],[78,30,51,32],[79,10,52,12,"resolve"],[79,17,52,19],[79,18,52,20],[79,19,52,21],[80,8,53,8],[80,9,53,9],[81,6,54,4],[82,6,55,4],[83,0,56,0],[84,0,57,0],[85,4,55,4],[86,6,55,4,"key"],[86,9,55,4],[87,6,55,4,"value"],[87,11,55,4],[87,13,57,6],[87,22,57,6,"delete"],[87,29,57,12,"delete"],[87,30,57,13,"messageId"],[87,39,57,22],[87,41,57,24],[88,8,58,8],[88,12,58,12,"messageId"],[88,21,58,21],[88,26,58,26],[88,30,58,30],[88,32,58,32],[89,8,59,8],[89,12,59,12],[89,13,59,13,"outgoingRequests"],[89,29,59,29],[89,32,59,32],[89,36,59,36],[89,37,59,37,"outgoingRequests"],[89,53,59,53],[89,54,59,54,"filter"],[89,60,59,60],[89,61,59,61,"_ref"],[89,65,59,61],[90,10,59,61],[90,14,59,64,"id"],[90,16,59,66],[90,19,59,66,"_ref"],[90,23,59,66],[90,24,59,64,"id"],[90,26,59,66],[91,10,59,66],[91,17,59,71,"id"],[91,19,59,73],[91,24,59,78,"String"],[91,30,59,84],[91,31,59,85,"messageId"],[91,40,59,94],[91,41,59,95],[92,8,59,95],[92,10,59,96],[93,8,60,8],[93,15,60,15],[93,19,60,19],[93,20,60,20,"pendingRequests"],[93,35,60,35],[93,36,60,36,"String"],[93,42,60,42],[93,43,60,43,"messageId"],[93,52,60,52],[93,53,60,53],[93,54,60,54],[94,6,61,4],[95,6,62,4],[96,0,63,0],[97,0,64,0],[98,0,65,0],[99,0,66,0],[100,0,67,0],[101,0,68,0],[102,0,69,0],[103,4,62,4],[104,6,62,4,"key"],[104,9,62,4],[105,6,62,4,"value"],[105,11,62,4],[105,13,69,6],[105,22,69,6,"flush"],[105,27,69,11,"flush"],[105,28,69,11],[105,30,69,14],[106,8,70,8],[106,12,70,14,"requests"],[106,20,70,22],[106,23,70,25],[106,27,70,29],[106,28,70,30,"outgoingRequests"],[106,44,70,46],[107,8,71,8],[107,12,71,12],[107,13,71,13,"outgoingRequests"],[107,29,71,29],[107,32,71,32],[107,34,71,34],[108,8,72,8],[108,13,72,13],[108,17,72,19,"request"],[108,24,72,26],[108,28,72,30,"requests"],[108,36,72,38],[108,38,72,39],[109,10,73,12],[109,14,73,16],[109,15,73,17,"pendingRequests"],[109,30,73,32],[109,31,73,33,"request"],[109,38,73,40],[109,39,73,41,"id"],[109,41,73,43],[109,42,73,44],[109,45,73,47,"request"],[109,52,73,54],[110,8,74,8],[111,8,75,8],[111,15,75,15,"requests"],[111,23,75,23],[112,6,76,4],[113,6,77,4],[114,0,78,0],[115,0,79,0],[116,0,80,0],[117,4,77,4],[118,6,77,4,"key"],[118,9,77,4],[119,6,77,4,"value"],[119,11,77,4],[119,13,80,6],[119,22,80,6,"getPendingRequests"],[119,40,80,24,"getPendingRequests"],[119,41,80,24],[119,43,80,27],[120,8,81,8],[120,15,81,15,"Object"],[120,21,81,21],[120,22,81,22,"values"],[120,28,81,28],[120,29,81,29],[120,33,81,33],[120,34,81,34,"pendingRequests"],[120,49,81,49],[120,50,81,50],[121,6,82,4],[122,6,83,4],[123,0,84,0],[124,0,85,0],[125,4,83,4],[126,6,83,4,"key"],[126,9,83,4],[127,6,83,4,"value"],[127,11,83,4],[127,13,85,6],[127,22,85,6,"getPendingRequest"],[127,39,85,23,"getPendingRequest"],[127,40,85,24,"messageId"],[127,49,85,33],[127,51,85,35],[128,8,86,8],[128,12,86,12,"messageId"],[128,21,86,21],[128,26,86,26],[128,30,86,30],[128,32,86,32],[128,39,86,39],[128,43,86,43],[129,8,87,8],[129,15,87,15],[129,19,87,19],[129,20,87,20,"pendingRequests"],[129,35,87,35],[129,36,87,36,"String"],[129,42,87,42],[129,43,87,43,"messageId"],[129,52,87,52],[129,53,87,53],[129,54,87,54],[130,6,88,4],[131,6,89,4],[132,0,90,0],[133,0,91,0],[134,4,89,4],[135,6,89,4,"key"],[135,9,89,4],[136,6,89,4,"value"],[136,11,89,4],[136,13,91,6],[136,22,91,6,"getOutgoingRequests"],[136,41,91,25,"getOutgoingRequests"],[136,42,91,25],[136,44,91,28],[137,8,92,8],[137,15,92,15],[137,19,92,19],[137,20,92,20,"outgoingRequests"],[137,36,92,36],[138,6,93,4],[139,6,94,4],[140,0,95,0],[141,0,96,0],[142,0,97,0],[143,0,98,0],[144,4,94,4],[145,6,94,4,"key"],[145,9,94,4],[146,6,94,4,"value"],[146,11,94,4],[146,13,98,6],[146,22,98,6,"getRequests"],[146,33,98,17,"getRequests"],[146,34,98,17],[146,36,98,20],[147,8,99,8],[147,15,99,15],[147,16,100,12],[147,19,100,15],[147,23,100,19],[147,24,100,20,"getOutgoingRequests"],[147,43,100,39],[147,44,100,40],[147,45,100,41],[147,46,100,42,"map"],[147,49,100,45],[147,50,100,47,"request"],[147,57,100,54],[147,62,100,58],[148,10,101,20,"state"],[148,15,101,25],[148,17,101,27],[148,27,101,37],[149,10,102,20,"message"],[149,17,102,27],[149,19,102,29,"request"],[149,26,102,36],[149,27,102,37,"message"],[149,34,102,44],[150,10,103,20,"end"],[150,13,103,23],[150,15,103,25,"request"],[150,22,103,32],[150,23,103,33,"end"],[150,26,103,36],[151,10,104,20,"callbacks"],[151,19,104,29],[151,21,104,31,"request"],[151,28,104,38],[151,29,104,39,"callbacks"],[152,8,105,16],[152,9,105,17],[152,10,105,18],[152,11,105,19],[152,13,106,12],[152,16,106,15],[152,20,106,19],[152,21,106,20,"getPendingRequests"],[152,39,106,38],[152,40,106,39],[152,41,106,40],[152,42,106,41,"map"],[152,45,106,44],[152,46,106,46,"request"],[152,53,106,53],[152,58,106,57],[153,10,107,20,"state"],[153,15,107,25],[153,17,107,27],[153,26,107,36],[154,10,108,20,"message"],[154,17,108,27],[154,19,108,29,"request"],[154,26,108,36],[154,27,108,37,"message"],[154,34,108,44],[155,10,109,20,"end"],[155,13,109,23],[155,15,109,25,"request"],[155,22,109,32],[155,23,109,33,"end"],[155,26,109,36],[156,10,110,20,"callbacks"],[156,19,110,29],[156,21,110,31,"request"],[156,28,110,38],[156,29,110,39,"callbacks"],[157,8,111,16],[157,9,111,17],[157,10,111,18],[157,11,111,19],[157,12,112,9],[158,6,113,4],[159,6,114,4],[160,0,115,0],[161,0,116,0],[162,4,114,4],[163,6,114,4,"key"],[163,9,114,4],[164,6,114,4,"value"],[164,11,114,4],[164,13,116,6],[164,22,116,6,"hasPendingRequests"],[164,40,116,24,"hasPendingRequests"],[164,41,116,24],[164,43,116,27],[165,8,117,8],[165,15,117,15],[165,19,117,19],[165,20,117,20,"getPendingRequests"],[165,38,117,38],[165,39,117,39],[165,40,117,40],[165,41,117,41,"length"],[165,47,117,47],[165,50,117,50],[165,51,117,51],[166,6,118,4],[167,6,119,4],[168,0,120,0],[169,0,121,0],[170,4,119,4],[171,6,119,4,"key"],[171,9,119,4],[172,6,119,4,"value"],[172,11,119,4],[172,13,121,6],[172,22,121,6,"hasOutgoingRequests"],[172,41,121,25,"hasOutgoingRequests"],[172,42,121,25],[172,44,121,28],[173,8,122,8],[173,15,122,15],[173,19,122,19],[173,20,122,20,"outgoingRequests"],[173,36,122,36],[173,37,122,37,"length"],[173,43,122,43],[173,46,122,46],[173,47,122,47],[174,6,123,4],[175,4,123,5],[176,2,123,5],[177,0,123,5],[177,3]],"functionMap":{"names":["<global>","_define_property","RequestManager","RequestManager#register","outgoingRequests.push$argument_0.callbacks.complete","outgoingRequests.push$argument_0.callbacks.error","<anonymous>","RequestManager#_delete","outgoingRequests.filter$argument_0","RequestManager#flush","RequestManager#getPendingRequests","RequestManager#getPendingRequest","RequestManager#getOutgoingRequests","RequestManager#getRequests","getOutgoingRequests.map$argument_0","getPendingRequests.map$argument_0","RequestManager#hasPendingRequests","RequestManager#hasOutgoingRequests","RequestManager#constructor"],"mappings":"AAA;ACE;CDY;IEQ;MCQ;0BCQ;iBDG;uBEC;iBFG;eGG;SHI;KDC;MKG;6DCE,kCD;KLE;MOQ;KPO;MQI;KRE;MSG;KTG;MUG;KVE;MWK;8CCE;kBDK;6CEC;kBFK;KXE;McG;KdE;MeG;KfE;IgBC;KhBS;CFC"}},"type":"js/module"}]}