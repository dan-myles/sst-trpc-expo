{"dependencies":[{"name":"./is.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":154,"index":154}}],"key":"a3kdRR4+YEHt0iAzUCWd5VoNrOQ="}},{"name":"./util.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":155},"end":{"line":2,"column":36,"index":191}}],"key":"aUcbDdENC60aSU0lb8uQwyHqHcs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isInstanceOfRegisteredClass = isInstanceOfRegisteredClass;\n  exports.untransformValue = exports.transformValue = void 0;\n  var _is = require(_dependencyMap[0], \"./is.js\");\n  var _util = require(_dependencyMap[1], \"./util.js\");\n  function simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n      isApplicable,\n      annotation,\n      transform,\n      untransform\n    };\n  }\n  var simpleRules = [simpleTransformation(_is.isUndefined, 'undefined', () => null, () => undefined), simpleTransformation(_is.isBigint, 'bigint', v => v.toString(), v => {\n    if (typeof BigInt !== 'undefined') {\n      return BigInt(v);\n    }\n    console.error('Please add a BigInt polyfill.');\n    return v;\n  }), simpleTransformation(_is.isDate, 'Date', v => v.toISOString(), v => new Date(v)), simpleTransformation(_is.isError, 'Error', (v, superJson) => {\n    var baseError = {\n      name: v.name,\n      message: v.message\n    };\n    superJson.allowedErrorProps.forEach(prop => {\n      baseError[prop] = v[prop];\n    });\n    return baseError;\n  }, (v, superJson) => {\n    var e = new Error(v.message);\n    e.name = v.name;\n    e.stack = v.stack;\n    superJson.allowedErrorProps.forEach(prop => {\n      e[prop] = v[prop];\n    });\n    return e;\n  }), simpleTransformation(_is.isRegExp, 'regexp', v => '' + v, regex => {\n    var body = regex.slice(1, regex.lastIndexOf('/'));\n    var flags = regex.slice(regex.lastIndexOf('/') + 1);\n    return new RegExp(body, flags);\n  }), simpleTransformation(_is.isSet, 'set',\n  // (sets only exist in es6+)\n  // eslint-disable-next-line es5/no-es6-methods\n  v => [...v.values()], v => new Set(v)), simpleTransformation(_is.isMap, 'map', v => [...v.entries()], v => new Map(v)), simpleTransformation(v => (0, _is.isNaNValue)(v) || (0, _is.isInfinite)(v), 'number', v => {\n    if ((0, _is.isNaNValue)(v)) {\n      return 'NaN';\n    }\n    if (v > 0) {\n      return 'Infinity';\n    } else {\n      return '-Infinity';\n    }\n  }, Number), simpleTransformation(v => v === 0 && 1 / v === -Infinity, 'number', () => {\n    return '-0';\n  }, Number), simpleTransformation(_is.isURL, 'URL', v => v.toString(), v => new URL(v))];\n  function compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n      isApplicable,\n      annotation,\n      transform,\n      untransform\n    };\n  }\n  var symbolRule = compositeTransformation((s, superJson) => {\n    if ((0, _is.isSymbol)(s)) {\n      var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n      return isRegistered;\n    }\n    return false;\n  }, (s, superJson) => {\n    var identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n  }, v => v.description, (_, a, superJson) => {\n    var value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n      throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n  });\n  var constructorToName = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, Uint8ClampedArray].reduce((obj, ctor) => {\n    obj[ctor.name] = ctor;\n    return obj;\n  }, {});\n  var typedArrayRule = compositeTransformation(_is.isTypedArray, v => ['typed-array', v.constructor.name], v => [...v], (v, a) => {\n    var ctor = constructorToName[a[1]];\n    if (!ctor) {\n      throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n  });\n  function isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass?.constructor) {\n      var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n      return isRegistered;\n    }\n    return false;\n  }\n  var classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {\n    var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n  }, (clazz, superJson) => {\n    var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n      return {\n        ...clazz\n      };\n    }\n    var result = {};\n    allowedProps.forEach(prop => {\n      result[prop] = clazz[prop];\n    });\n    return result;\n  }, (v, a, superJson) => {\n    var clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n      throw new Error(`Trying to deserialize unknown class '${a[1]}' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564`);\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n  });\n  var customRule = compositeTransformation((value, superJson) => {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n  }, (value, superJson) => {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n  }, (value, superJson) => {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n  }, (v, a, superJson) => {\n    var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n      throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n  });\n  var compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\n  var transformValue = (value, superJson) => {\n    var applicableCompositeRule = (0, _util.findArr)(compositeRules, rule => rule.isApplicable(value, superJson));\n    if (applicableCompositeRule) {\n      return {\n        value: applicableCompositeRule.transform(value, superJson),\n        type: applicableCompositeRule.annotation(value, superJson)\n      };\n    }\n    var applicableSimpleRule = (0, _util.findArr)(simpleRules, rule => rule.isApplicable(value, superJson));\n    if (applicableSimpleRule) {\n      return {\n        value: applicableSimpleRule.transform(value, superJson),\n        type: applicableSimpleRule.annotation\n      };\n    }\n    return undefined;\n  };\n  exports.transformValue = transformValue;\n  var simpleRulesByAnnotation = {};\n  simpleRules.forEach(rule => {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n  });\n  var untransformValue = (json, type, superJson) => {\n    if ((0, _is.isArray)(type)) {\n      switch (type[0]) {\n        case 'symbol':\n          return symbolRule.untransform(json, type, superJson);\n        case 'class':\n          return classRule.untransform(json, type, superJson);\n        case 'custom':\n          return customRule.untransform(json, type, superJson);\n        case 'typed-array':\n          return typedArrayRule.untransform(json, type, superJson);\n        default:\n          throw new Error('Unknown transformation: ' + type);\n      }\n    } else {\n      var transformation = simpleRulesByAnnotation[type];\n      if (!transformation) {\n        throw new Error('Unknown transformation: ' + type);\n      }\n      return transformation.untransform(json, superJson);\n    }\n  };\n  exports.untransformValue = untransformValue;\n});","lineCount":184,"map":[[7,2,1,0],[7,6,1,0,"_is"],[7,9,1,0],[7,12,1,0,"require"],[7,19,1,0],[7,20,1,0,"_dependencyMap"],[7,34,1,0],[8,2,2,0],[8,6,2,0,"_util"],[8,11,2,0],[8,14,2,0,"require"],[8,21,2,0],[8,22,2,0,"_dependencyMap"],[8,36,2,0],[9,2,3,0],[9,11,3,9,"simpleTransformation"],[9,31,3,29,"simpleTransformation"],[9,32,3,30,"isApplicable"],[9,44,3,42],[9,46,3,44,"annotation"],[9,56,3,54],[9,58,3,56,"transform"],[9,67,3,65],[9,69,3,67,"untransform"],[9,80,3,78],[9,82,3,80],[10,4,4,4],[10,11,4,11],[11,6,5,8,"isApplicable"],[11,18,5,20],[12,6,6,8,"annotation"],[12,16,6,18],[13,6,7,8,"transform"],[13,15,7,17],[14,6,8,8,"untransform"],[15,4,9,4],[15,5,9,5],[16,2,10,0],[17,2,11,0],[17,6,11,6,"simpleRules"],[17,17,11,17],[17,20,11,20],[17,21,12,4,"simpleTransformation"],[17,41,12,24],[17,42,12,25,"isUndefined"],[17,57,12,36],[17,59,12,38],[17,70,12,49],[17,72,12,51],[17,78,12,57],[17,82,12,61],[17,84,12,63],[17,90,12,69,"undefined"],[17,99,12,78],[17,100,12,79],[17,102,13,4,"simpleTransformation"],[17,122,13,24],[17,123,13,25,"isBigint"],[17,135,13,33],[17,137,13,35],[17,145,13,43],[17,147,13,45,"v"],[17,148,13,46],[17,152,13,50,"v"],[17,153,13,51],[17,154,13,52,"toString"],[17,162,13,60],[17,163,13,61],[17,164,13,62],[17,166,13,64,"v"],[17,167,13,65],[17,171,13,69],[18,4,14,8],[18,8,14,12],[18,15,14,19,"BigInt"],[18,21,14,25],[18,26,14,30],[18,37,14,41],[18,39,14,43],[19,6,15,12],[19,13,15,19,"BigInt"],[19,19,15,25],[19,20,15,26,"v"],[19,21,15,27],[19,22,15,28],[20,4,16,8],[21,4,17,8,"console"],[21,11,17,15],[21,12,17,16,"error"],[21,17,17,21],[21,18,17,22],[21,49,17,53],[21,50,17,54],[22,4,18,8],[22,11,18,15,"v"],[22,12,18,16],[23,2,19,4],[23,3,19,5],[23,4,19,6],[23,6,20,4,"simpleTransformation"],[23,26,20,24],[23,27,20,25,"isDate"],[23,37,20,31],[23,39,20,33],[23,45,20,39],[23,47,20,41,"v"],[23,48,20,42],[23,52,20,46,"v"],[23,53,20,47],[23,54,20,48,"toISOString"],[23,65,20,59],[23,66,20,60],[23,67,20,61],[23,69,20,63,"v"],[23,70,20,64],[23,74,20,68],[23,78,20,72,"Date"],[23,82,20,76],[23,83,20,77,"v"],[23,84,20,78],[23,85,20,79],[23,86,20,80],[23,88,21,4,"simpleTransformation"],[23,108,21,24],[23,109,21,25,"isError"],[23,120,21,32],[23,122,21,34],[23,129,21,41],[23,131,21,43],[23,132,21,44,"v"],[23,133,21,45],[23,135,21,47,"superJson"],[23,144,21,56],[23,149,21,61],[24,4,22,8],[24,8,22,14,"baseError"],[24,17,22,23],[24,20,22,26],[25,6,23,12,"name"],[25,10,23,16],[25,12,23,18,"v"],[25,13,23,19],[25,14,23,20,"name"],[25,18,23,24],[26,6,24,12,"message"],[26,13,24,19],[26,15,24,21,"v"],[26,16,24,22],[26,17,24,23,"message"],[27,4,25,8],[27,5,25,9],[28,4,26,8,"superJson"],[28,13,26,17],[28,14,26,18,"allowedErrorProps"],[28,31,26,35],[28,32,26,36,"forEach"],[28,39,26,43],[28,40,26,44,"prop"],[28,44,26,48],[28,48,26,52],[29,6,27,12,"baseError"],[29,15,27,21],[29,16,27,22,"prop"],[29,20,27,26],[29,21,27,27],[29,24,27,30,"v"],[29,25,27,31],[29,26,27,32,"prop"],[29,30,27,36],[29,31,27,37],[30,4,28,8],[30,5,28,9],[30,6,28,10],[31,4,29,8],[31,11,29,15,"baseError"],[31,20,29,24],[32,2,30,4],[32,3,30,5],[32,5,30,7],[32,6,30,8,"v"],[32,7,30,9],[32,9,30,11,"superJson"],[32,18,30,20],[32,23,30,25],[33,4,31,8],[33,8,31,14,"e"],[33,9,31,15],[33,12,31,18],[33,16,31,22,"Error"],[33,21,31,27],[33,22,31,28,"v"],[33,23,31,29],[33,24,31,30,"message"],[33,31,31,37],[33,32,31,38],[34,4,32,8,"e"],[34,5,32,9],[34,6,32,10,"name"],[34,10,32,14],[34,13,32,17,"v"],[34,14,32,18],[34,15,32,19,"name"],[34,19,32,23],[35,4,33,8,"e"],[35,5,33,9],[35,6,33,10,"stack"],[35,11,33,15],[35,14,33,18,"v"],[35,15,33,19],[35,16,33,20,"stack"],[35,21,33,25],[36,4,34,8,"superJson"],[36,13,34,17],[36,14,34,18,"allowedErrorProps"],[36,31,34,35],[36,32,34,36,"forEach"],[36,39,34,43],[36,40,34,44,"prop"],[36,44,34,48],[36,48,34,52],[37,6,35,12,"e"],[37,7,35,13],[37,8,35,14,"prop"],[37,12,35,18],[37,13,35,19],[37,16,35,22,"v"],[37,17,35,23],[37,18,35,24,"prop"],[37,22,35,28],[37,23,35,29],[38,4,36,8],[38,5,36,9],[38,6,36,10],[39,4,37,8],[39,11,37,15,"e"],[39,12,37,16],[40,2,38,4],[40,3,38,5],[40,4,38,6],[40,6,39,4,"simpleTransformation"],[40,26,39,24],[40,27,39,25,"isRegExp"],[40,39,39,33],[40,41,39,35],[40,49,39,43],[40,51,39,45,"v"],[40,52,39,46],[40,56,39,50],[40,58,39,52],[40,61,39,55,"v"],[40,62,39,56],[40,64,39,58,"regex"],[40,69,39,63],[40,73,39,67],[41,4,40,8],[41,8,40,14,"body"],[41,12,40,18],[41,15,40,21,"regex"],[41,20,40,26],[41,21,40,27,"slice"],[41,26,40,32],[41,27,40,33],[41,28,40,34],[41,30,40,36,"regex"],[41,35,40,41],[41,36,40,42,"lastIndexOf"],[41,47,40,53],[41,48,40,54],[41,51,40,57],[41,52,40,58],[41,53,40,59],[42,4,41,8],[42,8,41,14,"flags"],[42,13,41,19],[42,16,41,22,"regex"],[42,21,41,27],[42,22,41,28,"slice"],[42,27,41,33],[42,28,41,34,"regex"],[42,33,41,39],[42,34,41,40,"lastIndexOf"],[42,45,41,51],[42,46,41,52],[42,49,41,55],[42,50,41,56],[42,53,41,59],[42,54,41,60],[42,55,41,61],[43,4,42,8],[43,11,42,15],[43,15,42,19,"RegExp"],[43,21,42,25],[43,22,42,26,"body"],[43,26,42,30],[43,28,42,32,"flags"],[43,33,42,37],[43,34,42,38],[44,2,43,4],[44,3,43,5],[44,4,43,6],[44,6,44,4,"simpleTransformation"],[44,26,44,24],[44,27,44,25,"isSet"],[44,36,44,30],[44,38,44,32],[44,43,44,37],[45,2,45,4],[46,2,46,4],[47,2,47,4,"v"],[47,3,47,5],[47,7,47,9],[47,8,47,10],[47,11,47,13,"v"],[47,12,47,14],[47,13,47,15,"values"],[47,19,47,21],[47,20,47,22],[47,21,47,23],[47,22,47,24],[47,24,47,26,"v"],[47,25,47,27],[47,29,47,31],[47,33,47,35,"Set"],[47,36,47,38],[47,37,47,39,"v"],[47,38,47,40],[47,39,47,41],[47,40,47,42],[47,42,48,4,"simpleTransformation"],[47,62,48,24],[47,63,48,25,"isMap"],[47,72,48,30],[47,74,48,32],[47,79,48,37],[47,81,48,39,"v"],[47,82,48,40],[47,86,48,44],[47,87,48,45],[47,90,48,48,"v"],[47,91,48,49],[47,92,48,50,"entries"],[47,99,48,57],[47,100,48,58],[47,101,48,59],[47,102,48,60],[47,104,48,62,"v"],[47,105,48,63],[47,109,48,67],[47,113,48,71,"Map"],[47,116,48,74],[47,117,48,75,"v"],[47,118,48,76],[47,119,48,77],[47,120,48,78],[47,122,49,4,"simpleTransformation"],[47,142,49,24],[47,143,49,26,"v"],[47,144,49,27],[47,148,49,32],[47,152,49,32,"isNaNValue"],[47,166,49,42],[47,168,49,43,"v"],[47,169,49,44],[47,170,49,45],[47,174,49,49],[47,178,49,49,"isInfinite"],[47,192,49,59],[47,194,49,60,"v"],[47,195,49,61],[47,196,49,62],[47,198,49,64],[47,206,49,72],[47,208,49,74,"v"],[47,209,49,75],[47,213,49,79],[48,4,50,8],[48,8,50,12],[48,12,50,12,"isNaNValue"],[48,26,50,22],[48,28,50,23,"v"],[48,29,50,24],[48,30,50,25],[48,32,50,27],[49,6,51,12],[49,13,51,19],[49,18,51,24],[50,4,52,8],[51,4,53,8],[51,8,53,12,"v"],[51,9,53,13],[51,12,53,16],[51,13,53,17],[51,15,53,19],[52,6,54,12],[52,13,54,19],[52,23,54,29],[53,4,55,8],[53,5,55,9],[53,11,56,13],[54,6,57,12],[54,13,57,19],[54,24,57,30],[55,4,58,8],[56,2,59,4],[56,3,59,5],[56,5,59,7,"Number"],[56,11,59,13],[56,12,59,14],[56,14,60,4,"simpleTransformation"],[56,34,60,24],[56,35,60,26,"v"],[56,36,60,27],[56,40,60,32,"v"],[56,41,60,33],[56,46,60,38],[56,47,60,39],[56,51,60,43],[56,52,60,44],[56,55,60,47,"v"],[56,56,60,48],[56,61,60,53],[56,62,60,54,"Infinity"],[56,70,60,62],[56,72,60,64],[56,80,60,72],[56,82,60,74],[56,88,60,80],[57,4,61,8],[57,11,61,15],[57,15,61,19],[58,2,62,4],[58,3,62,5],[58,5,62,7,"Number"],[58,11,62,13],[58,12,62,14],[58,14,63,4,"simpleTransformation"],[58,34,63,24],[58,35,63,25,"isURL"],[58,44,63,30],[58,46,63,32],[58,51,63,37],[58,53,63,39,"v"],[58,54,63,40],[58,58,63,44,"v"],[58,59,63,45],[58,60,63,46,"toString"],[58,68,63,54],[58,69,63,55],[58,70,63,56],[58,72,63,58,"v"],[58,73,63,59],[58,77,63,63],[58,81,63,67,"URL"],[58,84,63,70],[58,85,63,71,"v"],[58,86,63,72],[58,87,63,73],[58,88,63,74],[58,89,64,1],[59,2,65,0],[59,11,65,9,"compositeTransformation"],[59,34,65,32,"compositeTransformation"],[59,35,65,33,"isApplicable"],[59,47,65,45],[59,49,65,47,"annotation"],[59,59,65,57],[59,61,65,59,"transform"],[59,70,65,68],[59,72,65,70,"untransform"],[59,83,65,81],[59,85,65,83],[60,4,66,4],[60,11,66,11],[61,6,67,8,"isApplicable"],[61,18,67,20],[62,6,68,8,"annotation"],[62,16,68,18],[63,6,69,8,"transform"],[63,15,69,17],[64,6,70,8,"untransform"],[65,4,71,4],[65,5,71,5],[66,2,72,0],[67,2,73,0],[67,6,73,6,"symbolRule"],[67,16,73,16],[67,19,73,19,"compositeTransformation"],[67,42,73,42],[67,43,73,43],[67,44,73,44,"s"],[67,45,73,45],[67,47,73,47,"superJson"],[67,56,73,56],[67,61,73,61],[68,4,74,4],[68,8,74,8],[68,12,74,8,"isSymbol"],[68,24,74,16],[68,26,74,17,"s"],[68,27,74,18],[68,28,74,19],[68,30,74,21],[69,6,75,8],[69,10,75,14,"isRegistered"],[69,22,75,26],[69,25,75,29],[69,26,75,30],[69,27,75,31,"superJson"],[69,36,75,40],[69,37,75,41,"symbolRegistry"],[69,51,75,55],[69,52,75,56,"getIdentifier"],[69,65,75,69],[69,66,75,70,"s"],[69,67,75,71],[69,68,75,72],[70,6,76,8],[70,13,76,15,"isRegistered"],[70,25,76,27],[71,4,77,4],[72,4,78,4],[72,11,78,11],[72,16,78,16],[73,2,79,0],[73,3,79,1],[73,5,79,3],[73,6,79,4,"s"],[73,7,79,5],[73,9,79,7,"superJson"],[73,18,79,16],[73,23,79,21],[74,4,80,4],[74,8,80,10,"identifier"],[74,18,80,20],[74,21,80,23,"superJson"],[74,30,80,32],[74,31,80,33,"symbolRegistry"],[74,45,80,47],[74,46,80,48,"getIdentifier"],[74,59,80,61],[74,60,80,62,"s"],[74,61,80,63],[74,62,80,64],[75,4,81,4],[75,11,81,11],[75,12,81,12],[75,20,81,20],[75,22,81,22,"identifier"],[75,32,81,32],[75,33,81,33],[76,2,82,0],[76,3,82,1],[76,5,82,3,"v"],[76,6,82,4],[76,10,82,8,"v"],[76,11,82,9],[76,12,82,10,"description"],[76,23,82,21],[76,25,82,23],[76,26,82,24,"_"],[76,27,82,25],[76,29,82,27,"a"],[76,30,82,28],[76,32,82,30,"superJson"],[76,41,82,39],[76,46,82,44],[77,4,83,4],[77,8,83,10,"value"],[77,13,83,15],[77,16,83,18,"superJson"],[77,25,83,27],[77,26,83,28,"symbolRegistry"],[77,40,83,42],[77,41,83,43,"getValue"],[77,49,83,51],[77,50,83,52,"a"],[77,51,83,53],[77,52,83,54],[77,53,83,55],[77,54,83,56],[77,55,83,57],[78,4,84,4],[78,8,84,8],[78,9,84,9,"value"],[78,14,84,14],[78,16,84,16],[79,6,85,8],[79,12,85,14],[79,16,85,18,"Error"],[79,21,85,23],[79,22,85,24],[79,60,85,62],[79,61,85,63],[80,4,86,4],[81,4,87,4],[81,11,87,11,"value"],[81,16,87,16],[82,2,88,0],[82,3,88,1],[82,4,88,2],[83,2,89,0],[83,6,89,6,"constructorToName"],[83,23,89,23],[83,26,89,26],[83,27,90,4,"Int8Array"],[83,36,90,13],[83,38,91,4,"Uint8Array"],[83,48,91,14],[83,50,92,4,"Int16Array"],[83,60,92,14],[83,62,93,4,"Uint16Array"],[83,73,93,15],[83,75,94,4,"Int32Array"],[83,85,94,14],[83,87,95,4,"Uint32Array"],[83,98,95,15],[83,100,96,4,"Float32Array"],[83,112,96,16],[83,114,97,4,"Float64Array"],[83,126,97,16],[83,128,98,4,"Uint8ClampedArray"],[83,145,98,21],[83,146,99,1],[83,147,99,2,"reduce"],[83,153,99,8],[83,154,99,9],[83,155,99,10,"obj"],[83,158,99,13],[83,160,99,15,"ctor"],[83,164,99,19],[83,169,99,24],[84,4,100,4,"obj"],[84,7,100,7],[84,8,100,8,"ctor"],[84,12,100,12],[84,13,100,13,"name"],[84,17,100,17],[84,18,100,18],[84,21,100,21,"ctor"],[84,25,100,25],[85,4,101,4],[85,11,101,11,"obj"],[85,14,101,14],[86,2,102,0],[86,3,102,1],[86,5,102,3],[86,6,102,4],[86,7,102,5],[86,8,102,6],[87,2,103,0],[87,6,103,6,"typedArrayRule"],[87,20,103,20],[87,23,103,23,"compositeTransformation"],[87,46,103,46],[87,47,103,47,"isTypedArray"],[87,63,103,59],[87,65,103,61,"v"],[87,66,103,62],[87,70,103,66],[87,71,103,67],[87,84,103,80],[87,86,103,82,"v"],[87,87,103,83],[87,88,103,84,"constructor"],[87,99,103,95],[87,100,103,96,"name"],[87,104,103,100],[87,105,103,101],[87,107,103,103,"v"],[87,108,103,104],[87,112,103,108],[87,113,103,109],[87,116,103,112,"v"],[87,117,103,113],[87,118,103,114],[87,120,103,116],[87,121,103,117,"v"],[87,122,103,118],[87,124,103,120,"a"],[87,125,103,121],[87,130,103,126],[88,4,104,4],[88,8,104,10,"ctor"],[88,12,104,14],[88,15,104,17,"constructorToName"],[88,32,104,34],[88,33,104,35,"a"],[88,34,104,36],[88,35,104,37],[88,36,104,38],[88,37,104,39],[88,38,104,40],[89,4,105,4],[89,8,105,8],[89,9,105,9,"ctor"],[89,13,105,13],[89,15,105,15],[90,6,106,8],[90,12,106,14],[90,16,106,18,"Error"],[90,21,106,23],[90,22,106,24],[90,65,106,67],[90,66,106,68],[91,4,107,4],[92,4,108,4],[92,11,108,11],[92,15,108,15,"ctor"],[92,19,108,19],[92,20,108,20,"v"],[92,21,108,21],[92,22,108,22],[93,2,109,0],[93,3,109,1],[93,4,109,2],[94,2,110,7],[94,11,110,16,"isInstanceOfRegisteredClass"],[94,38,110,43,"isInstanceOfRegisteredClass"],[94,39,110,44,"potentialClass"],[94,53,110,58],[94,55,110,60,"superJson"],[94,64,110,69],[94,66,110,71],[95,4,111,4],[95,8,111,8,"potentialClass"],[95,22,111,22],[95,24,111,24,"constructor"],[95,35,111,35],[95,37,111,37],[96,6,112,8],[96,10,112,14,"isRegistered"],[96,22,112,26],[96,25,112,29],[96,26,112,30],[96,27,112,31,"superJson"],[96,36,112,40],[96,37,112,41,"classRegistry"],[96,50,112,54],[96,51,112,55,"getIdentifier"],[96,64,112,68],[96,65,112,69,"potentialClass"],[96,79,112,83],[96,80,112,84,"constructor"],[96,91,112,95],[96,92,112,96],[97,6,113,8],[97,13,113,15,"isRegistered"],[97,25,113,27],[98,4,114,4],[99,4,115,4],[99,11,115,11],[99,16,115,16],[100,2,116,0],[101,2,117,0],[101,6,117,6,"classRule"],[101,15,117,15],[101,18,117,18,"compositeTransformation"],[101,41,117,41],[101,42,117,42,"isInstanceOfRegisteredClass"],[101,69,117,69],[101,71,117,71],[101,72,117,72,"clazz"],[101,77,117,77],[101,79,117,79,"superJson"],[101,88,117,88],[101,93,117,93],[102,4,118,4],[102,8,118,10,"identifier"],[102,18,118,20],[102,21,118,23,"superJson"],[102,30,118,32],[102,31,118,33,"classRegistry"],[102,44,118,46],[102,45,118,47,"getIdentifier"],[102,58,118,60],[102,59,118,61,"clazz"],[102,64,118,66],[102,65,118,67,"constructor"],[102,76,118,78],[102,77,118,79],[103,4,119,4],[103,11,119,11],[103,12,119,12],[103,19,119,19],[103,21,119,21,"identifier"],[103,31,119,31],[103,32,119,32],[104,2,120,0],[104,3,120,1],[104,5,120,3],[104,6,120,4,"clazz"],[104,11,120,9],[104,13,120,11,"superJson"],[104,22,120,20],[104,27,120,25],[105,4,121,4],[105,8,121,10,"allowedProps"],[105,20,121,22],[105,23,121,25,"superJson"],[105,32,121,34],[105,33,121,35,"classRegistry"],[105,46,121,48],[105,47,121,49,"getAllowedProps"],[105,62,121,64],[105,63,121,65,"clazz"],[105,68,121,70],[105,69,121,71,"constructor"],[105,80,121,82],[105,81,121,83],[106,4,122,4],[106,8,122,8],[106,9,122,9,"allowedProps"],[106,21,122,21],[106,23,122,23],[107,6,123,8],[107,13,123,15],[108,8,123,17],[108,11,123,20,"clazz"],[109,6,123,26],[109,7,123,27],[110,4,124,4],[111,4,125,4],[111,8,125,10,"result"],[111,14,125,16],[111,17,125,19],[111,18,125,20],[111,19,125,21],[112,4,126,4,"allowedProps"],[112,16,126,16],[112,17,126,17,"forEach"],[112,24,126,24],[112,25,126,25,"prop"],[112,29,126,29],[112,33,126,33],[113,6,127,8,"result"],[113,12,127,14],[113,13,127,15,"prop"],[113,17,127,19],[113,18,127,20],[113,21,127,23,"clazz"],[113,26,127,28],[113,27,127,29,"prop"],[113,31,127,33],[113,32,127,34],[114,4,128,4],[114,5,128,5],[114,6,128,6],[115,4,129,4],[115,11,129,11,"result"],[115,17,129,17],[116,2,130,0],[116,3,130,1],[116,5,130,3],[116,6,130,4,"v"],[116,7,130,5],[116,9,130,7,"a"],[116,10,130,8],[116,12,130,10,"superJson"],[116,21,130,19],[116,26,130,24],[117,4,131,4],[117,8,131,10,"clazz"],[117,13,131,15],[117,16,131,18,"superJson"],[117,25,131,27],[117,26,131,28,"classRegistry"],[117,39,131,41],[117,40,131,42,"getValue"],[117,48,131,50],[117,49,131,51,"a"],[117,50,131,52],[117,51,131,53],[117,52,131,54],[117,53,131,55],[117,54,131,56],[118,4,132,4],[118,8,132,8],[118,9,132,9,"clazz"],[118,14,132,14],[118,16,132,16],[119,6,133,8],[119,12,133,14],[119,16,133,18,"Error"],[119,21,133,23],[119,22,133,24],[119,62,133,64,"a"],[119,63,133,65],[119,64,133,66],[119,65,133,67],[119,66,133,68],[119,149,133,151],[119,150,133,152],[120,4,134,4],[121,4,135,4],[121,11,135,11,"Object"],[121,17,135,17],[121,18,135,18,"assign"],[121,24,135,24],[121,25,135,25,"Object"],[121,31,135,31],[121,32,135,32,"create"],[121,38,135,38],[121,39,135,39,"clazz"],[121,44,135,44],[121,45,135,45,"prototype"],[121,54,135,54],[121,55,135,55],[121,57,135,57,"v"],[121,58,135,58],[121,59,135,59],[122,2,136,0],[122,3,136,1],[122,4,136,2],[123,2,137,0],[123,6,137,6,"customRule"],[123,16,137,16],[123,19,137,19,"compositeTransformation"],[123,42,137,42],[123,43,137,43],[123,44,137,44,"value"],[123,49,137,49],[123,51,137,51,"superJson"],[123,60,137,60],[123,65,137,65],[124,4,138,4],[124,11,138,11],[124,12,138,12],[124,13,138,13,"superJson"],[124,22,138,22],[124,23,138,23,"customTransformerRegistry"],[124,48,138,48],[124,49,138,49,"findApplicable"],[124,63,138,63],[124,64,138,64,"value"],[124,69,138,69],[124,70,138,70],[125,2,139,0],[125,3,139,1],[125,5,139,3],[125,6,139,4,"value"],[125,11,139,9],[125,13,139,11,"superJson"],[125,22,139,20],[125,27,139,25],[126,4,140,4],[126,8,140,10,"transformer"],[126,19,140,21],[126,22,140,24,"superJson"],[126,31,140,33],[126,32,140,34,"customTransformerRegistry"],[126,57,140,59],[126,58,140,60,"findApplicable"],[126,72,140,74],[126,73,140,75,"value"],[126,78,140,80],[126,79,140,81],[127,4,141,4],[127,11,141,11],[127,12,141,12],[127,20,141,20],[127,22,141,22,"transformer"],[127,33,141,33],[127,34,141,34,"name"],[127,38,141,38],[127,39,141,39],[128,2,142,0],[128,3,142,1],[128,5,142,3],[128,6,142,4,"value"],[128,11,142,9],[128,13,142,11,"superJson"],[128,22,142,20],[128,27,142,25],[129,4,143,4],[129,8,143,10,"transformer"],[129,19,143,21],[129,22,143,24,"superJson"],[129,31,143,33],[129,32,143,34,"customTransformerRegistry"],[129,57,143,59],[129,58,143,60,"findApplicable"],[129,72,143,74],[129,73,143,75,"value"],[129,78,143,80],[129,79,143,81],[130,4,144,4],[130,11,144,11,"transformer"],[130,22,144,22],[130,23,144,23,"serialize"],[130,32,144,32],[130,33,144,33,"value"],[130,38,144,38],[130,39,144,39],[131,2,145,0],[131,3,145,1],[131,5,145,3],[131,6,145,4,"v"],[131,7,145,5],[131,9,145,7,"a"],[131,10,145,8],[131,12,145,10,"superJson"],[131,21,145,19],[131,26,145,24],[132,4,146,4],[132,8,146,10,"transformer"],[132,19,146,21],[132,22,146,24,"superJson"],[132,31,146,33],[132,32,146,34,"customTransformerRegistry"],[132,57,146,59],[132,58,146,60,"findByName"],[132,68,146,70],[132,69,146,71,"a"],[132,70,146,72],[132,71,146,73],[132,72,146,74],[132,73,146,75],[132,74,146,76],[133,4,147,4],[133,8,147,8],[133,9,147,9,"transformer"],[133,20,147,20],[133,22,147,22],[134,6,148,8],[134,12,148,14],[134,16,148,18,"Error"],[134,21,148,23],[134,22,148,24],[134,66,148,68],[134,67,148,69],[135,4,149,4],[136,4,150,4],[136,11,150,11,"transformer"],[136,22,150,22],[136,23,150,23,"deserialize"],[136,34,150,34],[136,35,150,35,"v"],[136,36,150,36],[136,37,150,37],[137,2,151,0],[137,3,151,1],[137,4,151,2],[138,2,152,0],[138,6,152,6,"compositeRules"],[138,20,152,20],[138,23,152,23],[138,24,152,24,"classRule"],[138,33,152,33],[138,35,152,35,"symbolRule"],[138,45,152,45],[138,47,152,47,"customRule"],[138,57,152,57],[138,59,152,59,"typedArrayRule"],[138,73,152,73],[138,74,152,74],[139,2,153,7],[139,6,153,13,"transformValue"],[139,20,153,27],[139,23,153,30,"transformValue"],[139,24,153,31,"value"],[139,29,153,36],[139,31,153,38,"superJson"],[139,40,153,47],[139,45,153,52],[140,4,154,4],[140,8,154,10,"applicableCompositeRule"],[140,31,154,33],[140,34,154,36],[140,38,154,36,"findArr"],[140,51,154,43],[140,53,154,44,"compositeRules"],[140,67,154,58],[140,69,154,60,"rule"],[140,73,154,64],[140,77,154,68,"rule"],[140,81,154,72],[140,82,154,73,"isApplicable"],[140,94,154,85],[140,95,154,86,"value"],[140,100,154,91],[140,102,154,93,"superJson"],[140,111,154,102],[140,112,154,103],[140,113,154,104],[141,4,155,4],[141,8,155,8,"applicableCompositeRule"],[141,31,155,31],[141,33,155,33],[142,6,156,8],[142,13,156,15],[143,8,157,12,"value"],[143,13,157,17],[143,15,157,19,"applicableCompositeRule"],[143,38,157,42],[143,39,157,43,"transform"],[143,48,157,52],[143,49,157,53,"value"],[143,54,157,58],[143,56,157,60,"superJson"],[143,65,157,69],[143,66,157,70],[144,8,158,12,"type"],[144,12,158,16],[144,14,158,18,"applicableCompositeRule"],[144,37,158,41],[144,38,158,42,"annotation"],[144,48,158,52],[144,49,158,53,"value"],[144,54,158,58],[144,56,158,60,"superJson"],[144,65,158,69],[145,6,159,8],[145,7,159,9],[146,4,160,4],[147,4,161,4],[147,8,161,10,"applicableSimpleRule"],[147,28,161,30],[147,31,161,33],[147,35,161,33,"findArr"],[147,48,161,40],[147,50,161,41,"simpleRules"],[147,61,161,52],[147,63,161,54,"rule"],[147,67,161,58],[147,71,161,62,"rule"],[147,75,161,66],[147,76,161,67,"isApplicable"],[147,88,161,79],[147,89,161,80,"value"],[147,94,161,85],[147,96,161,87,"superJson"],[147,105,161,96],[147,106,161,97],[147,107,161,98],[148,4,162,4],[148,8,162,8,"applicableSimpleRule"],[148,28,162,28],[148,30,162,30],[149,6,163,8],[149,13,163,15],[150,8,164,12,"value"],[150,13,164,17],[150,15,164,19,"applicableSimpleRule"],[150,35,164,39],[150,36,164,40,"transform"],[150,45,164,49],[150,46,164,50,"value"],[150,51,164,55],[150,53,164,57,"superJson"],[150,62,164,66],[150,63,164,67],[151,8,165,12,"type"],[151,12,165,16],[151,14,165,18,"applicableSimpleRule"],[151,34,165,38],[151,35,165,39,"annotation"],[152,6,166,8],[152,7,166,9],[153,4,167,4],[154,4,168,4],[154,11,168,11,"undefined"],[154,20,168,20],[155,2,169,0],[155,3,169,1],[156,2,169,2,"exports"],[156,9,169,2],[156,10,169,2,"transformValue"],[156,24,169,2],[156,27,169,2,"transformValue"],[156,41,169,2],[157,2,170,0],[157,6,170,6,"simpleRulesByAnnotation"],[157,29,170,29],[157,32,170,32],[157,33,170,33],[157,34,170,34],[158,2,171,0,"simpleRules"],[158,13,171,11],[158,14,171,12,"forEach"],[158,21,171,19],[158,22,171,20,"rule"],[158,26,171,24],[158,30,171,28],[159,4,172,4,"simpleRulesByAnnotation"],[159,27,172,27],[159,28,172,28,"rule"],[159,32,172,32],[159,33,172,33,"annotation"],[159,43,172,43],[159,44,172,44],[159,47,172,47,"rule"],[159,51,172,51],[160,2,173,0],[160,3,173,1],[160,4,173,2],[161,2,174,7],[161,6,174,13,"untransformValue"],[161,22,174,29],[161,25,174,32,"untransformValue"],[161,26,174,33,"json"],[161,30,174,37],[161,32,174,39,"type"],[161,36,174,43],[161,38,174,45,"superJson"],[161,47,174,54],[161,52,174,59],[162,4,175,4],[162,8,175,8],[162,12,175,8,"isArray"],[162,23,175,15],[162,25,175,16,"type"],[162,29,175,20],[162,30,175,21],[162,32,175,23],[163,6,176,8],[163,14,176,16,"type"],[163,18,176,20],[163,19,176,21],[163,20,176,22],[163,21,176,23],[164,8,177,12],[164,13,177,17],[164,21,177,25],[165,10,178,16],[165,17,178,23,"symbolRule"],[165,27,178,33],[165,28,178,34,"untransform"],[165,39,178,45],[165,40,178,46,"json"],[165,44,178,50],[165,46,178,52,"type"],[165,50,178,56],[165,52,178,58,"superJson"],[165,61,178,67],[165,62,178,68],[166,8,179,12],[166,13,179,17],[166,20,179,24],[167,10,180,16],[167,17,180,23,"classRule"],[167,26,180,32],[167,27,180,33,"untransform"],[167,38,180,44],[167,39,180,45,"json"],[167,43,180,49],[167,45,180,51,"type"],[167,49,180,55],[167,51,180,57,"superJson"],[167,60,180,66],[167,61,180,67],[168,8,181,12],[168,13,181,17],[168,21,181,25],[169,10,182,16],[169,17,182,23,"customRule"],[169,27,182,33],[169,28,182,34,"untransform"],[169,39,182,45],[169,40,182,46,"json"],[169,44,182,50],[169,46,182,52,"type"],[169,50,182,56],[169,52,182,58,"superJson"],[169,61,182,67],[169,62,182,68],[170,8,183,12],[170,13,183,17],[170,26,183,30],[171,10,184,16],[171,17,184,23,"typedArrayRule"],[171,31,184,37],[171,32,184,38,"untransform"],[171,43,184,49],[171,44,184,50,"json"],[171,48,184,54],[171,50,184,56,"type"],[171,54,184,60],[171,56,184,62,"superJson"],[171,65,184,71],[171,66,184,72],[172,8,185,12],[173,10,186,16],[173,16,186,22],[173,20,186,26,"Error"],[173,25,186,31],[173,26,186,32],[173,52,186,58],[173,55,186,61,"type"],[173,59,186,65],[173,60,186,66],[174,6,187,8],[175,4,188,4],[175,5,188,5],[175,11,189,9],[176,6,190,8],[176,10,190,14,"transformation"],[176,24,190,28],[176,27,190,31,"simpleRulesByAnnotation"],[176,50,190,54],[176,51,190,55,"type"],[176,55,190,59],[176,56,190,60],[177,6,191,8],[177,10,191,12],[177,11,191,13,"transformation"],[177,25,191,27],[177,27,191,29],[178,8,192,12],[178,14,192,18],[178,18,192,22,"Error"],[178,23,192,27],[178,24,192,28],[178,50,192,54],[178,53,192,57,"type"],[178,57,192,61],[178,58,192,62],[179,6,193,8],[180,6,194,8],[180,13,194,15,"transformation"],[180,27,194,29],[180,28,194,30,"untransform"],[180,39,194,41],[180,40,194,42,"json"],[180,44,194,46],[180,46,194,48,"superJson"],[180,55,194,57],[180,56,194,58],[181,4,195,4],[182,2,196,0],[182,3,196,1],[183,2,196,2,"exports"],[183,9,196,2],[183,10,196,2,"untransformValue"],[183,26,196,2],[183,29,196,2,"untransformValue"],[183,45,196,2],[184,0,196,2],[184,3]],"functionMap":{"names":["<global>","simpleTransformation","simpleTransformation$argument_2","simpleTransformation$argument_3","superJson.allowedErrorProps.forEach$argument_0","simpleTransformation$argument_0","compositeTransformation","compositeTransformation$argument_0","compositeTransformation$argument_1","compositeTransformation$argument_2","compositeTransformation$argument_3","reduce$argument_0","isInstanceOfRegisteredClass","allowedProps.forEach$argument_0","transformValue","findArr$argument_1","simpleRules.forEach$argument_0","untransformValue"],"mappings":"AAA;ACE;CDO;mDEE,UF,EG,eH;6CEC,iBF,EG;KHM;yCEC,oBF,EG,gBH;2CEC;4CEK;SFE;KFE,EG;4CCI;SDE;KHE;6CEC,WF,EG;KHI;IEI,oBF,EG,eH;uCEC,qBF,EG,eH;yBKC,qCL,YE;KFU;yBKC,qCL,YE;KFE;uCEC,iBF,EG,eH;AME;CNO;2COC;CPM,EQ;CRG,ES,kBT,EU;CVM;SWW;CXG;6DQC,wCR,ES,WT,EU;CVM;OYC;CZM;uEQC;CRG,ES;yBIM;KJE;CTE,EU;CVM;2COC;CPE,EQ;CRG,ES;CTG,EU;CVM;8BcE;4DCC,2CD;sDCO,2CD;CdQ;oBgBE;ChBE;gCiBC;CjBsB"}},"type":"js/module"}]}