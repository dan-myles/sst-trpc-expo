{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":240,"column":0,"index":8227}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":240,"column":0,"index":8227}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":240,"column":0,"index":8227}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/awaitAsyncGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":240,"column":0,"index":8227}}],"key":"KCCfGbYhud/8hhSaB9A6dGsbQ8Y="}},{"name":"@babel/runtime/helpers/wrapAsyncGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":240,"column":0,"index":8227}}],"key":"Q34jBtfqFEZOuHnQUQqZu1j3ZM4="}},{"name":"./createDeferred.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"3SzjOcinqh/irF+jUvncPRH917U="}},{"name":"./disposable.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":53,"index":108}}],"key":"FjuGhVot45ea2yUqZisUwHKFkrM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.mergeAsyncIterables = mergeAsyncIterables;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _awaitAsyncGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/awaitAsyncGenerator\"));\n  var _wrapAsyncGenerator2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/wrapAsyncGenerator\"));\n  var _createDeferred = require(_dependencyMap[5], \"./createDeferred.mjs\");\n  var _disposable = require(_dependencyMap[6], \"./disposable.mjs\");\n  function _ts_add_disposable_resource(env, value, async) {\n    if (value !== null && value !== void 0) {\n      if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n      var dispose, inner;\n      {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n      }\n      if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n        inner = dispose;\n      }\n      if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n      if (inner) dispose = function () {\n        try {\n          inner.call(this);\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      };\n      env.stack.push({\n        value: value,\n        dispose: dispose,\n        async: async\n      });\n    } else {\n      env.stack.push({\n        async: true\n      });\n    }\n    return value;\n  }\n  function _ts_dispose_resources(env) {\n    var _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n      var e = new Error(message);\n      return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n    };\n    return (_ts_dispose_resources = function _ts_dispose_resources(env) {\n      function fail(e) {\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n      }\n      var r,\n        s = 0;\n      function next() {\n        while (r = env.stack.pop()) {\n          try {\n            if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n            if (r.dispose) {\n              var result = r.dispose.call(r.value);\n              if (r.async) return s |= 2, Promise.resolve(result).then(next, function (e) {\n                fail(e);\n                return next();\n              });\n            } else s |= 1;\n          } catch (e) {\n            fail(e);\n          }\n        }\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n        if (env.hasError) throw env.error;\n      }\n      return next();\n    })(env);\n  }\n  function createManagedIterator(iterable, onResult) {\n    var iterator = iterable[Symbol.asyncIterator]();\n    var state = 'idle';\n    function cleanup() {\n      state = 'done';\n      onResult = () => {\n        // noop\n      };\n    }\n    function pull() {\n      if (state !== 'idle') {\n        return;\n      }\n      state = 'pending';\n      var next = iterator.next();\n      next.then(result => {\n        if (result.done) {\n          state = 'done';\n          onResult({\n            status: 'return',\n            value: result.value\n          });\n          cleanup();\n          return;\n        }\n        state = 'idle';\n        onResult({\n          status: 'yield',\n          value: result.value\n        });\n      }).catch(cause => {\n        onResult({\n          status: 'error',\n          error: cause\n        });\n        cleanup();\n      });\n    }\n    return {\n      pull,\n      destroy: function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* () {\n          cleanup();\n          yield iterator.return?.();\n        });\n        return function destroy() {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    };\n  }\n  /**\n   * Creates a new async iterable that merges multiple async iterables into a single stream.\n   * Values from the input iterables are yielded in the order they resolve, similar to Promise.race().\n   *\n   * New iterables can be added dynamically using the returned {@link MergedAsyncIterables.add} method, even after iteration has started.\n   *\n   * If any of the input iterables throws an error, that error will be propagated through the merged stream.\n   * Other iterables will not continue to be processed.\n   *\n   * @template TYield The type of values yielded by the input iterables\n   */\n  function mergeAsyncIterables() {\n    var state = 'idle';\n    var flushSignal = (0, _createDeferred.createDeferred)();\n    /**\n    * used while {@link state} is `idle`\n    */\n    var iterables = [];\n    /**\n    * used while {@link state} is `pending`\n    */\n    var iterators = new Set();\n    var buffer = [];\n    function initIterable(iterable) {\n      if (state !== 'pending') {\n        // shouldn't happen\n        return;\n      }\n      var iterator = createManagedIterator(iterable, result => {\n        if (state !== 'pending') {\n          // shouldn't happen\n          return;\n        }\n        switch (result.status) {\n          case 'yield':\n            buffer.push([iterator, result]);\n            break;\n          case 'return':\n            iterators.delete(iterator);\n            break;\n          case 'error':\n            buffer.push([iterator, result]);\n            iterators.delete(iterator);\n            break;\n        }\n        flushSignal.resolve();\n      });\n      iterators.add(iterator);\n      iterator.pull();\n    }\n    return {\n      add(iterable) {\n        switch (state) {\n          case 'idle':\n            iterables.push(iterable);\n            break;\n          case 'pending':\n            initIterable(iterable);\n            break;\n        }\n      },\n      [Symbol.asyncIterator]() {\n        return (0, _wrapAsyncGenerator2.default)(function* () {\n          var env = {\n            stack: [],\n            error: void 0,\n            hasError: false\n          };\n          try {\n            if (state !== 'idle') {\n              throw new Error('Cannot iterate twice');\n            }\n            state = 'pending';\n            var _finally = _ts_add_disposable_resource(env, (0, _disposable.makeAsyncResource)({}, /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n              state = 'done';\n              var errors = [];\n              yield Promise.all(Array.from(iterators.values()).map(/*#__PURE__*/function () {\n                var _ref3 = (0, _asyncToGenerator2.default)(function* (it) {\n                  try {\n                    yield it.destroy();\n                  } catch (cause) {\n                    errors.push(cause);\n                  }\n                });\n                return function (_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n              buffer.length = 0;\n              iterators.clear();\n              flushSignal.resolve();\n              if (errors.length > 0) {\n                throw new AggregateError(errors);\n              }\n            })), true);\n            ;\n            while (iterables.length > 0) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              initIterable(iterables.shift());\n            }\n            while (iterators.size > 0) {\n              yield (0, _awaitAsyncGenerator2.default)(flushSignal.promise);\n              while (buffer.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                var _buffer$shift = buffer.shift(),\n                  _buffer$shift2 = (0, _slicedToArray2.default)(_buffer$shift, 2),\n                  iterator = _buffer$shift2[0],\n                  result = _buffer$shift2[1];\n                switch (result.status) {\n                  case 'yield':\n                    yield result.value;\n                    iterator.pull();\n                    break;\n                  case 'error':\n                    throw result.error;\n                }\n              }\n              flushSignal = (0, _createDeferred.createDeferred)();\n            }\n          } catch (e) {\n            env.error = e;\n            env.hasError = true;\n          } finally {\n            var _result = _ts_dispose_resources(env);\n            if (_result) yield (0, _awaitAsyncGenerator2.default)(_result);\n          }\n        })();\n      }\n    };\n  }\n});","lineCount":260,"map":[[11,2,1,0],[11,6,1,0,"_createDeferred"],[11,21,1,0],[11,24,1,0,"require"],[11,31,1,0],[11,32,1,0,"_dependencyMap"],[11,46,1,0],[12,2,2,0],[12,6,2,0,"_disposable"],[12,17,2,0],[12,20,2,0,"require"],[12,27,2,0],[12,28,2,0,"_dependencyMap"],[12,42,2,0],[13,2,4,0],[13,11,4,9,"_ts_add_disposable_resource"],[13,38,4,36,"_ts_add_disposable_resource"],[13,39,4,37,"env"],[13,42,4,40],[13,44,4,42,"value"],[13,49,4,47],[13,51,4,49,"async"],[13,56,4,54],[13,58,4,56],[14,4,5,4],[14,8,5,8,"value"],[14,13,5,13],[14,18,5,18],[14,22,5,22],[14,26,5,26,"value"],[14,31,5,31],[14,36,5,36],[14,41,5,41],[14,42,5,42],[14,44,5,44],[15,6,6,8],[15,10,6,12],[15,17,6,19,"value"],[15,22,6,24],[15,27,6,29],[15,35,6,37],[15,39,6,41],[15,46,6,48,"value"],[15,51,6,53],[15,56,6,58],[15,66,6,68],[15,68,6,70],[15,74,6,76],[15,78,6,80,"TypeError"],[15,87,6,89],[15,88,6,90],[15,106,6,108],[15,107,6,109],[16,6,7,8],[16,10,7,12,"dispose"],[16,17,7,19],[16,19,7,21,"inner"],[16,24,7,26],[17,6,8,8],[18,8,9,12],[18,12,9,16],[18,13,9,17,"Symbol"],[18,19,9,23],[18,20,9,24,"asyncDispose"],[18,32,9,36],[18,34,9,38],[18,40,9,44],[18,44,9,48,"TypeError"],[18,53,9,57],[18,54,9,58],[18,91,9,95],[18,92,9,96],[19,8,10,12,"dispose"],[19,15,10,19],[19,18,10,22,"value"],[19,23,10,27],[19,24,10,28,"Symbol"],[19,30,10,34],[19,31,10,35,"asyncDispose"],[19,43,10,47],[19,44,10,48],[20,6,11,8],[21,6,12,8],[21,10,12,12,"dispose"],[21,17,12,19],[21,22,12,24],[21,27,12,29],[21,28,12,30],[21,30,12,32],[22,8,13,12],[22,12,13,16],[22,13,13,17,"Symbol"],[22,19,13,23],[22,20,13,24,"dispose"],[22,27,13,31],[22,29,13,33],[22,35,13,39],[22,39,13,43,"TypeError"],[22,48,13,52],[22,49,13,53],[22,81,13,85],[22,82,13,86],[23,8,14,12,"dispose"],[23,15,14,19],[23,18,14,22,"value"],[23,23,14,27],[23,24,14,28,"Symbol"],[23,30,14,34],[23,31,14,35,"dispose"],[23,38,14,42],[23,39,14,43],[24,8,15,12,"inner"],[24,13,15,17],[24,16,15,20,"dispose"],[24,23,15,27],[25,6,16,8],[26,6,17,8],[26,10,17,12],[26,17,17,19,"dispose"],[26,24,17,26],[26,29,17,31],[26,39,17,41],[26,41,17,43],[26,47,17,49],[26,51,17,53,"TypeError"],[26,60,17,62],[26,61,17,63],[26,85,17,87],[26,86,17,88],[27,6,18,8],[27,10,18,12,"inner"],[27,15,18,17],[27,17,18,19,"dispose"],[27,24,18,26],[27,27,18,29],[27,36,18,29,"dispose"],[27,37,18,29],[27,39,18,40],[28,8,19,12],[28,12,19,16],[29,10,20,16,"inner"],[29,15,20,21],[29,16,20,22,"call"],[29,20,20,26],[29,21,20,27],[29,25,20,31],[29,26,20,32],[30,8,21,12],[30,9,21,13],[30,10,21,14],[30,17,21,21,"e"],[30,18,21,22],[30,20,21,24],[31,10,22,16],[31,17,22,23,"Promise"],[31,24,22,30],[31,25,22,31,"reject"],[31,31,22,37],[31,32,22,38,"e"],[31,33,22,39],[31,34,22,40],[32,8,23,12],[33,6,24,8],[33,7,24,9],[34,6,25,8,"env"],[34,9,25,11],[34,10,25,12,"stack"],[34,15,25,17],[34,16,25,18,"push"],[34,20,25,22],[34,21,25,23],[35,8,26,12,"value"],[35,13,26,17],[35,15,26,19,"value"],[35,20,26,24],[36,8,27,12,"dispose"],[36,15,27,19],[36,17,27,21,"dispose"],[36,24,27,28],[37,8,28,12,"async"],[37,13,28,17],[37,15,28,19,"async"],[38,6,29,8],[38,7,29,9],[38,8,29,10],[39,4,30,4],[39,5,30,5],[39,11,30,11],[40,6,31,8,"env"],[40,9,31,11],[40,10,31,12,"stack"],[40,15,31,17],[40,16,31,18,"push"],[40,20,31,22],[40,21,31,23],[41,8,32,12,"async"],[41,13,32,17],[41,15,32,19],[42,6,33,8],[42,7,33,9],[42,8,33,10],[43,4,34,4],[44,4,35,4],[44,11,35,11,"value"],[44,16,35,16],[45,2,36,0],[46,2,37,0],[46,11,37,9,"_ts_dispose_resources"],[46,32,37,30,"_ts_dispose_resources"],[46,33,37,31,"env"],[46,36,37,34],[46,38,37,36],[47,4,38,4],[47,8,38,8,"_SuppressedError"],[47,24,38,24],[47,27,38,27],[47,34,38,34,"SuppressedError"],[47,49,38,49],[47,54,38,54],[47,64,38,64],[47,67,38,67,"SuppressedError"],[47,82,38,82],[47,85,38,85],[47,95,38,94,"error"],[47,100,38,99],[47,102,38,101,"suppressed"],[47,112,38,111],[47,114,38,113,"message"],[47,121,38,120],[47,123,38,122],[48,6,39,8],[48,10,39,12,"e"],[48,11,39,13],[48,14,39,16],[48,18,39,20,"Error"],[48,23,39,25],[48,24,39,26,"message"],[48,31,39,33],[48,32,39,34],[49,6,40,8],[49,13,40,15,"e"],[49,14,40,16],[49,15,40,17,"name"],[49,19,40,21],[49,22,40,24],[49,39,40,41],[49,41,40,43,"e"],[49,42,40,44],[49,43,40,45,"error"],[49,48,40,50],[49,51,40,53,"error"],[49,56,40,58],[49,58,40,60,"e"],[49,59,40,61],[49,60,40,62,"suppressed"],[49,70,40,72],[49,73,40,75,"suppressed"],[49,83,40,85],[49,85,40,87,"e"],[49,86,40,88],[50,4,41,4],[50,5,41,5],[51,4,42,4],[51,11,42,11],[51,12,42,12,"_ts_dispose_resources"],[51,33,42,33],[51,36,42,36],[51,45,42,45,"_ts_dispose_resources"],[51,66,42,66,"_ts_dispose_resources"],[51,67,42,67,"env"],[51,70,42,70],[51,72,42,72],[52,6,43,8],[52,15,43,17,"fail"],[52,19,43,21,"fail"],[52,20,43,22,"e"],[52,21,43,23],[52,23,43,25],[53,8,44,12,"env"],[53,11,44,15],[53,12,44,16,"error"],[53,17,44,21],[53,20,44,24,"env"],[53,23,44,27],[53,24,44,28,"hasError"],[53,32,44,36],[53,35,44,39],[53,39,44,43,"_SuppressedError"],[53,55,44,59],[53,56,44,60,"e"],[53,57,44,61],[53,59,44,63,"env"],[53,62,44,66],[53,63,44,67,"error"],[53,68,44,72],[53,70,44,74],[53,112,44,116],[53,113,44,117],[53,116,44,120,"e"],[53,117,44,121],[54,8,45,12,"env"],[54,11,45,15],[54,12,45,16,"hasError"],[54,20,45,24],[54,23,45,27],[54,27,45,31],[55,6,46,8],[56,6,47,8],[56,10,47,12,"r"],[56,11,47,13],[57,8,47,15,"s"],[57,9,47,16],[57,12,47,19],[57,13,47,20],[58,6,48,8],[58,15,48,17,"next"],[58,19,48,21,"next"],[58,20,48,21],[58,22,48,24],[59,8,49,12],[59,15,49,18,"r"],[59,16,49,19],[59,19,49,22,"env"],[59,22,49,25],[59,23,49,26,"stack"],[59,28,49,31],[59,29,49,32,"pop"],[59,32,49,35],[59,33,49,36],[59,34,49,37],[59,36,49,38],[60,10,50,16],[60,14,50,20],[61,12,51,20],[61,16,51,24],[61,17,51,25,"r"],[61,18,51,26],[61,19,51,27,"async"],[61,24,51,32],[61,28,51,36,"s"],[61,29,51,37],[61,34,51,42],[61,35,51,43],[61,37,51,45],[61,44,51,52,"s"],[61,45,51,53],[61,48,51,56],[61,49,51,57],[61,51,51,59,"env"],[61,54,51,62],[61,55,51,63,"stack"],[61,60,51,68],[61,61,51,69,"push"],[61,65,51,73],[61,66,51,74,"r"],[61,67,51,75],[61,68,51,76],[61,70,51,78,"Promise"],[61,77,51,85],[61,78,51,86,"resolve"],[61,85,51,93],[61,86,51,94],[61,87,51,95],[61,88,51,96,"then"],[61,92,51,100],[61,93,51,101,"next"],[61,97,51,105],[61,98,51,106],[62,12,52,20],[62,16,52,24,"r"],[62,17,52,25],[62,18,52,26,"dispose"],[62,25,52,33],[62,27,52,35],[63,14,53,24],[63,18,53,28,"result"],[63,24,53,34],[63,27,53,37,"r"],[63,28,53,38],[63,29,53,39,"dispose"],[63,36,53,46],[63,37,53,47,"call"],[63,41,53,51],[63,42,53,52,"r"],[63,43,53,53],[63,44,53,54,"value"],[63,49,53,59],[63,50,53,60],[64,14,54,24],[64,18,54,28,"r"],[64,19,54,29],[64,20,54,30,"async"],[64,25,54,35],[64,27,54,37],[64,34,54,44,"s"],[64,35,54,45],[64,39,54,49],[64,40,54,50],[64,42,54,52,"Promise"],[64,49,54,59],[64,50,54,60,"resolve"],[64,57,54,67],[64,58,54,68,"result"],[64,64,54,74],[64,65,54,75],[64,66,54,76,"then"],[64,70,54,80],[64,71,54,81,"next"],[64,75,54,85],[64,77,54,87],[64,87,54,96,"e"],[64,88,54,97],[64,90,54,99],[65,16,55,28,"fail"],[65,20,55,32],[65,21,55,33,"e"],[65,22,55,34],[65,23,55,35],[66,16,56,28],[66,23,56,35,"next"],[66,27,56,39],[66,28,56,40],[66,29,56,41],[67,14,57,24],[67,15,57,25],[67,16,57,26],[68,12,58,20],[68,13,58,21],[68,19,58,27,"s"],[68,20,58,28],[68,24,58,32],[68,25,58,33],[69,10,59,16],[69,11,59,17],[69,12,59,18],[69,19,59,25,"e"],[69,20,59,26],[69,22,59,28],[70,12,60,20,"fail"],[70,16,60,24],[70,17,60,25,"e"],[70,18,60,26],[70,19,60,27],[71,10,61,16],[72,8,62,12],[73,8,63,12],[73,12,63,16,"s"],[73,13,63,17],[73,18,63,22],[73,19,63,23],[73,21,63,25],[73,28,63,32,"env"],[73,31,63,35],[73,32,63,36,"hasError"],[73,40,63,44],[73,43,63,47,"Promise"],[73,50,63,54],[73,51,63,55,"reject"],[73,57,63,61],[73,58,63,62,"env"],[73,61,63,65],[73,62,63,66,"error"],[73,67,63,71],[73,68,63,72],[73,71,63,75,"Promise"],[73,78,63,82],[73,79,63,83,"resolve"],[73,86,63,90],[73,87,63,91],[73,88,63,92],[74,8,64,12],[74,12,64,16,"env"],[74,15,64,19],[74,16,64,20,"hasError"],[74,24,64,28],[74,26,64,30],[74,32,64,36,"env"],[74,35,64,39],[74,36,64,40,"error"],[74,41,64,45],[75,6,65,8],[76,6,66,8],[76,13,66,15,"next"],[76,17,66,19],[76,18,66,20],[76,19,66,21],[77,4,67,4],[77,5,67,5],[77,7,67,7,"env"],[77,10,67,10],[77,11,67,11],[78,2,68,0],[79,2,69,0],[79,11,69,9,"createManagedIterator"],[79,32,69,30,"createManagedIterator"],[79,33,69,31,"iterable"],[79,41,69,39],[79,43,69,41,"onResult"],[79,51,69,49],[79,53,69,51],[80,4,70,4],[80,8,70,10,"iterator"],[80,16,70,18],[80,19,70,21,"iterable"],[80,27,70,29],[80,28,70,30,"Symbol"],[80,34,70,36],[80,35,70,37,"asyncIterator"],[80,48,70,50],[80,49,70,51],[80,50,70,52],[80,51,70,53],[81,4,71,4],[81,8,71,8,"state"],[81,13,71,13],[81,16,71,16],[81,22,71,22],[82,4,72,4],[82,13,72,13,"cleanup"],[82,20,72,20,"cleanup"],[82,21,72,20],[82,23,72,23],[83,6,73,8,"state"],[83,11,73,13],[83,14,73,16],[83,20,73,22],[84,6,74,8,"onResult"],[84,14,74,16],[84,17,74,19,"onResult"],[84,18,74,19],[84,23,74,23],[85,8,75,8],[86,6,75,8],[86,7,76,9],[87,4,77,4],[88,4,78,4],[88,13,78,13,"pull"],[88,17,78,17,"pull"],[88,18,78,17],[88,20,78,20],[89,6,79,8],[89,10,79,12,"state"],[89,15,79,17],[89,20,79,22],[89,26,79,28],[89,28,79,30],[90,8,80,12],[91,6,81,8],[92,6,82,8,"state"],[92,11,82,13],[92,14,82,16],[92,23,82,25],[93,6,83,8],[93,10,83,14,"next"],[93,14,83,18],[93,17,83,21,"iterator"],[93,25,83,29],[93,26,83,30,"next"],[93,30,83,34],[93,31,83,35],[93,32,83,36],[94,6,84,8,"next"],[94,10,84,12],[94,11,84,13,"then"],[94,15,84,17],[94,16,84,19,"result"],[94,22,84,25],[94,26,84,28],[95,8,85,12],[95,12,85,16,"result"],[95,18,85,22],[95,19,85,23,"done"],[95,23,85,27],[95,25,85,29],[96,10,86,16,"state"],[96,15,86,21],[96,18,86,24],[96,24,86,30],[97,10,87,16,"onResult"],[97,18,87,24],[97,19,87,25],[98,12,88,20,"status"],[98,18,88,26],[98,20,88,28],[98,28,88,36],[99,12,89,20,"value"],[99,17,89,25],[99,19,89,27,"result"],[99,25,89,33],[99,26,89,34,"value"],[100,10,90,16],[100,11,90,17],[100,12,90,18],[101,10,91,16,"cleanup"],[101,17,91,23],[101,18,91,24],[101,19,91,25],[102,10,92,16],[103,8,93,12],[104,8,94,12,"state"],[104,13,94,17],[104,16,94,20],[104,22,94,26],[105,8,95,12,"onResult"],[105,16,95,20],[105,17,95,21],[106,10,96,16,"status"],[106,16,96,22],[106,18,96,24],[106,25,96,31],[107,10,97,16,"value"],[107,15,97,21],[107,17,97,23,"result"],[107,23,97,29],[107,24,97,30,"value"],[108,8,98,12],[108,9,98,13],[108,10,98,14],[109,6,99,8],[109,7,99,9],[109,8,99,10],[109,9,99,11,"catch"],[109,14,99,16],[109,15,99,18,"cause"],[109,20,99,23],[109,24,99,26],[110,8,100,12,"onResult"],[110,16,100,20],[110,17,100,21],[111,10,101,16,"status"],[111,16,101,22],[111,18,101,24],[111,25,101,31],[112,10,102,16,"error"],[112,15,102,21],[112,17,102,23,"cause"],[113,8,103,12],[113,9,103,13],[113,10,103,14],[114,8,104,12,"cleanup"],[114,15,104,19],[114,16,104,20],[114,17,104,21],[115,6,105,8],[115,7,105,9],[115,8,105,10],[116,4,106,4],[117,4,107,4],[117,11,107,11],[118,6,108,8,"pull"],[118,10,108,12],[119,6,109,8,"destroy"],[119,13,109,15],[120,8,109,15],[120,12,109,15,"_ref"],[120,16,109,15],[120,23,109,15,"_asyncToGenerator2"],[120,41,109,15],[120,42,109,15,"default"],[120,49,109,15],[120,51,109,17],[120,64,109,27],[121,10,110,12,"cleanup"],[121,17,110,19],[121,18,110,20],[121,19,110,21],[122,10,111,12],[122,16,111,18,"iterator"],[122,24,111,26],[122,25,111,27,"return"],[122,31,111,33],[122,34,111,36],[122,35,111,37],[123,8,112,8],[123,9,112,9],[124,8,112,9],[124,24,109,8,"destroy"],[124,31,109,15,"destroy"],[124,32,109,15],[125,10,109,15],[125,17,109,15,"_ref"],[125,21,109,15],[125,22,109,15,"apply"],[125,27,109,15],[125,34,109,15,"arguments"],[125,43,109,15],[126,8,109,15],[127,6,109,15],[128,4,113,4],[128,5,113,5],[129,2,114,0],[130,2,115,0],[131,0,116,0],[132,0,117,0],[133,0,118,0],[134,0,119,0],[135,0,120,0],[136,0,121,0],[137,0,122,0],[138,0,123,0],[139,0,124,0],[140,0,125,0],[141,2,125,4],[141,11,125,13,"mergeAsyncIterables"],[141,30,125,32,"mergeAsyncIterables"],[141,31,125,32],[141,33,125,35],[142,4,126,4],[142,8,126,8,"state"],[142,13,126,13],[142,16,126,16],[142,22,126,22],[143,4,127,4],[143,8,127,8,"flushSignal"],[143,19,127,19],[143,22,127,22],[143,26,127,22,"createDeferred"],[143,56,127,36],[143,58,127,37],[143,59,127,38],[144,4,128,4],[145,0,129,0],[146,0,130,0],[147,4,130,6],[147,8,130,12,"iterables"],[147,17,130,21],[147,20,130,24],[147,22,130,26],[148,4,131,4],[149,0,132,0],[150,0,133,0],[151,4,133,6],[151,8,133,12,"iterators"],[151,17,133,21],[151,20,133,24],[151,24,133,28,"Set"],[151,27,133,31],[151,28,133,32],[151,29,133,33],[152,4,134,4],[152,8,134,10,"buffer"],[152,14,134,16],[152,17,134,19],[152,19,134,21],[153,4,135,4],[153,13,135,13,"initIterable"],[153,25,135,25,"initIterable"],[153,26,135,26,"iterable"],[153,34,135,34],[153,36,135,36],[154,6,136,8],[154,10,136,12,"state"],[154,15,136,17],[154,20,136,22],[154,29,136,31],[154,31,136,33],[155,8,137,12],[156,8,138,12],[157,6,139,8],[158,6,140,8],[158,10,140,14,"iterator"],[158,18,140,22],[158,21,140,25,"createManagedIterator"],[158,42,140,46],[158,43,140,47,"iterable"],[158,51,140,55],[158,53,140,58,"result"],[158,59,140,64],[158,63,140,67],[159,8,141,12],[159,12,141,16,"state"],[159,17,141,21],[159,22,141,26],[159,31,141,35],[159,33,141,37],[160,10,142,16],[161,10,143,16],[162,8,144,12],[163,8,145,12],[163,16,145,19,"result"],[163,22,145,25],[163,23,145,26,"status"],[163,29,145,32],[164,10,146,16],[164,15,146,21],[164,22,146,28],[165,12,147,20,"buffer"],[165,18,147,26],[165,19,147,27,"push"],[165,23,147,31],[165,24,147,32],[165,25,148,24,"iterator"],[165,33,148,32],[165,35,149,24,"result"],[165,41,149,30],[165,42,150,21],[165,43,150,22],[166,12,151,20],[167,10,152,16],[167,15,152,21],[167,23,152,29],[168,12,153,20,"iterators"],[168,21,153,29],[168,22,153,30,"delete"],[168,28,153,36],[168,29,153,37,"iterator"],[168,37,153,45],[168,38,153,46],[169,12,154,20],[170,10,155,16],[170,15,155,21],[170,22,155,28],[171,12,156,20,"buffer"],[171,18,156,26],[171,19,156,27,"push"],[171,23,156,31],[171,24,156,32],[171,25,157,24,"iterator"],[171,33,157,32],[171,35,158,24,"result"],[171,41,158,30],[171,42,159,21],[171,43,159,22],[172,12,160,20,"iterators"],[172,21,160,29],[172,22,160,30,"delete"],[172,28,160,36],[172,29,160,37,"iterator"],[172,37,160,45],[172,38,160,46],[173,12,161,20],[174,8,162,12],[175,8,163,12,"flushSignal"],[175,19,163,23],[175,20,163,24,"resolve"],[175,27,163,31],[175,28,163,32],[175,29,163,33],[176,6,164,8],[176,7,164,9],[176,8,164,10],[177,6,165,8,"iterators"],[177,15,165,17],[177,16,165,18,"add"],[177,19,165,21],[177,20,165,22,"iterator"],[177,28,165,30],[177,29,165,31],[178,6,166,8,"iterator"],[178,14,166,16],[178,15,166,17,"pull"],[178,19,166,21],[178,20,166,22],[178,21,166,23],[179,4,167,4],[180,4,168,4],[180,11,168,11],[181,6,169,8,"add"],[181,9,169,11,"add"],[181,10,169,13,"iterable"],[181,18,169,21],[181,20,169,23],[182,8,170,12],[182,16,170,19,"state"],[182,21,170,24],[183,10,171,16],[183,15,171,21],[183,21,171,27],[184,12,172,20,"iterables"],[184,21,172,29],[184,22,172,30,"push"],[184,26,172,34],[184,27,172,35,"iterable"],[184,35,172,43],[184,36,172,44],[185,12,173,20],[186,10,174,16],[186,15,174,21],[186,24,174,30],[187,12,175,20,"initIterable"],[187,24,175,32],[187,25,175,33,"iterable"],[187,33,175,41],[187,34,175,42],[188,12,176,20],[189,8,177,12],[190,6,178,8],[190,7,178,9],[191,6,179,8],[191,7,179,16,"Symbol"],[191,13,179,22],[191,14,179,23,"asyncIterator"],[191,27,179,36],[191,31,179,41],[192,8,179,41],[192,19,179,41,"_wrapAsyncGenerator2"],[192,39,179,41],[192,40,179,41,"default"],[192,47,179,41],[193,10,180,12],[193,14,180,18,"env"],[193,17,180,21],[193,20,180,24],[194,12,181,16,"stack"],[194,17,181,21],[194,19,181,23],[194,21,181,25],[195,12,182,16,"error"],[195,17,182,21],[195,19,182,23],[195,24,182,28],[195,25,182,29],[196,12,183,16,"hasError"],[196,20,183,24],[196,22,183,26],[197,10,184,12],[197,11,184,13],[198,10,185,12],[198,14,185,16],[199,12,186,16],[199,16,186,20,"state"],[199,21,186,25],[199,26,186,30],[199,32,186,36],[199,34,186,38],[200,14,187,20],[200,20,187,26],[200,24,187,30,"Error"],[200,29,187,35],[200,30,187,36],[200,52,187,58],[200,53,187,59],[201,12,188,16],[202,12,189,16,"state"],[202,17,189,21],[202,20,189,24],[202,29,189,33],[203,12,190,16],[203,16,190,22,"_finally"],[203,24,190,30],[203,27,190,33,"_ts_add_disposable_resource"],[203,54,190,60],[203,55,190,61,"env"],[203,58,190,64],[203,60,190,66],[203,64,190,66,"makeAsyncResource"],[203,93,190,83],[203,95,190,84],[203,96,190,85],[203,97,190,86],[203,116,190,86,"_asyncToGenerator2"],[203,134,190,86],[203,135,190,86,"default"],[203,142,190,86],[203,144,190,88],[203,157,190,98],[204,14,191,20,"state"],[204,19,191,25],[204,22,191,28],[204,28,191,34],[205,14,192,20],[205,18,192,26,"errors"],[205,24,192,32],[205,27,192,35],[205,29,192,37],[206,14,193,20],[206,20,193,26,"Promise"],[206,27,193,33],[206,28,193,34,"all"],[206,31,193,37],[206,32,193,38,"Array"],[206,37,193,43],[206,38,193,44,"from"],[206,42,193,48],[206,43,193,49,"iterators"],[206,52,193,58],[206,53,193,59,"values"],[206,59,193,65],[206,60,193,66],[206,61,193,67],[206,62,193,68],[206,63,193,69,"map"],[206,66,193,72],[207,16,193,72],[207,20,193,72,"_ref3"],[207,25,193,72],[207,32,193,72,"_asyncToGenerator2"],[207,50,193,72],[207,51,193,72,"default"],[207,58,193,72],[207,60,193,73],[207,71,193,80,"it"],[207,73,193,82],[207,75,193,85],[208,18,194,24],[208,22,194,28],[209,20,195,28],[209,26,195,34,"it"],[209,28,195,36],[209,29,195,37,"destroy"],[209,36,195,44],[209,37,195,45],[209,38,195,46],[210,18,196,24],[210,19,196,25],[210,20,196,26],[210,27,196,33,"cause"],[210,32,196,38],[210,34,196,40],[211,20,197,28,"errors"],[211,26,197,34],[211,27,197,35,"push"],[211,31,197,39],[211,32,197,40,"cause"],[211,37,197,45],[211,38,197,46],[212,18,198,24],[213,16,199,20],[213,17,199,21],[214,16,199,21],[214,33,199,21,"_x"],[214,35,199,21],[215,18,199,21],[215,25,199,21,"_ref3"],[215,30,199,21],[215,31,199,21,"apply"],[215,36,199,21],[215,43,199,21,"arguments"],[215,52,199,21],[216,16,199,21],[217,14,199,21],[217,18,199,22],[217,19,199,23],[218,14,200,20,"buffer"],[218,20,200,26],[218,21,200,27,"length"],[218,27,200,33],[218,30,200,36],[218,31,200,37],[219,14,201,20,"iterators"],[219,23,201,29],[219,24,201,30,"clear"],[219,29,201,35],[219,30,201,36],[219,31,201,37],[220,14,202,20,"flushSignal"],[220,25,202,31],[220,26,202,32,"resolve"],[220,33,202,39],[220,34,202,40],[220,35,202,41],[221,14,203,20],[221,18,203,24,"errors"],[221,24,203,30],[221,25,203,31,"length"],[221,31,203,37],[221,34,203,40],[221,35,203,41],[221,37,203,43],[222,16,204,24],[222,22,204,30],[222,26,204,34,"AggregateError"],[222,40,204,48],[222,41,204,49,"errors"],[222,47,204,55],[222,48,204,56],[223,14,205,20],[224,12,206,16],[224,13,206,17],[224,15,206,18],[224,17,206,20],[224,21,206,24],[224,22,206,25],[225,12,207,16],[226,12,208,16],[226,19,208,22,"iterables"],[226,28,208,31],[226,29,208,32,"length"],[226,35,208,38],[226,38,208,41],[226,39,208,42],[226,41,208,43],[227,14,209,20],[228,14,210,20,"initIterable"],[228,26,210,32],[228,27,210,33,"iterables"],[228,36,210,42],[228,37,210,43,"shift"],[228,42,210,48],[228,43,210,49],[228,44,210,50],[228,45,210,51],[229,12,211,16],[230,12,212,16],[230,19,212,22,"iterators"],[230,28,212,31],[230,29,212,32,"size"],[230,33,212,36],[230,36,212,39],[230,37,212,40],[230,39,212,41],[231,14,213,20],[231,24,213,20,"_awaitAsyncGenerator2"],[231,45,213,20],[231,46,213,20,"default"],[231,53,213,20],[231,55,213,26,"flushSignal"],[231,66,213,37],[231,67,213,38,"promise"],[231,74,213,45],[232,14,214,20],[232,21,214,26,"buffer"],[232,27,214,32],[232,28,214,33,"length"],[232,34,214,39],[232,37,214,42],[232,38,214,43],[232,40,214,44],[233,16,215,24],[234,16,216,24],[234,20,216,24,"_buffer$shift"],[234,33,216,24],[234,36,216,51,"buffer"],[234,42,216,57],[234,43,216,58,"shift"],[234,48,216,63],[234,49,216,64],[234,50,216,65],[235,18,216,65,"_buffer$shift2"],[235,32,216,65],[235,39,216,65,"_slicedToArray2"],[235,54,216,65],[235,55,216,65,"default"],[235,62,216,65],[235,64,216,65,"_buffer$shift"],[235,77,216,65],[236,18,216,31,"iterator"],[236,26,216,39],[236,29,216,39,"_buffer$shift2"],[236,43,216,39],[237,18,216,41,"result"],[237,24,216,47],[237,27,216,47,"_buffer$shift2"],[237,41,216,47],[238,16,217,24],[238,24,217,31,"result"],[238,30,217,37],[238,31,217,38,"status"],[238,37,217,44],[239,18,218,28],[239,23,218,33],[239,30,218,40],[240,20,219,32],[240,26,219,38,"result"],[240,32,219,44],[240,33,219,45,"value"],[240,38,219,50],[241,20,220,32,"iterator"],[241,28,220,40],[241,29,220,41,"pull"],[241,33,220,45],[241,34,220,46],[241,35,220,47],[242,20,221,32],[243,18,222,28],[243,23,222,33],[243,30,222,40],[244,20,223,32],[244,26,223,38,"result"],[244,32,223,44],[244,33,223,45,"error"],[244,38,223,50],[245,16,224,24],[246,14,225,20],[247,14,226,20,"flushSignal"],[247,25,226,31],[247,28,226,34],[247,32,226,34,"createDeferred"],[247,62,226,48],[247,64,226,49],[247,65,226,50],[248,12,227,16],[249,10,228,12],[249,11,228,13],[249,12,228,14],[249,19,228,21,"e"],[249,20,228,22],[249,22,228,24],[250,12,229,16,"env"],[250,15,229,19],[250,16,229,20,"error"],[250,21,229,25],[250,24,229,28,"e"],[250,25,229,29],[251,12,230,16,"env"],[251,15,230,19],[251,16,230,20,"hasError"],[251,24,230,28],[251,27,230,31],[251,31,230,35],[252,10,231,12],[252,11,231,13],[252,20,231,21],[253,12,232,16],[253,16,232,22,"result"],[253,23,232,28],[253,26,232,31,"_ts_dispose_resources"],[253,47,232,52],[253,48,232,53,"env"],[253,51,232,56],[253,52,232,57],[254,12,233,16],[254,16,233,20,"result"],[254,23,233,26],[254,25,233,28],[254,35,233,28,"_awaitAsyncGenerator2"],[254,56,233,28],[254,57,233,28,"default"],[254,64,233,28],[254,66,233,34,"result"],[254,73,233,40],[255,10,234,12],[256,8,234,13],[257,6,235,8],[258,4,236,4],[258,5,236,5],[259,2,237,0],[260,0,237,1],[260,3]],"functionMap":{"names":["<global>","_ts_add_disposable_resource","dispose","_ts_dispose_resources","<anonymous>","fail","next","Promise.resolve.then$argument_1","createManagedIterator","cleanup","onResult","pull","next.then$argument_0","next.then._catch$argument_0","destroy","mergeAsyncIterables","initIterable","createManagedIterator$argument_1","add","@@asyncIterator","makeAsyncResource$argument_1","Array.from.map$argument_0"],"mappings":"AAA;ACG;6BCc;SDM;CDY;AGC;qFCC;KDG;QEE;SFG;QGE;uFCM;yBDG;SHQ;CHG;AQC;ICG;mBCE;SDE;KDC;IGC;kBCM;SDe,QE;SFM;KHC;iBMG;SNG;CRE;IeW;ICU;yDCK;SDwB;KDG;QGE;SHS;QIC;wFCW;yECG;qBDM;iBDO;SJ6B;CfE"}},"type":"js/module"}]}