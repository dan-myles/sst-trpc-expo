{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":40,"index":3724}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":40,"index":3724}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@tanstack/query-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":63,"index":133}}],"key":"lQuii4GoLKZlbYZr8L3aqepRgVE="}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":134},"end":{"line":6,"column":58,"index":192}}],"key":"bIfRD2D6KABLOLKGhRDDuVYxQQc="}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":193},"end":{"line":7,"column":74,"index":267}}],"key":"hUEbXkxzPLoFsdScNV3xZfde3CA="}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":268},"end":{"line":12,"column":33,"index":389}}],"key":"zUY/rdybvSznMOhY7phJ+KTPrHA="}},{"name":"./isRestoring.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":390},"end":{"line":13,"column":50,"index":440}}],"key":"gDoWs/hwD0slEYqcOhWowiRbu2E="}},{"name":"./suspense.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":441},"end":{"line":19,"column":23,"index":545}}],"key":"d5Mzudi/QnsQSXKfub7LSlfFMag="}},{"name":"./utils.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":546},"end":{"line":20,"column":34,"index":580}}],"key":"03VO7/E+L2S6CYQuFHTg8eKUrwk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useBaseQuery = useBaseQuery;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _queryCore = require(_dependencyMap[3], \"@tanstack/query-core\");\n  var _QueryClientProvider = require(_dependencyMap[4], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundary = require(_dependencyMap[5], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtils = require(_dependencyMap[6], \"./errorBoundaryUtils.js\");\n  var _isRestoring = require(_dependencyMap[7], \"./isRestoring.js\");\n  var _suspense = require(_dependencyMap[8], \"./suspense.js\");\n  var _utils = require(_dependencyMap[9], \"./utils.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    var client = (0, _QueryClientProvider.useQueryClient)(queryClient);\n    var isRestoring = (0, _isRestoring.useIsRestoring)();\n    var errorResetBoundary = (0, _QueryErrorResetBoundary.useQueryErrorResetBoundary)();\n    var defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspense.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtils.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtils.useClearResetErrorBoundary)(errorResetBoundary);\n    var isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    var _React$useState = React.useState(() => new Observer(client, defaultedOptions)),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      observer = _React$useState2[0];\n    var result = observer.getOptimisticResult(defaultedOptions);\n    var shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      var unsubscribe = shouldSubscribe ? observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)) : _utils.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions, {\n        listeners: false\n      });\n    }, [defaultedOptions, observer]);\n    if ((0, _suspense.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtils.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_queryCore.isServer && (0, _suspense.willFetch)(result, isRestoring)) {\n      var promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspense.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_utils.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[5,6,3,0,"_interopRequireDefault"],[5,28,3,0],[5,31,3,0,"require"],[5,38,3,0],[5,39,3,0,"_dependencyMap"],[5,53,3,0],[6,2,3,0,"Object"],[6,8,3,0],[6,9,3,0,"defineProperty"],[6,23,3,0],[6,24,3,0,"exports"],[6,31,3,0],[7,4,3,0,"value"],[7,9,3,0],[8,2,3,0],[9,2,3,0,"exports"],[9,9,3,0],[9,10,3,0,"useBaseQuery"],[9,22,3,0],[9,25,3,0,"useBaseQuery"],[9,37,3,0],[10,2,3,0],[10,6,3,0,"_slicedToArray2"],[10,21,3,0],[10,24,3,0,"_interopRequireDefault"],[10,46,3,0],[10,47,3,0,"require"],[10,54,3,0],[10,55,3,0,"_dependencyMap"],[10,69,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_queryCore"],[12,16,5,0],[12,19,5,0,"require"],[12,26,5,0],[12,27,5,0,"_dependencyMap"],[12,41,5,0],[13,2,6,0],[13,6,6,0,"_QueryClientProvider"],[13,26,6,0],[13,29,6,0,"require"],[13,36,6,0],[13,37,6,0,"_dependencyMap"],[13,51,6,0],[14,2,7,0],[14,6,7,0,"_QueryErrorResetBoundary"],[14,30,7,0],[14,33,7,0,"require"],[14,40,7,0],[14,41,7,0,"_dependencyMap"],[14,55,7,0],[15,2,8,0],[15,6,8,0,"_errorBoundaryUtils"],[15,25,8,0],[15,28,8,0,"require"],[15,35,8,0],[15,36,8,0,"_dependencyMap"],[15,50,8,0],[16,2,13,0],[16,6,13,0,"_isRestoring"],[16,18,13,0],[16,21,13,0,"require"],[16,28,13,0],[16,29,13,0,"_dependencyMap"],[16,43,13,0],[17,2,14,0],[17,6,14,0,"_suspense"],[17,15,14,0],[17,18,14,0,"require"],[17,25,14,0],[17,26,14,0,"_dependencyMap"],[17,40,14,0],[18,2,20,0],[18,6,20,0,"_utils"],[18,12,20,0],[18,15,20,0,"require"],[18,22,20,0],[18,23,20,0,"_dependencyMap"],[18,37,20,0],[19,2,20,34],[19,11,20,34,"_getRequireWildcardCache"],[19,36,20,34,"e"],[19,37,20,34],[19,66,20,34,"WeakMap"],[19,73,20,34],[19,92,20,34,"r"],[19,93,20,34],[19,100,20,34,"WeakMap"],[19,107,20,34],[19,111,20,34,"t"],[19,112,20,34],[19,119,20,34,"WeakMap"],[19,126,20,34],[19,138,20,34,"_getRequireWildcardCache"],[19,162,20,34],[19,174,20,34,"_getRequireWildcardCache"],[19,175,20,34,"e"],[19,176,20,34],[19,187,20,34,"e"],[19,188,20,34],[19,191,20,34,"t"],[19,192,20,34],[19,195,20,34,"r"],[19,196,20,34],[19,201,20,34,"e"],[19,202,20,34],[20,2,20,34],[20,11,20,34,"_interopRequireWildcard"],[20,35,20,34,"e"],[20,36,20,34],[20,38,20,34,"r"],[20,39,20,34],[20,48,20,34,"r"],[20,49,20,34],[20,53,20,34,"e"],[20,54,20,34],[20,58,20,34,"e"],[20,59,20,34],[20,60,20,34,"__esModule"],[20,70,20,34],[20,79,20,34,"e"],[20,80,20,34],[20,95,20,34,"e"],[20,96,20,34],[20,119,20,34,"e"],[20,120,20,34],[20,145,20,34,"e"],[20,146,20,34],[20,157,20,34,"default"],[20,164,20,34],[20,166,20,34,"e"],[20,167,20,34],[20,175,20,34,"t"],[20,176,20,34],[20,179,20,34,"_getRequireWildcardCache"],[20,203,20,34],[20,204,20,34,"r"],[20,205,20,34],[20,212,20,34,"t"],[20,213,20,34],[20,217,20,34,"t"],[20,218,20,34],[20,219,20,34,"has"],[20,222,20,34],[20,223,20,34,"e"],[20,224,20,34],[20,234,20,34,"t"],[20,235,20,34],[20,236,20,34,"get"],[20,239,20,34],[20,240,20,34,"e"],[20,241,20,34],[20,248,20,34,"n"],[20,249,20,34],[20,254,20,34,"__proto__"],[20,263,20,34],[20,273,20,34,"a"],[20,274,20,34],[20,277,20,34,"Object"],[20,283,20,34],[20,284,20,34,"defineProperty"],[20,298,20,34],[20,302,20,34,"Object"],[20,308,20,34],[20,309,20,34,"getOwnPropertyDescriptor"],[20,333,20,34],[20,344,20,34,"u"],[20,345,20,34],[20,349,20,34,"e"],[20,350,20,34],[20,370,20,34,"u"],[20,371,20,34],[20,378,20,34,"hasOwnProperty"],[20,392,20,34],[20,393,20,34,"call"],[20,397,20,34],[20,398,20,34,"e"],[20,399,20,34],[20,401,20,34,"u"],[20,402,20,34],[20,411,20,34,"i"],[20,412,20,34],[20,415,20,34,"a"],[20,416,20,34],[20,419,20,34,"Object"],[20,425,20,34],[20,426,20,34,"getOwnPropertyDescriptor"],[20,450,20,34],[20,451,20,34,"e"],[20,452,20,34],[20,454,20,34,"u"],[20,455,20,34],[20,465,20,34,"i"],[20,466,20,34],[20,471,20,34,"i"],[20,472,20,34],[20,473,20,34,"get"],[20,476,20,34],[20,480,20,34,"i"],[20,481,20,34],[20,482,20,34,"set"],[20,485,20,34],[20,489,20,34,"Object"],[20,495,20,34],[20,496,20,34,"defineProperty"],[20,510,20,34],[20,511,20,34,"n"],[20,512,20,34],[20,514,20,34,"u"],[20,515,20,34],[20,517,20,34,"i"],[20,518,20,34],[20,522,20,34,"n"],[20,523,20,34],[20,524,20,34,"u"],[20,525,20,34],[20,529,20,34,"e"],[20,530,20,34],[20,531,20,34,"u"],[20,532,20,34],[20,544,20,34,"n"],[20,545,20,34],[20,546,20,34,"default"],[20,553,20,34],[20,556,20,34,"e"],[20,557,20,34],[20,559,20,34,"t"],[20,560,20,34],[20,564,20,34,"t"],[20,565,20,34],[20,566,20,34,"set"],[20,569,20,34],[20,570,20,34,"e"],[20,571,20,34],[20,573,20,34,"n"],[20,574,20,34],[20,577,20,34,"n"],[20,578,20,34],[21,2,21,0],[21,11,21,9,"useBaseQuery"],[21,23,21,21,"useBaseQuery"],[21,24,21,22,"options"],[21,31,21,29],[21,33,21,31,"Observer"],[21,41,21,39],[21,43,21,41,"queryClient"],[21,54,21,52],[21,56,21,54],[22,4,22,2],[22,8,22,6,"process"],[22,15,22,13],[22,16,22,14,"env"],[22,19,22,17],[22,20,22,18,"NODE_ENV"],[22,28,22,26],[22,33,22,31],[22,45,22,43],[22,47,22,45],[23,6,23,4],[23,10,23,8],[23,17,23,15,"options"],[23,24,23,22],[23,29,23,27],[23,37,23,35],[23,41,23,39,"Array"],[23,46,23,44],[23,47,23,45,"isArray"],[23,54,23,52],[23,55,23,53,"options"],[23,62,23,60],[23,63,23,61],[23,65,23,63],[24,8,24,6],[24,14,24,12],[24,18,24,16,"Error"],[24,23,24,21],[24,24,25,8],[24,310,26,6],[24,311,26,7],[25,6,27,4],[26,4,28,2],[27,4,29,2],[27,8,29,8,"client"],[27,14,29,14],[27,17,29,17],[27,21,29,17,"useQueryClient"],[27,56,29,31],[27,58,29,32,"queryClient"],[27,69,29,43],[27,70,29,44],[28,4,30,2],[28,8,30,8,"isRestoring"],[28,19,30,19],[28,22,30,22],[28,26,30,22,"useIsRestoring"],[28,53,30,36],[28,55,30,37],[28,56,30,38],[29,4,31,2],[29,8,31,8,"errorResetBoundary"],[29,26,31,26],[29,29,31,29],[29,33,31,29,"useQueryErrorResetBoundary"],[29,84,31,55],[29,86,31,56],[29,87,31,57],[30,4,32,2],[30,8,32,8,"defaultedOptions"],[30,24,32,24],[30,27,32,27,"client"],[30,33,32,33],[30,34,32,34,"defaultQueryOptions"],[30,53,32,53],[30,54,32,54,"options"],[30,61,32,61],[30,62,32,62],[31,4,33,2,"client"],[31,10,33,8],[31,11,33,9,"getDefaultOptions"],[31,28,33,26],[31,29,33,27],[31,30,33,28],[31,31,33,29,"queries"],[31,38,33,36],[31,40,33,38,"_experimental_beforeQuery"],[31,65,33,63],[31,68,34,4,"defaultedOptions"],[31,84,35,2],[31,85,35,3],[32,4,36,2,"defaultedOptions"],[32,20,36,18],[32,21,36,19,"_optimisticResults"],[32,39,36,37],[32,42,36,40,"isRestoring"],[32,53,36,51],[32,56,36,54],[32,69,36,67],[32,72,36,70],[32,84,36,82],[33,4,37,2],[33,8,37,2,"ensureSuspenseTimers"],[33,38,37,22],[33,40,37,23,"defaultedOptions"],[33,56,37,39],[33,57,37,40],[34,4,38,2],[34,8,38,2,"ensurePreventErrorBoundaryRetry"],[34,59,38,33],[34,61,38,34,"defaultedOptions"],[34,77,38,50],[34,79,38,52,"errorResetBoundary"],[34,97,38,70],[34,98,38,71],[35,4,39,2],[35,8,39,2,"useClearResetErrorBoundary"],[35,54,39,28],[35,56,39,29,"errorResetBoundary"],[35,74,39,47],[35,75,39,48],[36,4,40,2],[36,8,40,8,"isNewCacheEntry"],[36,23,40,23],[36,26,40,26],[36,27,40,27,"client"],[36,33,40,33],[36,34,40,34,"getQueryCache"],[36,47,40,47],[36,48,40,48],[36,49,40,49],[36,50,40,50,"get"],[36,53,40,53],[36,54,40,54,"defaultedOptions"],[36,70,40,70],[36,71,40,71,"queryHash"],[36,80,40,80],[36,81,40,81],[37,4,41,2],[37,8,41,2,"_React$useState"],[37,23,41,2],[37,26,41,21,"React"],[37,31,41,26],[37,32,41,27,"useState"],[37,40,41,35],[37,41,42,4],[37,47,42,10],[37,51,42,14,"Observer"],[37,59,42,22],[37,60,43,6,"client"],[37,66,43,12],[37,68,44,6,"defaultedOptions"],[37,84,45,4],[37,85,46,2],[37,86,46,3],[38,6,46,3,"_React$useState2"],[38,22,46,3],[38,29,46,3,"_slicedToArray2"],[38,44,46,3],[38,45,46,3,"default"],[38,52,46,3],[38,54,46,3,"_React$useState"],[38,69,46,3],[39,6,41,9,"observer"],[39,14,41,17],[39,17,41,17,"_React$useState2"],[39,33,41,17],[40,4,47,2],[40,8,47,8,"result"],[40,14,47,14],[40,17,47,17,"observer"],[40,25,47,25],[40,26,47,26,"getOptimisticResult"],[40,45,47,45],[40,46,47,46,"defaultedOptions"],[40,62,47,62],[40,63,47,63],[41,4,48,2],[41,8,48,8,"shouldSubscribe"],[41,23,48,23],[41,26,48,26],[41,27,48,27,"isRestoring"],[41,38,48,38],[41,42,48,42,"options"],[41,49,48,49],[41,50,48,50,"subscribed"],[41,60,48,60],[41,65,48,65],[41,70,48,70],[42,4,49,2,"React"],[42,9,49,7],[42,10,49,8,"useSyncExternalStore"],[42,30,49,28],[42,31,50,4,"React"],[42,36,50,9],[42,37,50,10,"useCallback"],[42,48,50,21],[42,49,51,7,"onStoreChange"],[42,62,51,20],[42,66,51,25],[43,6,52,8],[43,10,52,14,"unsubscribe"],[43,21,52,25],[43,24,52,28,"shouldSubscribe"],[43,39,52,43],[43,42,52,46,"observer"],[43,50,52,54],[43,51,52,55,"subscribe"],[43,60,52,64],[43,61,52,65,"notifyManager"],[43,85,52,78],[43,86,52,79,"batchCalls"],[43,96,52,89],[43,97,52,90,"onStoreChange"],[43,110,52,103],[43,111,52,104],[43,112,52,105],[43,115,52,108,"noop"],[43,126,52,112],[44,6,53,8,"observer"],[44,14,53,16],[44,15,53,17,"updateResult"],[44,27,53,29],[44,28,53,30],[44,29,53,31],[45,6,54,8],[45,13,54,15,"unsubscribe"],[45,24,54,26],[46,4,55,6],[46,5,55,7],[46,7,56,6],[46,8,56,7,"observer"],[46,16,56,15],[46,18,56,17,"shouldSubscribe"],[46,33,56,32],[46,34,57,4],[46,35,57,5],[46,37,58,4],[46,43,58,10,"observer"],[46,51,58,18],[46,52,58,19,"getCurrentResult"],[46,68,58,35],[46,69,58,36],[46,70,58,37],[46,72,59,4],[46,78,59,10,"observer"],[46,86,59,18],[46,87,59,19,"getCurrentResult"],[46,103,59,35],[46,104,59,36],[46,105,60,2],[46,106,60,3],[47,4,61,2,"React"],[47,9,61,7],[47,10,61,8,"useEffect"],[47,19,61,17],[47,20,61,18],[47,26,61,24],[48,6,62,4,"observer"],[48,14,62,12],[48,15,62,13,"setOptions"],[48,25,62,23],[48,26,62,24,"defaultedOptions"],[48,42,62,40],[48,44,62,42],[49,8,62,44,"listeners"],[49,17,62,53],[49,19,62,55],[50,6,62,61],[50,7,62,62],[50,8,62,63],[51,4,63,2],[51,5,63,3],[51,7,63,5],[51,8,63,6,"defaultedOptions"],[51,24,63,22],[51,26,63,24,"observer"],[51,34,63,32],[51,35,63,33],[51,36,63,34],[52,4,64,2],[52,8,64,6],[52,12,64,6,"shouldSuspend"],[52,35,64,19],[52,37,64,20,"defaultedOptions"],[52,53,64,36],[52,55,64,38,"result"],[52,61,64,44],[52,62,64,45],[52,64,64,47],[53,6,65,4],[53,12,65,10],[53,16,65,10,"fetchOptimistic"],[53,41,65,25],[53,43,65,26,"defaultedOptions"],[53,59,65,42],[53,61,65,44,"observer"],[53,69,65,52],[53,71,65,54,"errorResetBoundary"],[53,89,65,72],[53,90,65,73],[54,4,66,2],[55,4,67,2],[55,8,67,6],[55,12,67,6,"getHasError"],[55,43,67,17],[55,45,67,18],[56,6,68,4,"result"],[56,12,68,10],[57,6,69,4,"errorResetBoundary"],[57,24,69,22],[58,6,70,4,"throwOnError"],[58,18,70,16],[58,20,70,18,"defaultedOptions"],[58,36,70,34],[58,37,70,35,"throwOnError"],[58,49,70,47],[59,6,71,4,"query"],[59,11,71,9],[59,13,71,11,"client"],[59,19,71,17],[59,20,71,18,"getQueryCache"],[59,33,71,31],[59,34,71,32],[59,35,71,33],[59,36,71,34,"get"],[59,39,71,37],[59,40,71,38,"defaultedOptions"],[59,56,71,54],[59,57,71,55,"queryHash"],[59,66,71,64],[59,67,71,65],[60,6,72,4,"suspense"],[60,14,72,12],[60,16,72,14,"defaultedOptions"],[60,32,72,30],[60,33,72,31,"suspense"],[61,4,73,2],[61,5,73,3],[61,6,73,4],[61,8,73,6],[62,6,74,4],[62,12,74,10,"result"],[62,18,74,16],[62,19,74,17,"error"],[62,24,74,22],[63,4,75,2],[64,4,76,2],[65,4,77,2,"client"],[65,10,77,8],[65,11,77,9,"getDefaultOptions"],[65,28,77,26],[65,29,77,27],[65,30,77,28],[65,31,77,29,"queries"],[65,38,77,36],[65,40,77,38,"_experimental_afterQuery"],[65,64,77,62],[65,67,78,4,"defaultedOptions"],[65,83,78,20],[65,85,79,4,"result"],[65,91,80,2],[65,92,80,3],[66,4,81,2],[66,8,81,6,"defaultedOptions"],[66,24,81,22],[66,25,81,23,"experimental_prefetchInRender"],[66,54,81,52],[66,58,81,56],[66,59,81,57,"isServer"],[66,78,81,65],[66,82,81,69],[66,86,81,69,"willFetch"],[66,105,81,78],[66,107,81,79,"result"],[66,113,81,85],[66,115,81,87,"isRestoring"],[66,126,81,98],[66,127,81,99],[66,129,81,101],[67,6,82,4],[67,10,82,10,"promise"],[67,17,82,17],[67,20,82,20,"isNewCacheEntry"],[67,35,82,35],[68,6,83,6],[69,6,84,6],[69,10,84,6,"fetchOptimistic"],[69,35,84,21],[69,37,84,22,"defaultedOptions"],[69,53,84,38],[69,55,84,40,"observer"],[69,63,84,48],[69,65,84,50,"errorResetBoundary"],[69,83,84,68],[69,84,84,69],[70,6,86,6],[71,6,87,6,"client"],[71,12,87,12],[71,13,87,13,"getQueryCache"],[71,26,87,26],[71,27,87,27],[71,28,87,28],[71,29,87,29,"get"],[71,32,87,32],[71,33,87,33,"defaultedOptions"],[71,49,87,49],[71,50,87,50,"queryHash"],[71,59,87,59],[71,60,87,60],[71,62,87,62,"promise"],[71,69,88,5],[72,6,89,4,"promise"],[72,13,89,11],[72,15,89,13,"catch"],[72,20,89,18],[72,21,89,19,"noop"],[72,32,89,23],[72,33,89,24],[72,34,89,25,"finally"],[72,41,89,32],[72,42,89,33],[72,48,89,39],[73,8,90,6,"observer"],[73,16,90,14],[73,17,90,15,"updateResult"],[73,29,90,27],[73,30,90,28],[73,31,90,29],[74,6,91,4],[74,7,91,5],[74,8,91,6],[75,4,92,2],[76,4,93,2],[76,11,93,9],[76,12,93,10,"defaultedOptions"],[76,28,93,26],[76,29,93,27,"notifyOnChangeProps"],[76,48,93,46],[76,51,93,49,"observer"],[76,59,93,57],[76,60,93,58,"trackResult"],[76,71,93,69],[76,72,93,70,"result"],[76,78,93,76],[76,79,93,77],[76,82,93,80,"result"],[76,88,93,86],[77,2,94,0],[78,0,94,1],[78,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACoB;ICqB;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"}},"type":"js/module"}]}