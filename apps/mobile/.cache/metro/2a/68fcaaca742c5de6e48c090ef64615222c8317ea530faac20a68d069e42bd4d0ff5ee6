{"dependencies":[{"name":"expo-constants","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":41,"index":335},"end":{"line":7,"column":66,"index":360}}],"key":"2TquPknmjb1g5OMuvQ0eTuioYjU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getStaticUrlFromExpoRouter = exports.getOriginFromConstants = void 0;\n  var expo_constants_1 = __importDefault(require(_dependencyMap[0], \"expo-constants\"));\n  var protocolWarningString = `{ plugins: [[\"expo-router\", { origin: \"...<URL>...\" }]] }`;\n  /** `lodash.memoize` */\n  function memoize(fn) {\n    var cache = {};\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var key = JSON.stringify(args);\n      if (cache[key]) {\n        return cache[key];\n      }\n      var result = fn(...args);\n      cache[key] = result;\n      return result;\n    };\n  }\n  function sanitizeUrl(url) {\n    var parsed = new URL(url);\n    // Allow empty protocol, http, and https\n    var validProtocol = !parsed.protocol || parsed.protocol === 'http:' || parsed.protocol === 'https:';\n    if (!validProtocol) {\n      throwOrAlert(`Expo Head: Native origin has invalid protocol \"${parsed.protocol}\" for URL in Expo Config: ${protocolWarningString}.`);\n    }\n    parsed.pathname = '';\n    parsed.search = '';\n    parsed.hash = '';\n    parsed.protocol ??= 'https:';\n    return parsed.toString().replace(/\\/$/, '');\n  }\n  var memoSanitizeUrl = memoize(sanitizeUrl);\n  function getHeadOriginFromConstants() {\n    // This will require a rebuild in bare-workflow to update.\n    var manifest = expo_constants_1.default.expoConfig;\n    var origin = manifest?.extra?.router?.headOrigin ?? manifest?.extra?.router?.origin ?? manifest?.extra?.router?.generatedOrigin;\n    if (!origin) {\n      throwOrAlert(`Expo Head: Add the handoff origin to the Expo Config (requires rebuild). Add the Config Plugin ${protocolWarningString}, where \\`origin\\` is the hosted URL.`);\n      // Fallback value that shouldn't be used for real.\n      return 'https://expo.dev';\n    }\n    // Without this, the URL will go to an IP address which is not allowed.\n    if (!origin.match(/^http(s)?:\\/\\//)) {\n      console.warn(`Expo Head: origin \"${origin}\" is missing a \\`https://\\` protocol. ${protocolWarningString}.`);\n    }\n    // Return the development URL last so the user gets all production warnings first.\n    return memoSanitizeUrl(origin);\n  }\n  function getOriginFromConstants() {\n    // This will require a rebuild in bare-workflow to update.\n    var manifest = expo_constants_1.default.expoConfig;\n    var origin = manifest?.extra?.router?.headOrigin ?? manifest?.extra?.router?.origin ?? manifest?.extra?.router?.generatedOrigin;\n    if (!origin) {\n      throwOrAlert(`Expo RSC: Add the origin to the Expo Config (requires rebuild). Add the Config Plugin ${protocolWarningString}, where \\`origin\\` is the hosted URL.`);\n      // Fallback value that shouldn't be used for real.\n      return 'http://localhost:3000';\n    }\n    // Return the development URL last so the user gets all production warnings first.\n    return memoSanitizeUrl(origin);\n  }\n  exports.getOriginFromConstants = getOriginFromConstants;\n  function throwOrAlert(msg) {\n    // Production apps fatally crash which is often not helpful.\n    if (\n    // @ts-ignore: process is defined\n    process.env.NODE_ENV === 'production') {\n      console.error(msg);\n      alert(msg);\n    } else {\n      throw new Error(msg);\n    }\n  }\n  function getStaticUrlFromExpoRouter(pathname) {\n    // const host = \"https://expo.io\";\n    // Append the URL we'd find in context\n    return getHeadOriginFromConstants() + pathname;\n  }\n  exports.getStaticUrlFromExpoRouter = getStaticUrlFromExpoRouter;\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"getStaticUrlFromExpoRouter"],[12,36,6,34],[12,39,6,37,"exports"],[12,46,6,44],[12,47,6,45,"getOriginFromConstants"],[12,69,6,67],[12,72,6,70],[12,77,6,75],[12,78,6,76],[13,2,7,0],[13,6,7,6,"expo_constants_1"],[13,22,7,22],[13,25,7,25,"__importDefault"],[13,40,7,40],[13,41,7,41,"require"],[13,48,7,48],[13,49,7,48,"_dependencyMap"],[13,63,7,48],[13,84,7,65],[13,85,7,66],[13,86,7,67],[14,2,8,0],[14,6,8,6,"protocolWarningString"],[14,27,8,27],[14,30,8,30],[14,89,8,89],[15,2,9,0],[16,2,10,0],[16,11,10,9,"memoize"],[16,18,10,16,"memoize"],[16,19,10,17,"fn"],[16,21,10,19],[16,23,10,21],[17,4,11,4],[17,8,11,10,"cache"],[17,13,11,15],[17,16,11,18],[17,17,11,19],[17,18,11,20],[18,4,12,4],[18,11,12,12],[18,23,12,25],[19,6,12,25],[19,15,12,25,"_len"],[19,19,12,25],[19,22,12,25,"arguments"],[19,31,12,25],[19,32,12,25,"length"],[19,38,12,25],[19,40,12,16,"args"],[19,44,12,20],[19,51,12,20,"Array"],[19,56,12,20],[19,57,12,20,"_len"],[19,61,12,20],[19,64,12,20,"_key"],[19,68,12,20],[19,74,12,20,"_key"],[19,78,12,20],[19,81,12,20,"_len"],[19,85,12,20],[19,87,12,20,"_key"],[19,91,12,20],[20,8,12,16,"args"],[20,12,12,20],[20,13,12,20,"_key"],[20,17,12,20],[20,21,12,20,"arguments"],[20,30,12,20],[20,31,12,20,"_key"],[20,35,12,20],[21,6,12,20],[22,6,13,8],[22,10,13,14,"key"],[22,13,13,17],[22,16,13,20,"JSON"],[22,20,13,24],[22,21,13,25,"stringify"],[22,30,13,34],[22,31,13,35,"args"],[22,35,13,39],[22,36,13,40],[23,6,14,8],[23,10,14,12,"cache"],[23,15,14,17],[23,16,14,18,"key"],[23,19,14,21],[23,20,14,22],[23,22,14,24],[24,8,15,12],[24,15,15,19,"cache"],[24,20,15,24],[24,21,15,25,"key"],[24,24,15,28],[24,25,15,29],[25,6,16,8],[26,6,17,8],[26,10,17,14,"result"],[26,16,17,20],[26,19,17,23,"fn"],[26,21,17,25],[26,22,17,26],[26,25,17,29,"args"],[26,29,17,33],[26,30,17,34],[27,6,18,8,"cache"],[27,11,18,13],[27,12,18,14,"key"],[27,15,18,17],[27,16,18,18],[27,19,18,21,"result"],[27,25,18,27],[28,6,19,8],[28,13,19,15,"result"],[28,19,19,21],[29,4,20,4],[29,5,20,5],[30,2,21,0],[31,2,22,0],[31,11,22,9,"sanitizeUrl"],[31,22,22,20,"sanitizeUrl"],[31,23,22,21,"url"],[31,26,22,24],[31,28,22,26],[32,4,23,4],[32,8,23,10,"parsed"],[32,14,23,16],[32,17,23,19],[32,21,23,23,"URL"],[32,24,23,26],[32,25,23,27,"url"],[32,28,23,30],[32,29,23,31],[33,4,24,4],[34,4,25,4],[34,8,25,10,"validProtocol"],[34,21,25,23],[34,24,25,26],[34,25,25,27,"parsed"],[34,31,25,33],[34,32,25,34,"protocol"],[34,40,25,42],[34,44,25,46,"parsed"],[34,50,25,52],[34,51,25,53,"protocol"],[34,59,25,61],[34,64,25,66],[34,71,25,73],[34,75,25,77,"parsed"],[34,81,25,83],[34,82,25,84,"protocol"],[34,90,25,92],[34,95,25,97],[34,103,25,105],[35,4,26,4],[35,8,26,8],[35,9,26,9,"validProtocol"],[35,22,26,22],[35,24,26,24],[36,6,27,8,"throwOrAlert"],[36,18,27,20],[36,19,27,21],[36,69,27,71,"parsed"],[36,75,27,77],[36,76,27,78,"protocol"],[36,84,27,86],[36,113,27,115,"protocolWarningString"],[36,134,27,136],[36,137,27,139],[36,138,27,140],[37,4,28,4],[38,4,29,4,"parsed"],[38,10,29,10],[38,11,29,11,"pathname"],[38,19,29,19],[38,22,29,22],[38,24,29,24],[39,4,30,4,"parsed"],[39,10,30,10],[39,11,30,11,"search"],[39,17,30,17],[39,20,30,20],[39,22,30,22],[40,4,31,4,"parsed"],[40,10,31,10],[40,11,31,11,"hash"],[40,15,31,15],[40,18,31,18],[40,20,31,20],[41,4,32,4,"parsed"],[41,10,32,10],[41,11,32,11,"protocol"],[41,19,32,19],[41,24,32,24],[41,32,32,32],[42,4,33,4],[42,11,33,11,"parsed"],[42,17,33,17],[42,18,33,18,"toString"],[42,26,33,26],[42,27,33,27],[42,28,33,28],[42,29,33,29,"replace"],[42,36,33,36],[42,37,33,37],[42,42,33,42],[42,44,33,44],[42,46,33,46],[42,47,33,47],[43,2,34,0],[44,2,35,0],[44,6,35,6,"memoSanitizeUrl"],[44,21,35,21],[44,24,35,24,"memoize"],[44,31,35,31],[44,32,35,32,"sanitizeUrl"],[44,43,35,43],[44,44,35,44],[45,2,36,0],[45,11,36,9,"getHeadOriginFromConstants"],[45,37,36,35,"getHeadOriginFromConstants"],[45,38,36,35],[45,40,36,38],[46,4,37,4],[47,4,38,4],[47,8,38,10,"manifest"],[47,16,38,18],[47,19,38,21,"expo_constants_1"],[47,35,38,37],[47,36,38,38,"default"],[47,43,38,45],[47,44,38,46,"expoConfig"],[47,54,38,56],[48,4,39,4],[48,8,39,10,"origin"],[48,14,39,16],[48,17,39,19,"manifest"],[48,25,39,27],[48,27,39,29,"extra"],[48,32,39,34],[48,34,39,36,"router"],[48,40,39,42],[48,42,39,44,"headOrigin"],[48,52,39,54],[48,56,40,8,"manifest"],[48,64,40,16],[48,66,40,18,"extra"],[48,71,40,23],[48,73,40,25,"router"],[48,79,40,31],[48,81,40,33,"origin"],[48,87,40,39],[48,91,41,8,"manifest"],[48,99,41,16],[48,101,41,18,"extra"],[48,106,41,23],[48,108,41,25,"router"],[48,114,41,31],[48,116,41,33,"generatedOrigin"],[48,131,41,48],[49,4,42,4],[49,8,42,8],[49,9,42,9,"origin"],[49,15,42,15],[49,17,42,17],[50,6,43,8,"throwOrAlert"],[50,18,43,20],[50,19,43,21],[50,117,43,119,"protocolWarningString"],[50,138,43,140],[50,177,43,179],[50,178,43,180],[51,6,44,8],[52,6,45,8],[52,13,45,15],[52,31,45,33],[53,4,46,4],[54,4,47,4],[55,4,48,4],[55,8,48,8],[55,9,48,9,"origin"],[55,15,48,15],[55,16,48,16,"match"],[55,21,48,21],[55,22,48,22],[55,38,48,38],[55,39,48,39],[55,41,48,41],[56,6,49,8,"console"],[56,13,49,15],[56,14,49,16,"warn"],[56,18,49,20],[56,19,49,21],[56,41,49,43,"origin"],[56,47,49,49],[56,88,49,90,"protocolWarningString"],[56,109,49,111],[56,112,49,114],[56,113,49,115],[57,4,50,4],[58,4,51,4],[59,4,52,4],[59,11,52,11,"memoSanitizeUrl"],[59,26,52,26],[59,27,52,27,"origin"],[59,33,52,33],[59,34,52,34],[60,2,53,0],[61,2,54,0],[61,11,54,9,"getOriginFromConstants"],[61,33,54,31,"getOriginFromConstants"],[61,34,54,31],[61,36,54,34],[62,4,55,4],[63,4,56,4],[63,8,56,10,"manifest"],[63,16,56,18],[63,19,56,21,"expo_constants_1"],[63,35,56,37],[63,36,56,38,"default"],[63,43,56,45],[63,44,56,46,"expoConfig"],[63,54,56,56],[64,4,57,4],[64,8,57,10,"origin"],[64,14,57,16],[64,17,57,19,"manifest"],[64,25,57,27],[64,27,57,29,"extra"],[64,32,57,34],[64,34,57,36,"router"],[64,40,57,42],[64,42,57,44,"headOrigin"],[64,52,57,54],[64,56,58,8,"manifest"],[64,64,58,16],[64,66,58,18,"extra"],[64,71,58,23],[64,73,58,25,"router"],[64,79,58,31],[64,81,58,33,"origin"],[64,87,58,39],[64,91,59,8,"manifest"],[64,99,59,16],[64,101,59,18,"extra"],[64,106,59,23],[64,108,59,25,"router"],[64,114,59,31],[64,116,59,33,"generatedOrigin"],[64,131,59,48],[65,4,60,4],[65,8,60,8],[65,9,60,9,"origin"],[65,15,60,15],[65,17,60,17],[66,6,61,8,"throwOrAlert"],[66,18,61,20],[66,19,61,21],[66,108,61,110,"protocolWarningString"],[66,129,61,131],[66,168,61,170],[66,169,61,171],[67,6,62,8],[68,6,63,8],[68,13,63,15],[68,36,63,38],[69,4,64,4],[70,4,65,4],[71,4,66,4],[71,11,66,11,"memoSanitizeUrl"],[71,26,66,26],[71,27,66,27,"origin"],[71,33,66,33],[71,34,66,34],[72,2,67,0],[73,2,68,0,"exports"],[73,9,68,7],[73,10,68,8,"getOriginFromConstants"],[73,32,68,30],[73,35,68,33,"getOriginFromConstants"],[73,57,68,55],[74,2,69,0],[74,11,69,9,"throwOrAlert"],[74,23,69,21,"throwOrAlert"],[74,24,69,22,"msg"],[74,27,69,25],[74,29,69,27],[75,4,70,4],[76,4,71,4],[77,4,72,4],[78,4,73,4,"process"],[78,11,73,11],[78,12,73,12,"env"],[78,15,73,15],[78,16,73,16,"NODE_ENV"],[78,24,73,24],[78,29,73,29],[78,41,73,41],[78,43,73,43],[79,6,74,8,"console"],[79,13,74,15],[79,14,74,16,"error"],[79,19,74,21],[79,20,74,22,"msg"],[79,23,74,25],[79,24,74,26],[80,6,75,8,"alert"],[80,11,75,13],[80,12,75,14,"msg"],[80,15,75,17],[80,16,75,18],[81,4,76,4],[81,5,76,5],[81,11,77,9],[82,6,78,8],[82,12,78,14],[82,16,78,18,"Error"],[82,21,78,23],[82,22,78,24,"msg"],[82,25,78,27],[82,26,78,28],[83,4,79,4],[84,2,80,0],[85,2,81,0],[85,11,81,9,"getStaticUrlFromExpoRouter"],[85,37,81,35,"getStaticUrlFromExpoRouter"],[85,38,81,36,"pathname"],[85,46,81,44],[85,48,81,46],[86,4,82,4],[87,4,83,4],[88,4,84,4],[88,11,84,11,"getHeadOriginFromConstants"],[88,37,84,37],[88,38,84,38],[88,39,84,39],[88,42,84,42,"pathname"],[88,50,84,50],[89,2,85,0],[90,2,86,0,"exports"],[90,9,86,7],[90,10,86,8,"getStaticUrlFromExpoRouter"],[90,36,86,34],[90,39,86,37,"getStaticUrlFromExpoRouter"],[90,65,86,63],[91,0,86,64],[91,3]],"functionMap":{"names":["<global>","<anonymous>","memoize","sanitizeUrl","getHeadOriginFromConstants","getOriginFromConstants","throwOrAlert","getStaticUrlFromExpoRouter"],"mappings":"AAA;wDCC;CDE;AEM;YDE;KCQ;CFC;AGC;CHY;AIE;CJiB;AKC;CLa;AME;CNW;AOC;CPI"}},"type":"js/module"}]}