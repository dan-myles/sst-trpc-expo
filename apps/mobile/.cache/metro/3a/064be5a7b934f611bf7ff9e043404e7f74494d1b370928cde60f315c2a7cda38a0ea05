{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":91,"column":0,"index":2823}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":91,"column":0,"index":2823}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"./error/TRPCError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"WdBNBZk8UDTZJ+aLaEfvYQAC7J4="}},{"name":"./utils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":39,"index":90}}],"key":"XZqiGndSzUFgS+0ABF5nOFWZJRU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInputMiddleware = createInputMiddleware;\n  exports.createMiddlewareFactory = createMiddlewareFactory;\n  exports.createOutputMiddleware = createOutputMiddleware;\n  exports.middlewareMarker = exports.experimental_standaloneMiddleware = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _TRPCError = require(_dependencyMap[2], \"./error/TRPCError.mjs\");\n  var _utils = require(_dependencyMap[3], \"./utils.mjs\");\n  /** @internal */var middlewareMarker = exports.middlewareMarker = 'middlewareMarker';\n  /**\n   * @internal\n   */\n  function createMiddlewareFactory() {\n    function createMiddlewareInner(middlewares) {\n      return {\n        _middlewares: middlewares,\n        unstable_pipe(middlewareBuilderOrFn) {\n          var pipedMiddleware = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [middlewareBuilderOrFn];\n          return createMiddlewareInner([...middlewares, ...pipedMiddleware]);\n        }\n      };\n    }\n    function createMiddleware(fn) {\n      return createMiddlewareInner([fn]);\n    }\n    return createMiddleware;\n  }\n  /**\n   * Create a standalone middleware\n   * @see https://trpc.io/docs/v11/server/middlewares#experimental-standalone-middlewares\n   * @deprecated use `.unstable_concat()` instead\n   */\n  var experimental_standaloneMiddleware = () => ({\n    create: createMiddlewareFactory()\n  });\n  /**\n   * @internal\n   * Please note, `trpc-openapi` uses this function.\n   */\n  exports.experimental_standaloneMiddleware = experimental_standaloneMiddleware;\n  function createInputMiddleware(parse) {\n    var inputMiddleware = /*#__PURE__*/function () {\n      var _inputValidatorMiddleware = (0, _asyncToGenerator2.default)(function* (opts) {\n        var parsedInput;\n        var rawInput = yield opts.getRawInput();\n        try {\n          parsedInput = yield parse(rawInput);\n        } catch (cause) {\n          throw new _TRPCError.TRPCError({\n            code: 'BAD_REQUEST',\n            cause\n          });\n        }\n        // Multiple input parsers\n        var combinedInput = (0, _utils.isObject)(opts.input) && (0, _utils.isObject)(parsedInput) ? {\n          ...opts.input,\n          ...parsedInput\n        } : parsedInput;\n        return opts.next({\n          input: combinedInput\n        });\n      });\n      function inputValidatorMiddleware(_x) {\n        return _inputValidatorMiddleware.apply(this, arguments);\n      }\n      return inputValidatorMiddleware;\n    }();\n    inputMiddleware._type = 'input';\n    return inputMiddleware;\n  }\n  /**\n   * @internal\n   */\n  function createOutputMiddleware(parse) {\n    var outputMiddleware = /*#__PURE__*/function () {\n      var _outputValidatorMiddleware = (0, _asyncToGenerator2.default)(function* (_ref) {\n        var next = _ref.next;\n        var result = yield next();\n        if (!result.ok) {\n          // pass through failures without validating\n          return result;\n        }\n        try {\n          var data = yield parse(result.data);\n          return {\n            ...result,\n            data\n          };\n        } catch (cause) {\n          throw new _TRPCError.TRPCError({\n            message: 'Output validation failed',\n            code: 'INTERNAL_SERVER_ERROR',\n            cause\n          });\n        }\n      });\n      function outputValidatorMiddleware(_x2) {\n        return _outputValidatorMiddleware.apply(this, arguments);\n      }\n      return outputValidatorMiddleware;\n    }();\n    outputMiddleware._type = 'output';\n    return outputMiddleware;\n  }\n});","lineCount":109,"map":[[11,2,1,0],[11,6,1,0,"_TRPCError"],[11,16,1,0],[11,19,1,0,"require"],[11,26,1,0],[11,27,1,0,"_dependencyMap"],[11,41,1,0],[12,2,2,0],[12,6,2,0,"_utils"],[12,12,2,0],[12,15,2,0,"require"],[12,22,2,0],[12,23,2,0,"_dependencyMap"],[12,37,2,0],[13,2,4,0],[13,18,4,17],[13,22,4,23,"middlewareMarker"],[13,38,4,39],[13,41,4,39,"exports"],[13,48,4,39],[13,49,4,39,"middlewareMarker"],[13,65,4,39],[13,68,4,42],[13,86,4,60],[14,2,5,0],[15,0,6,0],[16,0,7,0],[17,2,7,4],[17,11,7,13,"createMiddlewareFactory"],[17,34,7,36,"createMiddlewareFactory"],[17,35,7,36],[17,37,7,39],[18,4,8,4],[18,13,8,13,"createMiddlewareInner"],[18,34,8,34,"createMiddlewareInner"],[18,35,8,35,"middlewares"],[18,46,8,46],[18,48,8,48],[19,6,9,8],[19,13,9,15],[20,8,10,12,"_middlewares"],[20,20,10,24],[20,22,10,26,"middlewares"],[20,33,10,37],[21,8,11,12,"unstable_pipe"],[21,21,11,25,"unstable_pipe"],[21,22,11,27,"middlewareBuilderOrFn"],[21,43,11,48],[21,45,11,50],[22,10,12,16],[22,14,12,22,"pipedMiddleware"],[22,29,12,37],[22,32,12,40],[22,46,12,54],[22,50,12,58,"middlewareBuilderOrFn"],[22,71,12,79],[22,74,12,82,"middlewareBuilderOrFn"],[22,95,12,103],[22,96,12,104,"_middlewares"],[22,108,12,116],[22,111,12,119],[22,112,13,20,"middlewareBuilderOrFn"],[22,133,13,41],[22,134,14,17],[23,10,15,16],[23,17,15,23,"createMiddlewareInner"],[23,38,15,44],[23,39,15,45],[23,40,16,20],[23,43,16,23,"middlewares"],[23,54,16,34],[23,56,17,20],[23,59,17,23,"pipedMiddleware"],[23,74,17,38],[23,75,18,17],[23,76,18,18],[24,8,19,12],[25,6,20,8],[25,7,20,9],[26,4,21,4],[27,4,22,4],[27,13,22,13,"createMiddleware"],[27,29,22,29,"createMiddleware"],[27,30,22,30,"fn"],[27,32,22,32],[27,34,22,34],[28,6,23,8],[28,13,23,15,"createMiddlewareInner"],[28,34,23,36],[28,35,23,37],[28,36,24,12,"fn"],[28,38,24,14],[28,39,25,9],[28,40,25,10],[29,4,26,4],[30,4,27,4],[30,11,27,11,"createMiddleware"],[30,27,27,27],[31,2,28,0],[32,2,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,2,33,4],[37,6,33,10,"experimental_standaloneMiddleware"],[37,39,33,43],[37,42,33,46,"experimental_standaloneMiddleware"],[37,43,33,46],[37,49,33,51],[38,4,34,8,"create"],[38,10,34,14],[38,12,34,16,"createMiddlewareFactory"],[38,35,34,39],[38,36,34,40],[39,2,35,4],[39,3,35,5],[39,4,35,6],[40,2,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,2,36,0,"exports"],[44,9,36,0],[44,10,36,0,"experimental_standaloneMiddleware"],[44,43,36,0],[44,46,36,0,"experimental_standaloneMiddleware"],[44,79,36,0],[45,2,39,4],[45,11,39,13,"createInputMiddleware"],[45,32,39,34,"createInputMiddleware"],[45,33,39,35,"parse"],[45,38,39,40],[45,40,39,42],[46,4,40,4],[46,8,40,10,"inputMiddleware"],[46,23,40,25],[47,6,40,25],[47,10,40,25,"_inputValidatorMiddleware"],[47,35,40,25],[47,42,40,25,"_asyncToGenerator2"],[47,60,40,25],[47,61,40,25,"default"],[47,68,40,25],[47,70,40,28],[47,81,40,68,"opts"],[47,85,40,72],[47,87,40,74],[48,8,41,8],[48,12,41,12,"parsedInput"],[48,23,41,23],[49,8,42,8],[49,12,42,14,"rawInput"],[49,20,42,22],[49,29,42,31,"opts"],[49,33,42,35],[49,34,42,36,"getRawInput"],[49,45,42,47],[49,46,42,48],[49,47,42,49],[50,8,43,8],[50,12,43,12],[51,10,44,12,"parsedInput"],[51,21,44,23],[51,30,44,32,"parse"],[51,35,44,37],[51,36,44,38,"rawInput"],[51,44,44,46],[51,45,44,47],[52,8,45,8],[52,9,45,9],[52,10,45,10],[52,17,45,17,"cause"],[52,22,45,22],[52,24,45,24],[53,10,46,12],[53,16,46,18],[53,20,46,22,"TRPCError"],[53,40,46,31],[53,41,46,32],[54,12,47,16,"code"],[54,16,47,20],[54,18,47,22],[54,31,47,35],[55,12,48,16,"cause"],[56,10,49,12],[56,11,49,13],[56,12,49,14],[57,8,50,8],[58,8,51,8],[59,8,52,8],[59,12,52,14,"combinedInput"],[59,25,52,27],[59,28,52,30],[59,32,52,30,"isObject"],[59,47,52,38],[59,49,52,39,"opts"],[59,53,52,43],[59,54,52,44,"input"],[59,59,52,49],[59,60,52,50],[59,64,52,54],[59,68,52,54,"isObject"],[59,83,52,62],[59,85,52,63,"parsedInput"],[59,96,52,74],[59,97,52,75],[59,100,52,78],[60,10,53,12],[60,13,53,15,"opts"],[60,17,53,19],[60,18,53,20,"input"],[60,23,53,25],[61,10,54,12],[61,13,54,15,"parsedInput"],[62,8,55,8],[62,9,55,9],[62,12,55,12,"parsedInput"],[62,23,55,23],[63,8,56,8],[63,15,56,15,"opts"],[63,19,56,19],[63,20,56,20,"next"],[63,24,56,24],[63,25,56,25],[64,10,57,12,"input"],[64,15,57,17],[64,17,57,19,"combinedInput"],[65,8,58,8],[65,9,58,9],[65,10,58,10],[66,6,59,4],[66,7,59,5],[67,6,59,5],[67,15,40,43,"inputValidatorMiddleware"],[67,39,40,67,"inputValidatorMiddleware"],[67,40,40,67,"_x"],[67,42,40,67],[68,8,40,67],[68,15,40,67,"_inputValidatorMiddleware"],[68,40,40,67],[68,41,40,67,"apply"],[68,46,40,67],[68,53,40,67,"arguments"],[68,62,40,67],[69,6,40,67],[70,6,40,67],[70,13,40,43,"inputValidatorMiddleware"],[70,37,40,67],[71,4,40,67],[71,7,59,5],[72,4,60,4,"inputMiddleware"],[72,19,60,19],[72,20,60,20,"_type"],[72,25,60,25],[72,28,60,28],[72,35,60,35],[73,4,61,4],[73,11,61,11,"inputMiddleware"],[73,26,61,26],[74,2,62,0],[75,2,63,0],[76,0,64,0],[77,0,65,0],[78,2,65,4],[78,11,65,13,"createOutputMiddleware"],[78,33,65,35,"createOutputMiddleware"],[78,34,65,36,"parse"],[78,39,65,41],[78,41,65,43],[79,4,66,4],[79,8,66,10,"outputMiddleware"],[79,24,66,26],[80,6,66,26],[80,10,66,26,"_outputValidatorMiddleware"],[80,36,66,26],[80,43,66,26,"_asyncToGenerator2"],[80,61,66,26],[80,62,66,26,"default"],[80,69,66,26],[80,71,66,29],[80,82,66,29,"_ref"],[80,86,66,29],[80,88,66,80],[81,8,66,80],[81,12,66,72,"next"],[81,16,66,76],[81,19,66,76,"_ref"],[81,23,66,76],[81,24,66,72,"next"],[81,28,66,76],[82,8,67,8],[82,12,67,14,"result"],[82,18,67,20],[82,27,67,29,"next"],[82,31,67,33],[82,32,67,34],[82,33,67,35],[83,8,68,8],[83,12,68,12],[83,13,68,13,"result"],[83,19,68,19],[83,20,68,20,"ok"],[83,22,68,22],[83,24,68,24],[84,10,69,12],[85,10,70,12],[85,17,70,19,"result"],[85,23,70,25],[86,8,71,8],[87,8,72,8],[87,12,72,12],[88,10,73,12],[88,14,73,18,"data"],[88,18,73,22],[88,27,73,31,"parse"],[88,32,73,36],[88,33,73,37,"result"],[88,39,73,43],[88,40,73,44,"data"],[88,44,73,48],[88,45,73,49],[89,10,74,12],[89,17,74,19],[90,12,75,16],[90,15,75,19,"result"],[90,21,75,25],[91,12,76,16,"data"],[92,10,77,12],[92,11,77,13],[93,8,78,8],[93,9,78,9],[93,10,78,10],[93,17,78,17,"cause"],[93,22,78,22],[93,24,78,24],[94,10,79,12],[94,16,79,18],[94,20,79,22,"TRPCError"],[94,40,79,31],[94,41,79,32],[95,12,80,16,"message"],[95,19,80,23],[95,21,80,25],[95,47,80,51],[96,12,81,16,"code"],[96,16,81,20],[96,18,81,22],[96,41,81,45],[97,12,82,16,"cause"],[98,10,83,12],[98,11,83,13],[98,12,83,14],[99,8,84,8],[100,6,85,4],[100,7,85,5],[101,6,85,5],[101,15,66,44,"outputValidatorMiddleware"],[101,40,66,69,"outputValidatorMiddleware"],[101,41,66,69,"_x2"],[101,44,66,69],[102,8,66,69],[102,15,66,69,"_outputValidatorMiddleware"],[102,41,66,69],[102,42,66,69,"apply"],[102,47,66,69],[102,54,66,69,"arguments"],[102,63,66,69],[103,6,66,69],[104,6,66,69],[104,13,66,44,"outputValidatorMiddleware"],[104,38,66,69],[105,4,66,69],[105,7,85,5],[106,4,86,4,"outputMiddleware"],[106,20,86,20],[106,21,86,21,"_type"],[106,26,86,26],[106,29,86,29],[106,37,86,37],[107,4,87,4],[107,11,87,11,"outputMiddleware"],[107,27,87,27],[108,2,88,0],[109,0,88,1],[109,3]],"functionMap":{"names":["<global>","createMiddlewareFactory","createMiddlewareInner","unstable_pipe","createMiddleware","experimental_standaloneMiddleware","createInputMiddleware","inputValidatorMiddleware","createOutputMiddleware","outputValidatorMiddleware"],"mappings":"AAA;ICM;ICC;YCG;aDQ;KDE;IGC;KHI;CDE;8CKK;MLE;IMI;4BCC;KDmB;CNG;IQG;6BCC;KDmB;CRG"}},"type":"js/module"}]}