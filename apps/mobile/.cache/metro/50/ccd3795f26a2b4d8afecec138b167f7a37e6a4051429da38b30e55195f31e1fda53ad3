{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":105,"column":0,"index":4240}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":105,"column":0,"index":4240}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@trpc/server/observable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"I122979nMYhHcuaUZWanjRGzbec="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":75,"index":129}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../internals/dataLoader.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":57,"index":187}}],"key":"2X8MNPMaLXh6YSnri2d4T1Ukx68="}},{"name":"../internals/signals.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":59,"index":247}}],"key":"ddNnA8KnDeY/w8oaTgO7HIhuYFk="}},{"name":"../TRPCClientError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":248},"end":{"line":5,"column":57,"index":305}}],"key":"+VRJuZ2ikq/rZ4G1ICvMdURsA7A="}},{"name":"./internals/httpUtils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":306},"end":{"line":6,"column":94,"index":400}}],"key":"ZJK0wcbPkw9cOEgpaYuOlXy9AFA="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.httpBatchLink = httpBatchLink;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _observable = require(_dependencyMap[2], \"@trpc/server/observable\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[3], \"@trpc/server/unstable-core-do-not-import\");\n  var _dataLoader = require(_dependencyMap[4], \"../internals/dataLoader.mjs\");\n  var _signals = require(_dependencyMap[5], \"../internals/signals.mjs\");\n  var _TRPCClientError = require(_dependencyMap[6], \"../TRPCClientError.mjs\");\n  var _httpUtils = require(_dependencyMap[7], \"./internals/httpUtils.mjs\");\n  /**\n   * @see https://trpc.io/docs/client/links/httpBatchLink\n   */\n  function httpBatchLink(opts) {\n    var resolvedOpts = (0, _httpUtils.resolveHTTPLinkOptions)(opts);\n    var maxURLLength = opts.maxURLLength ?? Infinity;\n    return () => {\n      var batchLoader = type => {\n        return {\n          validate(batchOps) {\n            if (maxURLLength === Infinity) {\n              // escape hatch for quick calcs\n              return true;\n            }\n            var path = batchOps.map(op => op.path).join(',');\n            var inputs = batchOps.map(op => op.input);\n            var url = (0, _httpUtils.getUrl)({\n              ...resolvedOpts,\n              type,\n              path,\n              inputs,\n              signal: null\n            });\n            return url.length <= maxURLLength;\n          },\n          fetch(batchOps) {\n            return (0, _asyncToGenerator2.default)(function* () {\n              var path = batchOps.map(op => op.path).join(',');\n              var inputs = batchOps.map(op => op.input);\n              var signal = (0, _signals.allAbortSignals)(...batchOps.map(op => op.signal));\n              var res = yield (0, _httpUtils.jsonHttpRequester)({\n                ...resolvedOpts,\n                path,\n                inputs,\n                type,\n                headers() {\n                  if (!opts.headers) {\n                    return {};\n                  }\n                  if (typeof opts.headers === 'function') {\n                    return opts.headers({\n                      opList: batchOps\n                    });\n                  }\n                  return opts.headers;\n                },\n                signal\n              });\n              var resJSON = Array.isArray(res.json) ? res.json : batchOps.map(() => res.json);\n              var result = resJSON.map(item => ({\n                meta: res.meta,\n                json: item\n              }));\n              return result;\n            })();\n          }\n        };\n      };\n      var query = (0, _dataLoader.dataLoader)(batchLoader('query'));\n      var mutation = (0, _dataLoader.dataLoader)(batchLoader('mutation'));\n      var loaders = {\n        query,\n        mutation\n      };\n      return _ref => {\n        var op = _ref.op;\n        return (0, _observable.observable)(observer => {\n          /* istanbul ignore if -- @preserve */if (op.type === 'subscription') {\n            throw new Error('Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`');\n          }\n          var loader = loaders[op.type];\n          var promise = loader.load(op);\n          var _res = undefined;\n          promise.then(res => {\n            _res = res;\n            var transformed = (0, _unstableCoreDoNotImport.transformResult)(res.json, resolvedOpts.transformer.output);\n            if (!transformed.ok) {\n              observer.error(_TRPCClientError.TRPCClientError.from(transformed.error, {\n                meta: res.meta\n              }));\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result\n            });\n            observer.complete();\n          }).catch(err => {\n            observer.error(_TRPCClientError.TRPCClientError.from(err, {\n              meta: _res?.meta\n            }));\n          });\n          return () => {\n            // noop\n          };\n        });\n      };\n    };\n  }\n});","lineCount":113,"map":[[8,2,1,0],[8,6,1,0,"_observable"],[8,17,1,0],[8,20,1,0,"require"],[8,27,1,0],[8,28,1,0,"_dependencyMap"],[8,42,1,0],[9,2,2,0],[9,6,2,0,"_unstableCoreDoNotImport"],[9,30,2,0],[9,33,2,0,"require"],[9,40,2,0],[9,41,2,0,"_dependencyMap"],[9,55,2,0],[10,2,3,0],[10,6,3,0,"_dataLoader"],[10,17,3,0],[10,20,3,0,"require"],[10,27,3,0],[10,28,3,0,"_dependencyMap"],[10,42,3,0],[11,2,4,0],[11,6,4,0,"_signals"],[11,14,4,0],[11,17,4,0,"require"],[11,24,4,0],[11,25,4,0,"_dependencyMap"],[11,39,4,0],[12,2,5,0],[12,6,5,0,"_TRPCClientError"],[12,22,5,0],[12,25,5,0,"require"],[12,32,5,0],[12,33,5,0,"_dependencyMap"],[12,47,5,0],[13,2,6,0],[13,6,6,0,"_httpUtils"],[13,16,6,0],[13,19,6,0,"require"],[13,26,6,0],[13,27,6,0,"_dependencyMap"],[13,41,6,0],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,2,10,4],[17,11,10,13,"httpBatchLink"],[17,24,10,26,"httpBatchLink"],[17,25,10,27,"opts"],[17,29,10,31],[17,31,10,33],[18,4,11,4],[18,8,11,10,"resolvedOpts"],[18,20,11,22],[18,23,11,25],[18,27,11,25,"resolveHTTPLinkOptions"],[18,60,11,47],[18,62,11,48,"opts"],[18,66,11,52],[18,67,11,53],[19,4,12,4],[19,8,12,10,"maxURLLength"],[19,20,12,22],[19,23,12,25,"opts"],[19,27,12,29],[19,28,12,30,"maxURLLength"],[19,40,12,42],[19,44,12,46,"Infinity"],[19,52,12,54],[20,4,13,4],[20,11,13,11],[20,17,13,15],[21,6,14,8],[21,10,14,14,"batchLoader"],[21,21,14,25],[21,24,14,29,"type"],[21,28,14,33],[21,32,14,36],[22,8,15,12],[22,15,15,19],[23,10,16,16,"validate"],[23,18,16,24,"validate"],[23,19,16,26,"batchOps"],[23,27,16,34],[23,29,16,36],[24,12,17,20],[24,16,17,24,"maxURLLength"],[24,28,17,36],[24,33,17,41,"Infinity"],[24,41,17,49],[24,43,17,51],[25,14,18,24],[26,14,19,24],[26,21,19,31],[26,25,19,35],[27,12,20,20],[28,12,21,20],[28,16,21,26,"path"],[28,20,21,30],[28,23,21,33,"batchOps"],[28,31,21,41],[28,32,21,42,"map"],[28,35,21,45],[28,36,21,47,"op"],[28,38,21,49],[28,42,21,52,"op"],[28,44,21,54],[28,45,21,55,"path"],[28,49,21,59],[28,50,21,60],[28,51,21,61,"join"],[28,55,21,65],[28,56,21,66],[28,59,21,69],[28,60,21,70],[29,12,22,20],[29,16,22,26,"inputs"],[29,22,22,32],[29,25,22,35,"batchOps"],[29,33,22,43],[29,34,22,44,"map"],[29,37,22,47],[29,38,22,49,"op"],[29,40,22,51],[29,44,22,54,"op"],[29,46,22,56],[29,47,22,57,"input"],[29,52,22,62],[29,53,22,63],[30,12,23,20],[30,16,23,26,"url"],[30,19,23,29],[30,22,23,32],[30,26,23,32,"getUrl"],[30,43,23,38],[30,45,23,39],[31,14,24,24],[31,17,24,27,"resolvedOpts"],[31,29,24,39],[32,14,25,24,"type"],[32,18,25,28],[33,14,26,24,"path"],[33,18,26,28],[34,14,27,24,"inputs"],[34,20,27,30],[35,14,28,24,"signal"],[35,20,28,30],[35,22,28,32],[36,12,29,20],[36,13,29,21],[36,14,29,22],[37,12,30,20],[37,19,30,27,"url"],[37,22,30,30],[37,23,30,31,"length"],[37,29,30,37],[37,33,30,41,"maxURLLength"],[37,45,30,53],[38,10,31,16],[38,11,31,17],[39,10,32,22,"fetch"],[39,15,32,27,"fetch"],[39,16,32,29,"batchOps"],[39,24,32,37],[39,26,32,39],[40,12,32,39],[40,23,32,39,"_asyncToGenerator2"],[40,41,32,39],[40,42,32,39,"default"],[40,49,32,39],[41,14,33,20],[41,18,33,26,"path"],[41,22,33,30],[41,25,33,33,"batchOps"],[41,33,33,41],[41,34,33,42,"map"],[41,37,33,45],[41,38,33,47,"op"],[41,40,33,49],[41,44,33,52,"op"],[41,46,33,54],[41,47,33,55,"path"],[41,51,33,59],[41,52,33,60],[41,53,33,61,"join"],[41,57,33,65],[41,58,33,66],[41,61,33,69],[41,62,33,70],[42,14,34,20],[42,18,34,26,"inputs"],[42,24,34,32],[42,27,34,35,"batchOps"],[42,35,34,43],[42,36,34,44,"map"],[42,39,34,47],[42,40,34,49,"op"],[42,42,34,51],[42,46,34,54,"op"],[42,48,34,56],[42,49,34,57,"input"],[42,54,34,62],[42,55,34,63],[43,14,35,20],[43,18,35,26,"signal"],[43,24,35,32],[43,27,35,35],[43,31,35,35,"allAbortSignals"],[43,55,35,50],[43,57,35,51],[43,60,35,54,"batchOps"],[43,68,35,62],[43,69,35,63,"map"],[43,72,35,66],[43,73,35,68,"op"],[43,75,35,70],[43,79,35,73,"op"],[43,81,35,75],[43,82,35,76,"signal"],[43,88,35,82],[43,89,35,83],[43,90,35,84],[44,14,36,20],[44,18,36,26,"res"],[44,21,36,29],[44,30,36,38],[44,34,36,38,"jsonHttpRequester"],[44,62,36,55],[44,64,36,56],[45,16,37,24],[45,19,37,27,"resolvedOpts"],[45,31,37,39],[46,16,38,24,"path"],[46,20,38,28],[47,16,39,24,"inputs"],[47,22,39,30],[48,16,40,24,"type"],[48,20,40,28],[49,16,41,24,"headers"],[49,23,41,31,"headers"],[49,24,41,31],[49,26,41,35],[50,18,42,28],[50,22,42,32],[50,23,42,33,"opts"],[50,27,42,37],[50,28,42,38,"headers"],[50,35,42,45],[50,37,42,47],[51,20,43,32],[51,27,43,39],[51,28,43,40],[51,29,43,41],[52,18,44,28],[53,18,45,28],[53,22,45,32],[53,29,45,39,"opts"],[53,33,45,43],[53,34,45,44,"headers"],[53,41,45,51],[53,46,45,56],[53,56,45,66],[53,58,45,68],[54,20,46,32],[54,27,46,39,"opts"],[54,31,46,43],[54,32,46,44,"headers"],[54,39,46,51],[54,40,46,52],[55,22,47,36,"opList"],[55,28,47,42],[55,30,47,44,"batchOps"],[56,20,48,32],[56,21,48,33],[56,22,48,34],[57,18,49,28],[58,18,50,28],[58,25,50,35,"opts"],[58,29,50,39],[58,30,50,40,"headers"],[58,37,50,47],[59,16,51,24],[59,17,51,25],[60,16,52,24,"signal"],[61,14,53,20],[61,15,53,21],[61,16,53,22],[62,14,54,20],[62,18,54,26,"resJSON"],[62,25,54,33],[62,28,54,36,"Array"],[62,33,54,41],[62,34,54,42,"isArray"],[62,41,54,49],[62,42,54,50,"res"],[62,45,54,53],[62,46,54,54,"json"],[62,50,54,58],[62,51,54,59],[62,54,54,62,"res"],[62,57,54,65],[62,58,54,66,"json"],[62,62,54,70],[62,65,54,73,"batchOps"],[62,73,54,81],[62,74,54,82,"map"],[62,77,54,85],[62,78,54,86],[62,84,54,90,"res"],[62,87,54,93],[62,88,54,94,"json"],[62,92,54,98],[62,93,54,99],[63,14,55,20],[63,18,55,26,"result"],[63,24,55,32],[63,27,55,35,"resJSON"],[63,34,55,42],[63,35,55,43,"map"],[63,38,55,46],[63,39,55,48,"item"],[63,43,55,52],[63,48,55,56],[64,16,56,28,"meta"],[64,20,56,32],[64,22,56,34,"res"],[64,25,56,37],[64,26,56,38,"meta"],[64,30,56,42],[65,16,57,28,"json"],[65,20,57,32],[65,22,57,34,"item"],[66,14,58,24],[66,15,58,25],[66,16,58,26],[66,17,58,27],[67,14,59,20],[67,21,59,27,"result"],[67,27,59,33],[68,12,59,34],[69,10,60,16],[70,8,61,12],[70,9,61,13],[71,6,62,8],[71,7,62,9],[72,6,63,8],[72,10,63,14,"query"],[72,15,63,19],[72,18,63,22],[72,22,63,22,"dataLoader"],[72,44,63,32],[72,46,63,33,"batchLoader"],[72,57,63,44],[72,58,63,45],[72,65,63,52],[72,66,63,53],[72,67,63,54],[73,6,64,8],[73,10,64,14,"mutation"],[73,18,64,22],[73,21,64,25],[73,25,64,25,"dataLoader"],[73,47,64,35],[73,49,64,36,"batchLoader"],[73,60,64,47],[73,61,64,48],[73,71,64,58],[73,72,64,59],[73,73,64,60],[74,6,65,8],[74,10,65,14,"loaders"],[74,17,65,21],[74,20,65,24],[75,8,66,12,"query"],[75,13,66,17],[76,8,67,12,"mutation"],[77,6,68,8],[77,7,68,9],[78,6,69,8],[78,13,69,15,"_ref"],[78,17,69,15],[78,21,69,25],[79,8,69,25],[79,12,69,18,"op"],[79,14,69,20],[79,17,69,20,"_ref"],[79,21,69,20],[79,22,69,18,"op"],[79,24,69,20],[80,8,70,12],[80,15,70,19],[80,19,70,19,"observable"],[80,41,70,29],[80,43,70,31,"observer"],[80,51,70,39],[80,55,70,42],[81,10,71,16],[81,47,71,54],[81,51,71,58,"op"],[81,53,71,60],[81,54,71,61,"type"],[81,58,71,65],[81,63,71,70],[81,77,71,84],[81,79,71,86],[82,12,72,20],[82,18,72,26],[82,22,72,30,"Error"],[82,27,72,35],[82,28,72,36],[82,114,72,122],[82,115,72,123],[83,10,73,16],[84,10,74,16],[84,14,74,22,"loader"],[84,20,74,28],[84,23,74,31,"loaders"],[84,30,74,38],[84,31,74,39,"op"],[84,33,74,41],[84,34,74,42,"type"],[84,38,74,46],[84,39,74,47],[85,10,75,16],[85,14,75,22,"promise"],[85,21,75,29],[85,24,75,32,"loader"],[85,30,75,38],[85,31,75,39,"load"],[85,35,75,43],[85,36,75,44,"op"],[85,38,75,46],[85,39,75,47],[86,10,76,16],[86,14,76,20,"_res"],[86,18,76,24],[86,21,76,27,"undefined"],[86,30,76,36],[87,10,77,16,"promise"],[87,17,77,23],[87,18,77,24,"then"],[87,22,77,28],[87,23,77,30,"res"],[87,26,77,33],[87,30,77,36],[88,12,78,20,"_res"],[88,16,78,24],[88,19,78,27,"res"],[88,22,78,30],[89,12,79,20],[89,16,79,26,"transformed"],[89,27,79,37],[89,30,79,40],[89,34,79,40,"transformResult"],[89,74,79,55],[89,76,79,56,"res"],[89,79,79,59],[89,80,79,60,"json"],[89,84,79,64],[89,86,79,66,"resolvedOpts"],[89,98,79,78],[89,99,79,79,"transformer"],[89,110,79,90],[89,111,79,91,"output"],[89,117,79,97],[89,118,79,98],[90,12,80,20],[90,16,80,24],[90,17,80,25,"transformed"],[90,28,80,36],[90,29,80,37,"ok"],[90,31,80,39],[90,33,80,41],[91,14,81,24,"observer"],[91,22,81,32],[91,23,81,33,"error"],[91,28,81,38],[91,29,81,39,"TRPCClientError"],[91,61,81,54],[91,62,81,55,"from"],[91,66,81,59],[91,67,81,60,"transformed"],[91,78,81,71],[91,79,81,72,"error"],[91,84,81,77],[91,86,81,79],[92,16,82,28,"meta"],[92,20,82,32],[92,22,82,34,"res"],[92,25,82,37],[92,26,82,38,"meta"],[93,14,83,24],[93,15,83,25],[93,16,83,26],[93,17,83,27],[94,14,84,24],[95,12,85,20],[96,12,86,20,"observer"],[96,20,86,28],[96,21,86,29,"next"],[96,25,86,33],[96,26,86,34],[97,14,87,24,"context"],[97,21,87,31],[97,23,87,33,"res"],[97,26,87,36],[97,27,87,37,"meta"],[97,31,87,41],[98,14,88,24,"result"],[98,20,88,30],[98,22,88,32,"transformed"],[98,33,88,43],[98,34,88,44,"result"],[99,12,89,20],[99,13,89,21],[99,14,89,22],[100,12,90,20,"observer"],[100,20,90,28],[100,21,90,29,"complete"],[100,29,90,37],[100,30,90,38],[100,31,90,39],[101,10,91,16],[101,11,91,17],[101,12,91,18],[101,13,91,19,"catch"],[101,18,91,24],[101,19,91,26,"err"],[101,22,91,29],[101,26,91,32],[102,12,92,20,"observer"],[102,20,92,28],[102,21,92,29,"error"],[102,26,92,34],[102,27,92,35,"TRPCClientError"],[102,59,92,50],[102,60,92,51,"from"],[102,64,92,55],[102,65,92,56,"err"],[102,68,92,59],[102,70,92,61],[103,14,93,24,"meta"],[103,18,93,28],[103,20,93,30,"_res"],[103,24,93,34],[103,26,93,36,"meta"],[104,12,94,20],[104,13,94,21],[104,14,94,22],[104,15,94,23],[105,10,95,16],[105,11,95,17],[105,12,95,18],[106,10,96,16],[106,17,96,23],[106,23,96,27],[107,12,97,16],[108,10,97,16],[108,11,98,17],[109,8,99,12],[109,9,99,13],[109,10,99,14],[110,6,100,8],[110,7,100,9],[111,4,101,4],[111,5,101,5],[112,2,102,0],[113,0,102,1],[113,3]],"functionMap":{"names":["<global>","httpBatchLink","<anonymous>","batchLoader","validate","batchOps.map$argument_0","fetch","jsonHttpRequester$argument_0.headers","resJSON.map$argument_0","observable$argument_0","promise.then$argument_0","promise.then._catch$argument_0"],"mappings":"AAA;ICS;WCG;4BCC;gBCE;8CCK,aD;gDCC,cD;iBDS;gBGC;8CDC,aC;gDDC,cC;mEDC,eC;wBCM;yBDU;sFDG,YC;+CEC;0BFG;iBHE;SDE;8BOQ;6BCO;iBDc,QE;iBFI;uBPC;iBOE;aPC;KDE;CDC"}},"type":"js/module"}]}