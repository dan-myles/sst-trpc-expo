{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":44,"index":7735}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":44,"index":7735}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./getPatternParts.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"z4Ap0VIyJOTYCzFllv6s+WEku7M="}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"VmpJdDW9SG25WCfHhqlvsXwd7IE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(require(_dependencyMap[2], \"query-string\"));\n  var _getPatternParts = require(_dependencyMap[3], \"./getPatternParts.js\");\n  var _validatePathConfig = require(_dependencyMap[4], \"./validatePathConfig.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfig.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var stringify = currentOptions[route.name]?.stringify;\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            return [key, stringify?.[key] ? stringify[key](value) : String(value)];\n          }));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, _getPatternParts.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternParts.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternParts.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":248,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"getPathFromState"],[8,26,1,13],[8,29,1,13,"getPathFromState"],[8,45,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,3,0],[10,6,3,0,"queryString"],[10,17,3,0],[10,20,3,0,"_interopRequireWildcard"],[10,43,3,0],[10,44,3,0,"require"],[10,51,3,0],[10,52,3,0,"_dependencyMap"],[10,66,3,0],[11,2,4,0],[11,6,4,0,"_getPatternParts"],[11,22,4,0],[11,25,4,0,"require"],[11,32,4,0],[11,33,4,0,"_dependencyMap"],[11,47,4,0],[12,2,5,0],[12,6,5,0,"_validatePathConfig"],[12,25,5,0],[12,28,5,0,"require"],[12,35,5,0],[12,36,5,0,"_dependencyMap"],[12,50,5,0],[13,2,5,61],[13,11,5,61,"_getRequireWildcardCache"],[13,36,5,61,"e"],[13,37,5,61],[13,66,5,61,"WeakMap"],[13,73,5,61],[13,92,5,61,"r"],[13,93,5,61],[13,100,5,61,"WeakMap"],[13,107,5,61],[13,111,5,61,"t"],[13,112,5,61],[13,119,5,61,"WeakMap"],[13,126,5,61],[13,138,5,61,"_getRequireWildcardCache"],[13,162,5,61],[13,174,5,61,"_getRequireWildcardCache"],[13,175,5,61,"e"],[13,176,5,61],[13,187,5,61,"e"],[13,188,5,61],[13,191,5,61,"t"],[13,192,5,61],[13,195,5,61,"r"],[13,196,5,61],[13,201,5,61,"e"],[13,202,5,61],[14,2,5,61],[14,11,5,61,"_interopRequireWildcard"],[14,35,5,61,"e"],[14,36,5,61],[14,38,5,61,"r"],[14,39,5,61],[14,48,5,61,"r"],[14,49,5,61],[14,53,5,61,"e"],[14,54,5,61],[14,58,5,61,"e"],[14,59,5,61],[14,60,5,61,"__esModule"],[14,70,5,61],[14,79,5,61,"e"],[14,80,5,61],[14,95,5,61,"e"],[14,96,5,61],[14,119,5,61,"e"],[14,120,5,61],[14,145,5,61,"e"],[14,146,5,61],[14,157,5,61,"default"],[14,164,5,61],[14,166,5,61,"e"],[14,167,5,61],[14,175,5,61,"t"],[14,176,5,61],[14,179,5,61,"_getRequireWildcardCache"],[14,203,5,61],[14,204,5,61,"r"],[14,205,5,61],[14,212,5,61,"t"],[14,213,5,61],[14,217,5,61,"t"],[14,218,5,61],[14,219,5,61,"has"],[14,222,5,61],[14,223,5,61,"e"],[14,224,5,61],[14,234,5,61,"t"],[14,235,5,61],[14,236,5,61,"get"],[14,239,5,61],[14,240,5,61,"e"],[14,241,5,61],[14,248,5,61,"n"],[14,249,5,61],[14,254,5,61,"__proto__"],[14,263,5,61],[14,273,5,61,"a"],[14,274,5,61],[14,277,5,61,"Object"],[14,283,5,61],[14,284,5,61,"defineProperty"],[14,298,5,61],[14,302,5,61,"Object"],[14,308,5,61],[14,309,5,61,"getOwnPropertyDescriptor"],[14,333,5,61],[14,344,5,61,"u"],[14,345,5,61],[14,349,5,61,"e"],[14,350,5,61],[14,370,5,61,"u"],[14,371,5,61],[14,378,5,61,"hasOwnProperty"],[14,392,5,61],[14,393,5,61,"call"],[14,397,5,61],[14,398,5,61,"e"],[14,399,5,61],[14,401,5,61,"u"],[14,402,5,61],[14,411,5,61,"i"],[14,412,5,61],[14,415,5,61,"a"],[14,416,5,61],[14,419,5,61,"Object"],[14,425,5,61],[14,426,5,61,"getOwnPropertyDescriptor"],[14,450,5,61],[14,451,5,61,"e"],[14,452,5,61],[14,454,5,61,"u"],[14,455,5,61],[14,465,5,61,"i"],[14,466,5,61],[14,471,5,61,"i"],[14,472,5,61],[14,473,5,61,"get"],[14,476,5,61],[14,480,5,61,"i"],[14,481,5,61],[14,482,5,61,"set"],[14,485,5,61],[14,489,5,61,"Object"],[14,495,5,61],[14,496,5,61,"defineProperty"],[14,510,5,61],[14,511,5,61,"n"],[14,512,5,61],[14,514,5,61,"u"],[14,515,5,61],[14,517,5,61,"i"],[14,518,5,61],[14,522,5,61,"n"],[14,523,5,61],[14,524,5,61,"u"],[14,525,5,61],[14,529,5,61,"e"],[14,530,5,61],[14,531,5,61,"u"],[14,532,5,61],[14,544,5,61,"n"],[14,545,5,61],[14,546,5,61,"default"],[14,553,5,61],[14,556,5,61,"e"],[14,557,5,61],[14,559,5,61,"t"],[14,560,5,61],[14,564,5,61,"t"],[14,565,5,61],[14,566,5,61,"set"],[14,569,5,61],[14,570,5,61,"e"],[14,571,5,61],[14,573,5,61,"n"],[14,574,5,61],[14,577,5,61,"n"],[14,578,5,61],[15,2,6,0],[15,6,6,6,"getActiveRoute"],[15,20,6,20],[15,23,6,23,"state"],[15,28,6,28],[15,32,6,32],[16,4,7,2],[16,8,7,8,"route"],[16,13,7,13],[16,16,7,16],[16,23,7,23,"state"],[16,28,7,28],[16,29,7,29,"index"],[16,34,7,34],[16,39,7,39],[16,47,7,47],[16,50,7,50,"state"],[16,55,7,55],[16,56,7,56,"routes"],[16,62,7,62],[16,63,7,63,"state"],[16,68,7,68],[16,69,7,69,"index"],[16,74,7,74],[16,75,7,75],[16,78,7,78,"state"],[16,83,7,83],[16,84,7,84,"routes"],[16,90,7,90],[16,91,7,91,"state"],[16,96,7,96],[16,97,7,97,"routes"],[16,103,7,103],[16,104,7,104,"length"],[16,110,7,110],[16,113,7,113],[16,114,7,114],[16,115,7,115],[17,4,8,2],[17,8,8,6,"route"],[17,13,8,11],[17,14,8,12,"state"],[17,19,8,17],[17,21,8,19],[18,6,9,4],[18,13,9,11,"getActiveRoute"],[18,27,9,25],[18,28,9,26,"route"],[18,33,9,31],[18,34,9,32,"state"],[18,39,9,37],[18,40,9,38],[19,4,10,2],[20,4,11,2],[20,11,11,9,"route"],[20,16,11,14],[21,2,12,0],[21,3,12,1],[22,2,13,0],[22,6,13,6,"cachedNormalizedConfigs"],[22,29,13,29],[22,32,13,32],[22,36,13,36,"WeakMap"],[22,43,13,43],[22,44,13,44],[22,45,13,45],[23,2,14,0],[23,6,14,6,"getNormalizedConfigs"],[23,26,14,26],[23,29,14,29,"options"],[23,36,14,36],[23,40,14,40],[24,4,15,2],[24,8,15,6],[24,9,15,7,"options"],[24,16,15,14],[24,18,15,16,"screens"],[24,25,15,23],[24,27,15,25],[24,34,15,32],[24,35,15,33],[24,36,15,34],[25,4,16,2],[25,8,16,8,"cached"],[25,14,16,14],[25,17,16,17,"cachedNormalizedConfigs"],[25,40,16,40],[25,41,16,41,"get"],[25,44,16,44],[25,45,16,45,"options"],[25,52,16,52],[25,54,16,54,"screens"],[25,61,16,61],[25,62,16,62],[26,4,17,2],[26,8,17,6,"cached"],[26,14,17,12],[26,16,17,14],[26,23,17,21,"cached"],[26,29,17,27],[27,4,18,2],[27,8,18,8,"normalizedConfigs"],[27,25,18,25],[27,28,18,28,"createNormalizedConfigs"],[27,51,18,51],[27,52,18,52,"options"],[27,59,18,59],[27,60,18,60,"screens"],[27,67,18,67],[27,68,18,68],[28,4,19,2,"cachedNormalizedConfigs"],[28,27,19,25],[28,28,19,26,"set"],[28,31,19,29],[28,32,19,30,"options"],[28,39,19,37],[28,40,19,38,"screens"],[28,47,19,45],[28,49,19,47,"normalizedConfigs"],[28,66,19,64],[28,67,19,65],[29,4,20,2],[29,11,20,9,"normalizedConfigs"],[29,28,20,26],[30,2,21,0],[30,3,21,1],[32,2,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,0,35,0],[45,0,36,0],[46,0,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,0,44,0],[54,0,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,0,51,0],[61,2,52,7],[61,11,52,16,"getPathFromState"],[61,27,52,32,"getPathFromState"],[61,28,52,33,"state"],[61,33,52,38],[61,35,52,40,"options"],[61,42,52,47],[61,44,52,49],[62,4,53,2],[62,8,53,6,"state"],[62,13,53,11],[62,17,53,15],[62,21,53,19],[62,23,53,21],[63,6,54,4],[63,12,54,10,"Error"],[63,17,54,15],[63,18,54,16],[63,26,54,24,"String"],[63,32,54,30],[63,33,54,31,"state"],[63,38,54,36],[63,39,54,37],[63,104,54,102],[63,105,54,103],[64,4,55,2],[65,4,56,2],[65,8,56,6,"options"],[65,15,56,13],[65,17,56,15],[66,6,57,4],[66,10,57,4,"validatePathConfig"],[66,48,57,22],[66,50,57,23,"options"],[66,57,57,30],[66,58,57,31],[67,4,58,2],[68,4,59,2],[68,8,59,8,"configs"],[68,15,59,15],[68,18,59,18,"getNormalizedConfigs"],[68,38,59,38],[68,39,59,39,"options"],[68,46,59,46],[68,47,59,47],[69,4,60,2],[69,8,60,6,"path"],[69,12,60,10],[69,15,60,13],[69,18,60,16],[70,4,61,2],[70,8,61,6,"current"],[70,15,61,13],[70,18,61,16,"state"],[70,23,61,21],[71,4,62,2],[71,8,62,8,"allParams"],[71,17,62,17],[71,20,62,20],[71,21,62,21],[71,22,62,22],[72,4,62,23],[72,8,62,23,"_loop"],[72,13,62,23],[72,25,62,23,"_loop"],[72,26,62,23],[72,28,63,18],[73,6,64,4],[73,10,64,8,"index"],[73,15,64,13],[73,18,64,16],[73,25,64,23,"current"],[73,32,64,30],[73,33,64,31,"index"],[73,38,64,36],[73,43,64,41],[73,51,64,49],[73,54,64,52,"current"],[73,61,64,59],[73,62,64,60,"index"],[73,67,64,65],[73,70,64,68],[73,71,64,69],[74,6,65,4],[74,10,65,8,"route"],[74,15,65,13],[74,18,65,16,"current"],[74,25,65,23],[74,26,65,24,"routes"],[74,32,65,30],[74,33,65,31,"index"],[74,38,65,36],[74,39,65,37],[75,6,66,4],[75,10,66,8,"parts"],[75,15,66,13],[76,6,67,4],[76,10,67,8,"focusedParams"],[76,23,67,21],[77,6,68,4],[77,10,68,8,"currentOptions"],[77,24,68,22],[77,27,68,25,"configs"],[77,34,68,32],[78,6,69,4],[78,10,69,10,"focusedRoute"],[78,22,69,22],[78,25,69,25,"getActiveRoute"],[78,39,69,39],[78,40,69,40,"state"],[78,45,69,45],[78,46,69,46],[80,6,71,4],[81,6,72,4],[81,10,72,10,"nestedRouteNames"],[81,26,72,26],[81,29,72,29],[81,31,72,31],[82,6,73,4],[82,10,73,8,"hasNext"],[82,17,73,15],[82,20,73,18],[82,24,73,22],[83,6,73,23],[83,10,73,23,"_loop2"],[83,16,73,23],[83,28,73,23,"_loop2"],[83,29,73,23],[83,31,74,52],[84,8,75,6,"parts"],[84,13,75,11],[84,16,75,14,"currentOptions"],[84,30,75,28],[84,31,75,29,"route"],[84,36,75,34],[84,37,75,35,"name"],[84,41,75,39],[84,42,75,40],[84,43,75,41,"parts"],[84,48,75,46],[85,8,76,6,"nestedRouteNames"],[85,24,76,22],[85,25,76,23,"push"],[85,29,76,27],[85,30,76,28,"route"],[85,35,76,33],[85,36,76,34,"name"],[85,40,76,38],[85,41,76,39],[86,8,77,6],[86,12,77,10,"route"],[86,17,77,15],[86,18,77,16,"params"],[86,24,77,22],[86,26,77,24],[87,10,78,8],[87,14,78,14,"stringify"],[87,23,78,23],[87,26,78,26,"currentOptions"],[87,40,78,40],[87,41,78,41,"route"],[87,46,78,46],[87,47,78,47,"name"],[87,51,78,51],[87,52,78,52],[87,54,78,54,"stringify"],[87,63,78,63],[88,10,79,8],[88,14,79,14,"currentParams"],[88,27,79,27],[88,30,79,30,"Object"],[88,36,79,36],[88,37,79,37,"fromEntries"],[88,48,79,48],[88,49,79,49,"Object"],[88,55,79,55],[88,56,79,56,"entries"],[88,63,79,63],[88,64,79,64,"route"],[88,69,79,69],[88,70,79,70,"params"],[88,76,79,76],[88,77,79,77],[88,78,79,78,"map"],[88,81,79,81],[88,82,79,82,"_ref4"],[88,87,79,82],[89,12,79,82],[89,16,79,82,"_ref5"],[89,21,79,82],[89,28,79,82,"_slicedToArray2"],[89,43,79,82],[89,44,79,82,"default"],[89,51,79,82],[89,53,79,82,"_ref4"],[89,58,79,82],[90,14,79,84,"key"],[90,17,79,87],[90,20,79,87,"_ref5"],[90,25,79,87],[91,14,79,89,"value"],[91,19,79,94],[91,22,79,94,"_ref5"],[91,27,79,94],[92,12,79,94],[92,19,79,100],[92,20,79,101,"key"],[92,23,79,104],[92,25,79,106,"stringify"],[92,34,79,115],[92,37,79,118,"key"],[92,40,79,121],[92,41,79,122],[92,44,79,125,"stringify"],[92,53,79,134],[92,54,79,135,"key"],[92,57,79,138],[92,58,79,139],[92,59,79,140,"value"],[92,64,79,145],[92,65,79,146],[92,68,79,149,"String"],[92,74,79,155],[92,75,79,156,"value"],[92,80,79,161],[92,81,79,162],[92,82,79,163],[93,10,79,163],[93,12,79,164],[93,13,79,165],[94,10,80,8],[94,14,80,12,"parts"],[94,19,80,17],[94,21,80,19,"length"],[94,27,80,25],[94,29,80,27],[95,12,81,10,"Object"],[95,18,81,16],[95,19,81,17,"assign"],[95,25,81,23],[95,26,81,24,"allParams"],[95,35,81,33],[95,37,81,35,"currentParams"],[95,50,81,48],[95,51,81,49],[96,10,82,8],[97,10,83,8],[97,14,83,12,"focusedRoute"],[97,26,83,24],[97,31,83,29,"route"],[97,36,83,34],[97,38,83,36],[98,12,84,10],[99,12,85,10],[100,12,86,10,"focusedParams"],[100,25,86,23],[100,28,86,26],[101,14,87,12],[101,17,87,15,"currentParams"],[102,12,88,10],[102,13,88,11],[103,12,89,10,"parts"],[104,12,90,10],[105,12,90,10],[105,14,91,12,"forEach"],[105,21,91,19],[105,22,91,20,"_ref6"],[105,27,91,20],[105,31,93,16],[106,14,93,16],[106,18,92,12,"param"],[106,23,92,17],[106,26,92,17,"_ref6"],[106,31,92,17],[106,32,92,12,"param"],[106,37,92,17],[107,14,94,12],[107,18,94,16,"param"],[107,23,94,21],[107,25,94,23],[108,16,95,14],[109,16,96,14],[109,20,96,18,"focusedParams"],[109,33,96,31],[109,35,96,33],[110,18,97,16],[111,18,98,16],[111,25,98,23,"focusedParams"],[111,38,98,36],[111,39,98,37,"param"],[111,44,98,42],[111,45,98,43],[112,16,99,14],[113,14,100,12],[114,12,101,10],[114,13,101,11],[114,14,101,12],[115,10,102,8],[116,8,103,6],[118,8,105,6],[119,8,106,6],[119,12,106,10],[119,13,106,11,"currentOptions"],[119,27,106,25],[119,28,106,26,"route"],[119,33,106,31],[119,34,106,32,"name"],[119,38,106,36],[119,39,106,37],[119,40,106,38,"screens"],[119,47,106,45],[119,51,106,49,"route"],[119,56,106,54],[119,57,106,55,"state"],[119,62,106,60],[119,67,106,65,"undefined"],[119,76,106,74],[119,78,106,76],[120,10,107,8,"hasNext"],[120,17,107,15],[120,20,107,18],[120,25,107,23],[121,8,108,6],[121,9,108,7],[121,15,108,13],[122,10,109,8,"index"],[122,15,109,13],[122,18,109,16],[122,25,109,23,"route"],[122,30,109,28],[122,31,109,29,"state"],[122,36,109,34],[122,37,109,35,"index"],[122,42,109,40],[122,47,109,45],[122,55,109,53],[122,58,109,56,"route"],[122,63,109,61],[122,64,109,62,"state"],[122,69,109,67],[122,70,109,68,"index"],[122,75,109,73],[122,78,109,76,"route"],[122,83,109,81],[122,84,109,82,"state"],[122,89,109,87],[122,90,109,88,"routes"],[122,96,109,94],[122,97,109,95,"length"],[122,103,109,101],[122,106,109,104],[122,107,109,105],[123,10,110,8],[123,14,110,14,"nextRoute"],[123,23,110,23],[123,26,110,26,"route"],[123,31,110,31],[123,32,110,32,"state"],[123,37,110,37],[123,38,110,38,"routes"],[123,44,110,44],[123,45,110,45,"index"],[123,50,110,50],[123,51,110,51],[124,10,111,8],[124,14,111,14,"nestedConfig"],[124,26,111,26],[124,29,111,29,"currentOptions"],[124,43,111,43],[124,44,111,44,"route"],[124,49,111,49],[124,50,111,50,"name"],[124,54,111,54],[124,55,111,55],[124,56,111,56,"screens"],[124,63,111,63],[126,10,113,8],[127,10,114,8],[127,14,114,12,"nestedConfig"],[127,26,114,24],[127,30,114,28,"nextRoute"],[127,39,114,37],[127,40,114,38,"name"],[127,44,114,42],[127,48,114,46,"nestedConfig"],[127,60,114,58],[127,62,114,60],[128,12,115,10,"route"],[128,17,115,15],[128,20,115,18,"nextRoute"],[128,29,115,27],[129,12,116,10,"currentOptions"],[129,26,116,24],[129,29,116,27,"nestedConfig"],[129,41,116,39],[130,10,117,8],[130,11,117,9],[130,17,117,15],[131,12,118,10],[132,12,119,10,"hasNext"],[132,19,119,17],[132,22,119,20],[132,27,119,25],[133,10,120,8],[134,8,121,6],[135,6,122,4],[135,7,122,5],[136,6,74,4],[136,13,74,11,"route"],[136,18,74,16],[136,19,74,17,"name"],[136,23,74,21],[136,27,74,25,"currentOptions"],[136,41,74,39],[136,45,74,43,"hasNext"],[136,52,74,50],[137,8,74,50,"_loop2"],[137,14,74,50],[138,6,74,50],[139,6,123,4],[139,10,123,8,"currentOptions"],[139,24,123,22],[139,25,123,23,"route"],[139,30,123,28],[139,31,123,29,"name"],[139,35,123,33],[139,36,123,34],[139,41,123,39,"undefined"],[139,50,123,48],[139,52,123,50],[140,8,124,6,"path"],[140,12,124,10],[140,16,124,14,"parts"],[140,21,124,19],[140,23,124,21,"map"],[140,26,124,24],[140,27,124,25,"_ref"],[140,31,124,25],[140,35,128,12],[141,10,128,12],[141,14,125,8,"segment"],[141,21,125,15],[141,24,125,15,"_ref"],[141,28,125,15],[141,29,125,8,"segment"],[141,36,125,15],[142,12,126,8,"param"],[142,17,126,13],[142,20,126,13,"_ref"],[142,24,126,13],[142,25,126,8,"param"],[142,30,126,13],[143,12,127,8,"optional"],[143,20,127,16],[143,23,127,16,"_ref"],[143,27,127,16],[143,28,127,8,"optional"],[143,36,127,16],[144,10,129,8],[145,10,130,8],[146,10,131,8],[147,10,132,8],[147,14,132,12,"segment"],[147,21,132,19],[147,26,132,24],[147,29,132,27],[147,31,132,29],[148,12,133,10],[148,19,133,17,"route"],[148,24,133,22],[148,25,133,23,"name"],[148,29,133,27],[149,10,134,8],[151,10,136,8],[152,10,137,8],[152,14,137,12,"param"],[152,19,137,17],[152,21,137,19],[153,12,138,10],[153,16,138,16,"value"],[153,21,138,21],[153,24,138,24,"allParams"],[153,33,138,33],[153,34,138,34,"param"],[153,39,138,39],[153,40,138,40],[154,12,139,10],[154,16,139,14,"value"],[154,21,139,19],[154,26,139,24,"undefined"],[154,35,139,33],[154,39,139,37,"optional"],[154,47,139,45],[154,49,139,47],[155,14,140,12],[156,14,141,12],[156,21,141,19],[156,23,141,21],[157,12,142,10],[159,12,144,10],[160,12,145,10],[161,12,146,10],[161,19,146,17,"String"],[161,25,146,23],[161,26,146,24,"value"],[161,31,146,29],[161,32,146,30],[161,33,146,31,"replace"],[161,40,146,38],[161,41,146,39],[161,74,146,72],[161,76,146,74,"char"],[161,80,146,78],[161,84,146,82,"encodeURIComponent"],[161,102,146,100],[161,103,146,101,"char"],[161,107,146,105],[161,108,146,106],[161,109,146,107],[162,10,147,8],[163,10,148,8],[163,17,148,15,"encodeURIComponent"],[163,35,148,33],[163,36,148,34,"segment"],[163,43,148,41],[163,44,148,42],[164,8,149,6],[164,9,149,7],[164,10,149,8],[164,11,149,9,"join"],[164,15,149,13],[164,16,149,14],[164,19,149,17],[164,20,149,18],[165,6,150,4],[165,7,150,5],[165,13,150,11],[166,8,151,6,"path"],[166,12,151,10],[166,16,151,14,"encodeURIComponent"],[166,34,151,32],[166,35,151,33,"route"],[166,40,151,38],[166,41,151,39,"name"],[166,45,151,43],[166,46,151,44],[167,6,152,4],[168,6,153,4],[168,10,153,8],[168,11,153,9,"focusedParams"],[168,24,153,22],[168,28,153,26,"focusedRoute"],[168,40,153,38],[168,41,153,39,"params"],[168,47,153,45],[168,49,153,47],[169,8,154,6,"focusedParams"],[169,21,154,19],[169,24,154,22,"Object"],[169,30,154,28],[169,31,154,29,"fromEntries"],[169,42,154,40],[169,43,154,41,"Object"],[169,49,154,47],[169,50,154,48,"entries"],[169,57,154,55],[169,58,154,56,"focusedRoute"],[169,70,154,68],[169,71,154,69,"params"],[169,77,154,75],[169,78,154,76],[169,79,154,77,"map"],[169,82,154,80],[169,83,154,81,"_ref2"],[169,88,154,81],[170,10,154,81],[170,14,154,81,"_ref3"],[170,19,154,81],[170,26,154,81,"_slicedToArray2"],[170,41,154,81],[170,42,154,81,"default"],[170,49,154,81],[170,51,154,81,"_ref2"],[170,56,154,81],[171,12,154,83,"key"],[171,15,154,86],[171,18,154,86,"_ref3"],[171,23,154,86],[172,12,154,88,"value"],[172,17,154,93],[172,20,154,93,"_ref3"],[172,25,154,93],[173,10,154,93],[173,17,154,99],[173,18,154,100,"key"],[173,21,154,103],[173,23,154,105,"String"],[173,29,154,111],[173,30,154,112,"value"],[173,35,154,117],[173,36,154,118],[173,37,154,119],[174,8,154,119],[174,10,154,120],[174,11,154,121],[175,6,155,4],[176,6,156,4],[176,10,156,8,"route"],[176,15,156,13],[176,16,156,14,"state"],[176,21,156,19],[176,23,156,21],[177,8,157,6,"path"],[177,12,157,10],[177,16,157,14],[177,19,157,17],[178,6,158,4],[178,7,158,5],[178,13,158,11],[178,17,158,15,"focusedParams"],[178,30,158,28],[178,32,158,30],[179,8,159,6],[179,13,159,11],[179,17,159,17,"param"],[179,22,159,22],[179,26,159,26,"focusedParams"],[179,39,159,39],[179,41,159,41],[180,10,160,8],[180,14,160,12,"focusedParams"],[180,27,160,25],[180,28,160,26,"param"],[180,33,160,31],[180,34,160,32],[180,39,160,37],[180,50,160,48],[180,52,160,50],[181,12,161,10],[182,12,162,10],[182,19,162,17,"focusedParams"],[182,32,162,30],[182,33,162,31,"param"],[182,38,162,36],[182,39,162,37],[183,10,163,8],[184,8,164,6],[185,8,165,6],[185,12,165,12,"query"],[185,17,165,17],[185,20,165,20,"queryString"],[185,31,165,31],[185,32,165,32,"stringify"],[185,41,165,41],[185,42,165,42,"focusedParams"],[185,55,165,55],[185,57,165,57],[186,10,166,8,"sort"],[186,14,166,12],[186,16,166,14],[187,8,167,6],[187,9,167,7],[187,10,167,8],[188,8,168,6],[188,12,168,10,"query"],[188,17,168,15],[188,19,168,17],[189,10,169,8,"path"],[189,14,169,12],[189,18,169,16],[189,22,169,20,"query"],[189,27,169,25],[189,29,169,27],[190,8,170,6],[191,6,171,4],[192,6,172,4,"current"],[192,13,172,11],[192,16,172,14,"route"],[192,21,172,19],[192,22,172,20,"state"],[192,27,172,25],[193,4,173,2],[193,5,173,3],[194,4,63,2],[194,11,63,9,"current"],[194,18,63,16],[195,6,63,16,"_loop"],[195,11,63,16],[196,4,63,16],[198,4,175,2],[199,4,176,2],[199,8,176,6,"options"],[199,15,176,13],[199,17,176,15,"path"],[199,21,176,19],[199,23,176,21],[200,6,177,4,"path"],[200,10,177,8],[200,13,177,11],[200,16,177,14,"options"],[200,23,177,21],[200,24,177,22,"path"],[200,28,177,26],[200,32,177,30,"path"],[200,36,177,34],[200,38,177,36],[201,4,178,2],[203,4,180,2],[204,4,181,2,"path"],[204,8,181,6],[204,11,181,9,"path"],[204,15,181,13],[204,16,181,14,"replace"],[204,23,181,21],[204,24,181,22],[204,30,181,28],[204,32,181,30],[204,35,181,33],[204,36,181,34],[205,4,182,2,"path"],[205,8,182,6],[205,11,182,9,"path"],[205,15,182,13],[205,16,182,14,"length"],[205,22,182,20],[205,25,182,23],[205,26,182,24],[205,29,182,27,"path"],[205,33,182,31],[205,34,182,32,"replace"],[205,41,182,39],[205,42,182,40],[205,47,182,45],[205,49,182,47],[205,51,182,49],[205,52,182,50],[205,55,182,53,"path"],[205,59,182,57],[207,4,184,2],[208,4,185,2],[209,4,186,2],[209,8,186,6],[209,9,186,7,"path"],[209,13,186,11],[209,14,186,12,"startsWith"],[209,24,186,22],[209,25,186,23],[209,28,186,26],[209,29,186,27],[209,31,186,29],[210,6,187,4,"path"],[210,10,187,8],[210,13,187,11],[210,17,187,15,"path"],[210,21,187,19],[210,23,187,21],[211,4,188,2],[212,4,189,2],[212,11,189,9,"path"],[212,15,189,13],[213,2,190,0],[214,2,191,0],[214,6,191,6,"createConfigItem"],[214,22,191,22],[214,25,191,25,"createConfigItem"],[214,26,191,26,"config"],[214,32,191,32],[214,34,191,34,"parentParts"],[214,45,191,45],[214,50,191,50],[215,4,192,2],[215,8,192,6],[215,15,192,13,"config"],[215,21,192,19],[215,26,192,24],[215,34,192,32],[215,36,192,34],[216,6,193,4],[217,6,194,4],[217,10,194,10,"parts"],[217,16,194,15],[217,19,194,18],[217,23,194,18,"getPatternParts"],[217,55,194,33],[217,57,194,34,"config"],[217,63,194,40],[217,64,194,41],[218,6,195,4],[218,10,195,8,"parentParts"],[218,21,195,19],[218,23,195,21],[219,8,196,6],[219,15,196,13],[220,10,197,8,"parts"],[220,15,197,13],[220,17,197,15],[220,18,197,16],[220,21,197,19,"parentParts"],[220,32,197,30],[220,34,197,32],[220,37,197,35,"parts"],[220,43,197,40],[221,8,198,6],[221,9,198,7],[222,6,199,4],[223,6,200,4],[223,13,200,11],[224,8,201,6,"parts"],[224,13,201,11],[224,15,201,6,"parts"],[225,6,202,4],[225,7,202,5],[226,4,203,2],[227,4,204,2],[227,8,204,6,"config"],[227,14,204,12],[227,15,204,13,"exact"],[227,20,204,18],[227,24,204,22,"config"],[227,30,204,28],[227,31,204,29,"path"],[227,35,204,33],[227,40,204,38,"undefined"],[227,49,204,47],[227,51,204,49],[228,6,205,4],[228,12,205,10],[228,16,205,14,"Error"],[228,21,205,19],[228,22,205,20],[228,172,205,170],[228,173,205,171],[229,4,206,2],[231,4,208,2],[232,4,209,2],[233,4,210,2],[233,8,210,8,"parts"],[233,13,210,13],[233,16,210,16,"config"],[233,22,210,22],[233,23,210,23,"exact"],[233,28,210,28],[233,33,210,33],[233,37,210,37],[233,40,210,40],[233,41,210,41],[233,45,210,45,"parentParts"],[233,56,210,56],[233,60,210,60],[233,62,210,62],[233,63,210,63],[233,65,210,65],[233,69,210,69,"config"],[233,75,210,75],[233,76,210,76,"path"],[233,80,210,80],[233,83,210,83],[233,87,210,83,"getPatternParts"],[233,119,210,98],[233,121,210,99,"config"],[233,127,210,105],[233,128,210,106,"path"],[233,132,210,110],[233,133,210,111],[233,136,210,114],[233,138,210,116],[233,139,210,117],[233,140,210,118],[233,143,210,121,"config"],[233,149,210,127],[233,150,210,128,"path"],[233,154,210,132],[233,157,210,135],[233,161,210,135,"getPatternParts"],[233,193,210,150],[233,195,210,151,"config"],[233,201,210,157],[233,202,210,158,"path"],[233,206,210,162],[233,207,210,163],[233,210,210,166,"undefined"],[233,219,210,175],[234,4,211,2],[234,8,211,8,"screens"],[234,15,211,15],[234,18,211,18,"config"],[234,24,211,24],[234,25,211,25,"screens"],[234,32,211,32],[234,35,211,35,"createNormalizedConfigs"],[234,58,211,58],[234,59,211,59,"config"],[234,65,211,65],[234,66,211,66,"screens"],[234,73,211,73],[234,75,211,75,"parts"],[234,80,211,80],[234,81,211,81],[234,84,211,84,"undefined"],[234,93,211,93],[235,4,212,2],[235,11,212,9],[236,6,213,4,"parts"],[236,11,213,9],[237,6,214,4,"stringify"],[237,15,214,13],[237,17,214,15,"config"],[237,23,214,21],[237,24,214,22,"stringify"],[237,33,214,31],[238,6,215,4,"screens"],[239,4,216,2],[239,5,216,3],[240,2,217,0],[240,3,217,1],[241,2,218,0],[241,6,218,6,"createNormalizedConfigs"],[241,29,218,29],[241,32,218,32,"createNormalizedConfigs"],[241,33,218,33,"options"],[241,40,218,40],[241,42,218,42,"parts"],[241,47,218,47],[241,52,218,52,"Object"],[241,58,218,58],[241,59,218,59,"fromEntries"],[241,70,218,70],[241,71,218,71,"Object"],[241,77,218,77],[241,78,218,78,"entries"],[241,85,218,85],[241,86,218,86,"options"],[241,93,218,93],[241,94,218,94],[241,95,218,95,"map"],[241,98,218,98],[241,99,218,99,"_ref7"],[241,104,218,99],[241,108,218,114],[242,4,218,114],[242,8,218,114,"_ref8"],[242,13,218,114],[242,20,218,114,"_slicedToArray2"],[242,35,218,114],[242,36,218,114,"default"],[242,43,218,114],[242,45,218,114,"_ref7"],[242,50,218,114],[243,6,218,101,"name"],[243,10,218,105],[243,13,218,105,"_ref8"],[243,18,218,105],[244,6,218,107,"c"],[244,7,218,108],[244,10,218,108,"_ref8"],[244,15,218,108],[245,4,219,2],[245,8,219,8,"result"],[245,14,219,14],[245,17,219,17,"createConfigItem"],[245,33,219,33],[245,34,219,34,"c"],[245,35,219,35],[245,37,219,37,"parts"],[245,42,219,42],[245,43,219,43],[246,4,220,2],[246,11,220,9],[246,12,220,10,"name"],[246,16,220,14],[246,18,220,16,"result"],[246,24,220,22],[246,25,220,23],[247,2,221,0],[247,3,221,1],[247,4,221,2],[247,5,221,3],[248,0,221,4],[248,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B,iFD;oBEY;WFU;yBGuB;0ECsB,gCD;OHG;iFCK,sCD;CHoC;yBQC;CR0B;gCSC,mEL;CKG,ET"}},"type":"js/module"}]}