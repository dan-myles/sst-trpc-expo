{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":182,"column":0,"index":8313}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":182,"column":0,"index":8313}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@trpc/server/observable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"I122979nMYhHcuaUZWanjRGzbec="}},{"name":"@trpc/server/rpc","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":71},"end":{"line":2,"column":59,"index":130}}],"key":"AnRAIQvK0FHz7eQ/OSeoZxzU2hs="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":131},"end":{"line":3,"column":82,"index":213}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../internals/inputWithTrackedEventId.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":214},"end":{"line":4,"column":83,"index":297}}],"key":"XH14U48Ui7KRO8lXIMaXunVmw4c="}},{"name":"../internals/signals.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":298},"end":{"line":5,"column":60,"index":358}}],"key":"ddNnA8KnDeY/w8oaTgO7HIhuYFk="}},{"name":"../TRPCClientError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":359},"end":{"line":6,"column":57,"index":416}}],"key":"+VRJuZ2ikq/rZ4G1ICvMdURsA7A="}},{"name":"../internals/transformer.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":417},"end":{"line":7,"column":62,"index":479}}],"key":"/k/c7tLnDAbhKCTNVj5JzuGCP1I="}},{"name":"./internals/httpUtils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":480},"end":{"line":8,"column":51,"index":531}}],"key":"ZJK0wcbPkw9cOEgpaYuOlXy9AFA="}},{"name":"./internals/urlWithConnectionParams.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":532},"end":{"line":9,"column":67,"index":599}}],"key":"v8BGSrsGWsYZTNOpgJbl3HDzYyk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.unstable_httpSubscriptionLink = unstable_httpSubscriptionLink;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _observable = require(_dependencyMap[2], \"@trpc/server/observable\");\n  var _rpc = require(_dependencyMap[3], \"@trpc/server/rpc\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[4], \"@trpc/server/unstable-core-do-not-import\");\n  var _inputWithTrackedEventId = require(_dependencyMap[5], \"../internals/inputWithTrackedEventId.mjs\");\n  var _signals = require(_dependencyMap[6], \"../internals/signals.mjs\");\n  var _TRPCClientError = require(_dependencyMap[7], \"../TRPCClientError.mjs\");\n  var _transformer = require(_dependencyMap[8], \"../internals/transformer.mjs\");\n  var _httpUtils = require(_dependencyMap[9], \"./internals/httpUtils.mjs\");\n  var _urlWithConnectionParams2 = require(_dependencyMap[10], \"./internals/urlWithConnectionParams.mjs\");\n  function _asyncIterator(r) { var n, t, o, e = 2; for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = \"@@asyncIterator\", o = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n  function AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function (r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function () { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function (r) { var n = this.s.return; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function (r) { var n = this.s.return; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }\n  function urlWithConnectionParams(_x) {\n    return _urlWithConnectionParams.apply(this, arguments);\n  }\n  /**\n   * tRPC error codes that are considered retryable\n   * With out of the box SSE, the client will reconnect when these errors are encountered\n   */\n  function _urlWithConnectionParams() {\n    _urlWithConnectionParams = (0, _asyncToGenerator2.default)(function* (opts) {\n      var url = yield (0, _urlWithConnectionParams2.resultOf)(opts.url);\n      if (opts.connectionParams) {\n        var params = yield (0, _urlWithConnectionParams2.resultOf)(opts.connectionParams);\n        var prefix = url.includes('?') ? '&' : '?';\n        url += prefix + 'connectionParams=' + encodeURIComponent(JSON.stringify(params));\n      }\n      return url;\n    });\n    return _urlWithConnectionParams.apply(this, arguments);\n  }\n  var codes5xx = [_rpc.TRPC_ERROR_CODES_BY_KEY.BAD_GATEWAY, _rpc.TRPC_ERROR_CODES_BY_KEY.SERVICE_UNAVAILABLE, _rpc.TRPC_ERROR_CODES_BY_KEY.GATEWAY_TIMEOUT, _rpc.TRPC_ERROR_CODES_BY_KEY.INTERNAL_SERVER_ERROR];\n  /**\n   * @see https://trpc.io/docs/client/links/httpSubscriptionLink\n   */\n  function unstable_httpSubscriptionLink(opts) {\n    var transformer = (0, _transformer.getTransformer)(opts.transformer);\n    return () => {\n      return _ref => {\n        var op = _ref.op;\n        return (0, _observable.observable)(observer => {\n          var type = op.type,\n            path = op.path,\n            input = op.input;\n          /* istanbul ignore if -- @preserve */\n          if (type !== 'subscription') {\n            throw new Error('httpSubscriptionLink only supports subscriptions');\n          }\n          var lastEventId = undefined;\n          var ac = new AbortController();\n          var signal = (0, _signals.raceAbortSignals)(op.signal, ac.signal);\n          var eventSourceStream = (0, _unstableCoreDoNotImport.sseStreamConsumer)({\n            url: function () {\n              var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n                return (0, _httpUtils.getUrl)({\n                  transformer,\n                  url: yield urlWithConnectionParams(opts),\n                  input: (0, _inputWithTrackedEventId.inputWithTrackedEventId)(input, lastEventId),\n                  path,\n                  type,\n                  signal: null\n                });\n              });\n              return function url() {\n                return _ref2.apply(this, arguments);\n              };\n            }(),\n            init: () => (0, _urlWithConnectionParams2.resultOf)(opts.eventSourceOptions, {\n              op\n            }),\n            signal,\n            deserialize: transformer.output.deserialize,\n            EventSource: opts.EventSource ?? globalThis.EventSource\n          });\n          var connectionState = (0, _observable.behaviorSubject)({\n            type: 'state',\n            state: 'connecting',\n            error: null\n          });\n          var connectionSub = connectionState.subscribe({\n            next(state) {\n              observer.next({\n                result: state\n              });\n            }\n          });\n          (0, _unstableCoreDoNotImport.run)(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n            var _iteratorAbruptCompletion = false;\n            var _didIteratorError = false;\n            var _iteratorError;\n            try {\n              for (var _iterator = _asyncIterator(eventSourceStream), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n                var chunk = _step.value;\n                {\n                  switch (chunk.type) {\n                    case 'ping':\n                      break;\n                    case 'data':\n                      var chunkData = chunk.data;\n                      var result = void 0;\n                      if (chunkData.id) {\n                        // if the `tracked()`-helper is used, we always have an `id` field\n                        lastEventId = chunkData.id;\n                        result = {\n                          id: chunkData.id,\n                          data: chunkData\n                        };\n                      } else {\n                        result = {\n                          data: chunkData.data\n                        };\n                      }\n                      observer.next({\n                        result,\n                        context: {\n                          eventSource: chunk.eventSource\n                        }\n                      });\n                      break;\n                    case 'connected':\n                      {\n                        observer.next({\n                          result: {\n                            type: 'started'\n                          },\n                          context: {\n                            eventSource: chunk.eventSource\n                          }\n                        });\n                        connectionState.next({\n                          type: 'state',\n                          state: 'pending',\n                          error: null\n                        });\n                        break;\n                      }\n                    case 'serialized-error':\n                      {\n                        var error = _TRPCClientError.TRPCClientError.from({\n                          error: chunk.error\n                        });\n                        if (codes5xx.includes(chunk.error.code)) {\n                          //\n                          connectionState.next({\n                            type: 'state',\n                            state: 'connecting',\n                            error\n                          });\n                          break;\n                        }\n                        //\n                        // non-retryable error, cancel the subscription\n                        throw error;\n                      }\n                    case 'connecting':\n                      {\n                        var lastState = connectionState.get();\n                        var _error = chunk.event && _TRPCClientError.TRPCClientError.from(chunk.event);\n                        if (!_error && lastState.state === 'connecting') {\n                          break;\n                        }\n                        connectionState.next({\n                          type: 'state',\n                          state: 'connecting',\n                          error: _error\n                        });\n                        break;\n                      }\n                    case 'timeout':\n                      {\n                        connectionState.next({\n                          type: 'state',\n                          state: 'connecting',\n                          error: new _TRPCClientError.TRPCClientError(`Timeout of ${chunk.ms}ms reached while waiting for a response`)\n                        });\n                      }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (_iteratorAbruptCompletion && _iterator.return != null) {\n                  yield _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n            observer.next({\n              result: {\n                type: 'stopped'\n              }\n            });\n            connectionState.next({\n              type: 'state',\n              state: 'idle',\n              error: null\n            });\n            observer.complete();\n          })).catch(error => {\n            observer.error(_TRPCClientError.TRPCClientError.from(error));\n          });\n          return () => {\n            observer.complete();\n            ac.abort();\n            connectionSub.unsubscribe();\n          };\n        });\n      };\n    };\n  }\n});","lineCount":223,"map":[[8,2,1,0],[8,6,1,0,"_observable"],[8,17,1,0],[8,20,1,0,"require"],[8,27,1,0],[8,28,1,0,"_dependencyMap"],[8,42,1,0],[9,2,2,0],[9,6,2,0,"_rpc"],[9,10,2,0],[9,13,2,0,"require"],[9,20,2,0],[9,21,2,0,"_dependencyMap"],[9,35,2,0],[10,2,3,0],[10,6,3,0,"_unstableCoreDoNotImport"],[10,30,3,0],[10,33,3,0,"require"],[10,40,3,0],[10,41,3,0,"_dependencyMap"],[10,55,3,0],[11,2,4,0],[11,6,4,0,"_inputWithTrackedEventId"],[11,30,4,0],[11,33,4,0,"require"],[11,40,4,0],[11,41,4,0,"_dependencyMap"],[11,55,4,0],[12,2,5,0],[12,6,5,0,"_signals"],[12,14,5,0],[12,17,5,0,"require"],[12,24,5,0],[12,25,5,0,"_dependencyMap"],[12,39,5,0],[13,2,6,0],[13,6,6,0,"_TRPCClientError"],[13,22,6,0],[13,25,6,0,"require"],[13,32,6,0],[13,33,6,0,"_dependencyMap"],[13,47,6,0],[14,2,7,0],[14,6,7,0,"_transformer"],[14,18,7,0],[14,21,7,0,"require"],[14,28,7,0],[14,29,7,0,"_dependencyMap"],[14,43,7,0],[15,2,8,0],[15,6,8,0,"_httpUtils"],[15,16,8,0],[15,19,8,0,"require"],[15,26,8,0],[15,27,8,0,"_dependencyMap"],[15,41,8,0],[16,2,9,0],[16,6,9,0,"_urlWithConnectionParams2"],[16,31,9,0],[16,34,9,0,"require"],[16,41,9,0],[16,42,9,0,"_dependencyMap"],[16,56,9,0],[17,2,9,67],[17,11,9,67,"_asyncIterator"],[17,26,9,67,"r"],[17,27,9,67],[17,35,9,67,"n"],[17,36,9,67],[17,38,9,67,"t"],[17,39,9,67],[17,41,9,67,"o"],[17,42,9,67],[17,44,9,67,"e"],[17,45,9,67],[17,78,9,67,"Symbol"],[17,84,9,67],[17,89,9,67,"t"],[17,90,9,67],[17,93,9,67,"Symbol"],[17,99,9,67],[17,100,9,67,"asyncIterator"],[17,113,9,67],[17,115,9,67,"o"],[17,116,9,67],[17,119,9,67,"Symbol"],[17,125,9,67],[17,126,9,67,"iterator"],[17,134,9,67],[17,137,9,67,"e"],[17,138,9,67],[17,149,9,67,"t"],[17,150,9,67],[17,163,9,67,"n"],[17,164,9,67],[17,167,9,67,"r"],[17,168,9,67],[17,169,9,67,"t"],[17,170,9,67],[17,181,9,67,"n"],[17,182,9,67],[17,183,9,67,"call"],[17,187,9,67],[17,188,9,67,"r"],[17,189,9,67],[17,196,9,67,"o"],[17,197,9,67],[17,210,9,67,"n"],[17,211,9,67],[17,214,9,67,"r"],[17,215,9,67],[17,216,9,67,"o"],[17,217,9,67],[17,232,9,67,"AsyncFromSyncIterator"],[17,253,9,67],[17,254,9,67,"n"],[17,255,9,67],[17,256,9,67,"call"],[17,260,9,67],[17,261,9,67,"r"],[17,262,9,67],[17,266,9,67,"t"],[17,267,9,67],[17,289,9,67,"o"],[17,290,9,67],[17,319,9,67,"TypeError"],[17,328,9,67],[18,2,9,67],[18,11,9,67,"AsyncFromSyncIterator"],[18,33,9,67,"r"],[18,34,9,67],[18,47,9,67,"AsyncFromSyncIteratorContinuation"],[18,81,9,67,"r"],[18,82,9,67],[18,90,9,67,"Object"],[18,96,9,67],[18,97,9,67,"r"],[18,98,9,67],[18,104,9,67,"r"],[18,105,9,67],[18,114,9,67,"Promise"],[18,121,9,67],[18,122,9,67,"reject"],[18,128,9,67],[18,133,9,67,"TypeError"],[18,142,9,67],[18,143,9,67,"r"],[18,144,9,67],[18,175,9,67,"n"],[18,176,9,67],[18,179,9,67,"r"],[18,180,9,67],[18,181,9,67,"done"],[18,185,9,67],[18,194,9,67,"Promise"],[18,201,9,67],[18,202,9,67,"resolve"],[18,209,9,67],[18,210,9,67,"r"],[18,211,9,67],[18,212,9,67,"value"],[18,217,9,67],[18,219,9,67,"then"],[18,223,9,67],[18,234,9,67,"r"],[18,235,9,67],[18,248,9,67,"value"],[18,253,9,67],[18,255,9,67,"r"],[18,256,9,67],[18,258,9,67,"done"],[18,262,9,67],[18,264,9,67,"n"],[18,265,9,67],[18,282,9,67,"AsyncFromSyncIterator"],[18,303,9,67],[18,315,9,67,"AsyncFromSyncIterator"],[18,316,9,67,"r"],[18,317,9,67],[18,326,9,67,"s"],[18,327,9,67],[18,330,9,67,"r"],[18,331,9,67],[18,338,9,67,"n"],[18,339,9,67],[18,342,9,67,"r"],[18,343,9,67],[18,344,9,67,"next"],[18,348,9,67],[18,353,9,67,"AsyncFromSyncIterator"],[18,374,9,67],[18,375,9,67,"prototype"],[18,384,9,67],[18,389,9,67,"s"],[18,390,9,67],[18,398,9,67,"n"],[18,399,9,67],[18,407,9,67,"next"],[18,411,9,67],[18,422,9,67,"next"],[18,423,9,67],[18,434,9,67,"AsyncFromSyncIteratorContinuation"],[18,467,9,67],[18,473,9,67,"n"],[18,474,9,67],[18,475,9,67,"apply"],[18,480,9,67],[18,486,9,67,"s"],[18,487,9,67],[18,489,9,67,"arguments"],[18,498,9,67],[18,505,9,67,"return"],[18,511,9,67],[18,522,9,67,"return"],[18,523,9,67,"r"],[18,524,9,67],[18,532,9,67,"n"],[18,533,9,67],[18,541,9,67,"s"],[18,542,9,67],[18,543,9,67,"return"],[18,549,9,67],[18,569,9,67,"n"],[18,570,9,67],[18,573,9,67,"Promise"],[18,580,9,67],[18,581,9,67,"resolve"],[18,588,9,67],[18,591,9,67,"value"],[18,596,9,67],[18,598,9,67,"r"],[18,599,9,67],[18,601,9,67,"done"],[18,605,9,67],[18,615,9,67,"AsyncFromSyncIteratorContinuation"],[18,648,9,67],[18,649,9,67,"n"],[18,650,9,67],[18,651,9,67,"apply"],[18,656,9,67],[18,662,9,67,"s"],[18,663,9,67],[18,665,9,67,"arguments"],[18,674,9,67],[18,681,9,67,"throw"],[18,686,9,67],[18,697,9,67,"throw"],[18,698,9,67,"r"],[18,699,9,67],[18,707,9,67,"n"],[18,708,9,67],[18,716,9,67,"s"],[18,717,9,67],[18,718,9,67,"return"],[18,724,9,67],[18,744,9,67,"n"],[18,745,9,67],[18,748,9,67,"Promise"],[18,755,9,67],[18,756,9,67,"reject"],[18,762,9,67],[18,763,9,67,"r"],[18,764,9,67],[18,768,9,67,"AsyncFromSyncIteratorContinuation"],[18,801,9,67],[18,802,9,67,"n"],[18,803,9,67],[18,804,9,67,"apply"],[18,809,9,67],[18,815,9,67,"s"],[18,816,9,67],[18,818,9,67,"arguments"],[18,827,9,67],[18,840,9,67,"AsyncFromSyncIterator"],[18,861,9,67],[18,862,9,67,"r"],[18,863,9,67],[19,2,9,67],[19,11,11,15,"urlWithConnectionParams"],[19,34,11,38,"urlWithConnectionParams"],[19,35,11,38,"_x"],[19,37,11,38],[20,4,11,38],[20,11,11,38,"_urlWithConnectionParams"],[20,35,11,38],[20,36,11,38,"apply"],[20,41,11,38],[20,48,11,38,"arguments"],[20,57,11,38],[21,2,11,38],[22,2,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,2,20,0],[26,11,20,0,"_urlWithConnectionParams"],[26,36,20,0],[27,4,20,0,"_urlWithConnectionParams"],[27,28,20,0],[27,35,20,0,"_asyncToGenerator2"],[27,53,20,0],[27,54,20,0,"default"],[27,61,20,0],[27,63,11,0],[27,74,11,39,"opts"],[27,78,11,43],[27,80,11,45],[28,6,12,4],[28,10,12,8,"url"],[28,13,12,11],[28,22,12,20],[28,26,12,20,"resultOf"],[28,60,12,28],[28,62,12,29,"opts"],[28,66,12,33],[28,67,12,34,"url"],[28,70,12,37],[28,71,12,38],[29,6,13,4],[29,10,13,8,"opts"],[29,14,13,12],[29,15,13,13,"connectionParams"],[29,31,13,29],[29,33,13,31],[30,8,14,8],[30,12,14,14,"params"],[30,18,14,20],[30,27,14,29],[30,31,14,29,"resultOf"],[30,65,14,37],[30,67,14,38,"opts"],[30,71,14,42],[30,72,14,43,"connectionParams"],[30,88,14,59],[30,89,14,60],[31,8,15,8],[31,12,15,14,"prefix"],[31,18,15,20],[31,21,15,23,"url"],[31,24,15,26],[31,25,15,27,"includes"],[31,33,15,35],[31,34,15,36],[31,37,15,39],[31,38,15,40],[31,41,15,43],[31,44,15,46],[31,47,15,49],[31,50,15,52],[32,8,16,8,"url"],[32,11,16,11],[32,15,16,15,"prefix"],[32,21,16,21],[32,24,16,24],[32,43,16,43],[32,46,16,46,"encodeURIComponent"],[32,64,16,64],[32,65,16,65,"JSON"],[32,69,16,69],[32,70,16,70,"stringify"],[32,79,16,79],[32,80,16,80,"params"],[32,86,16,86],[32,87,16,87],[32,88,16,88],[33,6,17,4],[34,6,18,4],[34,13,18,11,"url"],[34,16,18,14],[35,4,19,0],[35,5,19,1],[36,4,19,1],[36,11,19,1,"_urlWithConnectionParams"],[36,35,19,1],[36,36,19,1,"apply"],[36,41,19,1],[36,48,19,1,"arguments"],[36,57,19,1],[37,2,19,1],[38,2,23,4],[38,6,23,10,"codes5xx"],[38,14,23,18],[38,17,23,21],[38,18,24,4,"TRPC_ERROR_CODES_BY_KEY"],[38,46,24,27],[38,47,24,28,"BAD_GATEWAY"],[38,58,24,39],[38,60,25,4,"TRPC_ERROR_CODES_BY_KEY"],[38,88,25,27],[38,89,25,28,"SERVICE_UNAVAILABLE"],[38,108,25,47],[38,110,26,4,"TRPC_ERROR_CODES_BY_KEY"],[38,138,26,27],[38,139,26,28,"GATEWAY_TIMEOUT"],[38,154,26,43],[38,156,27,4,"TRPC_ERROR_CODES_BY_KEY"],[38,184,27,27],[38,185,27,28,"INTERNAL_SERVER_ERROR"],[38,206,27,49],[38,207,28,1],[39,2,29,0],[40,0,30,0],[41,0,31,0],[42,2,31,4],[42,11,31,13,"unstable_httpSubscriptionLink"],[42,40,31,42,"unstable_httpSubscriptionLink"],[42,41,31,43,"opts"],[42,45,31,47],[42,47,31,49],[43,4,32,4],[43,8,32,10,"transformer"],[43,19,32,21],[43,22,32,24],[43,26,32,24,"getTransformer"],[43,53,32,38],[43,55,32,39,"opts"],[43,59,32,43],[43,60,32,44,"transformer"],[43,71,32,55],[43,72,32,56],[44,4,33,4],[44,11,33,11],[44,17,33,15],[45,6,34,8],[45,13,34,15,"_ref"],[45,17,34,15],[45,21,34,25],[46,8,34,25],[46,12,34,18,"op"],[46,14,34,20],[46,17,34,20,"_ref"],[46,21,34,20],[46,22,34,18,"op"],[46,24,34,20],[47,8,35,12],[47,15,35,19],[47,19,35,19,"observable"],[47,41,35,29],[47,43,35,31,"observer"],[47,51,35,39],[47,55,35,42],[48,10,36,16],[48,14,36,24,"type"],[48,18,36,28],[48,21,36,46,"op"],[48,23,36,48],[48,24,36,24,"type"],[48,28,36,28],[49,12,36,30,"path"],[49,16,36,34],[49,19,36,46,"op"],[49,21,36,48],[49,22,36,30,"path"],[49,26,36,34],[50,12,36,36,"input"],[50,17,36,41],[50,20,36,46,"op"],[50,22,36,48],[50,23,36,36,"input"],[50,28,36,41],[51,10,37,16],[52,10,37,54],[52,14,37,58,"type"],[52,18,37,62],[52,23,37,67],[52,37,37,81],[52,39,37,83],[53,12,38,20],[53,18,38,26],[53,22,38,30,"Error"],[53,27,38,35],[53,28,38,36],[53,78,38,86],[53,79,38,87],[54,10,39,16],[55,10,40,16],[55,14,40,20,"lastEventId"],[55,25,40,31],[55,28,40,34,"undefined"],[55,37,40,43],[56,10,41,16],[56,14,41,22,"ac"],[56,16,41,24],[56,19,41,27],[56,23,41,31,"AbortController"],[56,38,41,46],[56,39,41,47],[56,40,41,48],[57,10,42,16],[57,14,42,22,"signal"],[57,20,42,28],[57,23,42,31],[57,27,42,31,"raceAbortSignals"],[57,52,42,47],[57,54,42,48,"op"],[57,56,42,50],[57,57,42,51,"signal"],[57,63,42,57],[57,65,42,59,"ac"],[57,67,42,61],[57,68,42,62,"signal"],[57,74,42,68],[57,75,42,69],[58,10,43,16],[58,14,43,22,"eventSourceStream"],[58,31,43,39],[58,34,43,42],[58,38,43,42,"sseStreamConsumer"],[58,80,43,59],[58,82,43,60],[59,12,44,20,"url"],[59,15,44,23],[60,14,44,23],[60,18,44,23,"_ref2"],[60,23,44,23],[60,30,44,23,"_asyncToGenerator2"],[60,48,44,23],[60,49,44,23,"default"],[60,56,44,23],[60,58,44,25],[61,16,44,25],[61,23,44,35],[61,27,44,35,"getUrl"],[61,44,44,41],[61,46,44,42],[62,18,45,28,"transformer"],[62,29,45,39],[63,18,46,28,"url"],[63,21,46,31],[63,29,46,39,"urlWithConnectionParams"],[63,52,46,62],[63,53,46,63,"opts"],[63,57,46,67],[63,58,46,68],[64,18,47,28,"input"],[64,23,47,33],[64,25,47,35],[64,29,47,35,"inputWithTrackedEventId"],[64,77,47,58],[64,79,47,59,"input"],[64,84,47,64],[64,86,47,66,"lastEventId"],[64,97,47,77],[64,98,47,78],[65,18,48,28,"path"],[65,22,48,32],[66,18,49,28,"type"],[66,22,49,32],[67,18,50,28,"signal"],[67,24,50,34],[67,26,50,36],[68,16,51,24],[68,17,51,25],[68,18,51,26],[69,14,51,26],[70,14,51,26],[70,30,44,20,"url"],[70,33,44,23,"url"],[70,34,44,23],[71,16,44,23],[71,23,44,23,"_ref2"],[71,28,44,23],[71,29,44,23,"apply"],[71,34,44,23],[71,41,44,23,"arguments"],[71,50,44,23],[72,14,44,23],[73,12,44,23],[73,15,51,26],[74,12,52,20,"init"],[74,16,52,24],[74,18,52,26,"init"],[74,19,52,26],[74,24,52,30],[74,28,52,30,"resultOf"],[74,62,52,38],[74,64,52,39,"opts"],[74,68,52,43],[74,69,52,44,"eventSourceOptions"],[74,87,52,62],[74,89,52,64],[75,14,53,28,"op"],[76,12,54,24],[76,13,54,25],[76,14,54,26],[77,12,55,20,"signal"],[77,18,55,26],[78,12,56,20,"deserialize"],[78,23,56,31],[78,25,56,33,"transformer"],[78,36,56,44],[78,37,56,45,"output"],[78,43,56,51],[78,44,56,52,"deserialize"],[78,55,56,63],[79,12,57,20,"EventSource"],[79,23,57,31],[79,25,57,33,"opts"],[79,29,57,37],[79,30,57,38,"EventSource"],[79,41,57,49],[79,45,57,53,"globalThis"],[79,55,57,63],[79,56,57,64,"EventSource"],[80,10,58,16],[80,11,58,17],[80,12,58,18],[81,10,59,16],[81,14,59,22,"connectionState"],[81,29,59,37],[81,32,59,40],[81,36,59,40,"behaviorSubject"],[81,63,59,55],[81,65,59,56],[82,12,60,20,"type"],[82,16,60,24],[82,18,60,26],[82,25,60,33],[83,12,61,20,"state"],[83,17,61,25],[83,19,61,27],[83,31,61,39],[84,12,62,20,"error"],[84,17,62,25],[84,19,62,27],[85,10,63,16],[85,11,63,17],[85,12,63,18],[86,10,64,16],[86,14,64,22,"connectionSub"],[86,27,64,35],[86,30,64,38,"connectionState"],[86,45,64,53],[86,46,64,54,"subscribe"],[86,55,64,63],[86,56,64,64],[87,12,65,20,"next"],[87,16,65,24,"next"],[87,17,65,26,"state"],[87,22,65,31],[87,24,65,33],[88,14,66,24,"observer"],[88,22,66,32],[88,23,66,33,"next"],[88,27,66,37],[88,28,66,38],[89,16,67,28,"result"],[89,22,67,34],[89,24,67,36,"state"],[90,14,68,24],[90,15,68,25],[90,16,68,26],[91,12,69,20],[92,10,70,16],[92,11,70,17],[92,12,70,18],[93,10,71,16],[93,14,71,16,"run"],[93,42,71,19],[93,61,71,19,"_asyncToGenerator2"],[93,79,71,19],[93,80,71,19,"default"],[93,87,71,19],[93,89,71,20],[93,102,71,30],[94,12,71,30],[94,16,71,30,"_iteratorAbruptCompletion"],[94,41,71,30],[95,12,71,30],[95,16,71,30,"_didIteratorError"],[95,33,71,30],[96,12,71,30],[96,16,71,30,"_iteratorError"],[96,30,71,30],[97,12,71,30],[98,14,72,20],[98,23,72,20,"_iterator"],[98,32,72,20],[98,35,72,20,"_asyncIterator"],[98,49,72,20],[98,50,72,46,"eventSourceStream"],[98,67,72,63],[98,70,72,63,"_step"],[98,75,72,63],[98,77,72,63,"_iteratorAbruptCompletion"],[98,102,72,63],[98,107,72,63,"_step"],[98,112,72,63],[98,121,72,63,"_iterator"],[98,130,72,63],[98,131,72,63,"next"],[98,135,72,63],[98,139,72,63,"done"],[98,143,72,63],[98,145,72,63,"_iteratorAbruptCompletion"],[98,170,72,63],[98,180,72,64],[99,16,72,64],[99,20,72,37,"chunk"],[99,25,72,42],[99,28,72,42,"_step"],[99,33,72,42],[99,34,72,42,"value"],[99,39,72,42],[100,16,72,42],[101,18,73,24],[101,26,73,31,"chunk"],[101,31,73,36],[101,32,73,37,"type"],[101,36,73,41],[102,20,74,28],[102,25,74,33],[102,31,74,39],[103,22,75,32],[104,20,76,28],[104,25,76,33],[104,31,76,39],[105,22,77,32],[105,26,77,38,"chunkData"],[105,35,77,47],[105,38,77,50,"chunk"],[105,43,77,55],[105,44,77,56,"data"],[105,48,77,60],[106,22,78,32],[106,26,78,36,"result"],[106,32,78,42],[107,22,79,32],[107,26,79,36,"chunkData"],[107,35,79,45],[107,36,79,46,"id"],[107,38,79,48],[107,40,79,50],[108,24,80,36],[109,24,81,36,"lastEventId"],[109,35,81,47],[109,38,81,50,"chunkData"],[109,47,81,59],[109,48,81,60,"id"],[109,50,81,62],[110,24,82,36,"result"],[110,30,82,42],[110,33,82,45],[111,26,83,40,"id"],[111,28,83,42],[111,30,83,44,"chunkData"],[111,39,83,53],[111,40,83,54,"id"],[111,42,83,56],[112,26,84,40,"data"],[112,30,84,44],[112,32,84,46,"chunkData"],[113,24,85,36],[113,25,85,37],[114,22,86,32],[114,23,86,33],[114,29,86,39],[115,24,87,36,"result"],[115,30,87,42],[115,33,87,45],[116,26,88,40,"data"],[116,30,88,44],[116,32,88,46,"chunkData"],[116,41,88,55],[116,42,88,56,"data"],[117,24,89,36],[117,25,89,37],[118,22,90,32],[119,22,91,32,"observer"],[119,30,91,40],[119,31,91,41,"next"],[119,35,91,45],[119,36,91,46],[120,24,92,36,"result"],[120,30,92,42],[121,24,93,36,"context"],[121,31,93,43],[121,33,93,45],[122,26,94,40,"eventSource"],[122,37,94,51],[122,39,94,53,"chunk"],[122,44,94,58],[122,45,94,59,"eventSource"],[123,24,95,36],[124,22,96,32],[124,23,96,33],[124,24,96,34],[125,22,97,32],[126,20,98,28],[126,25,98,33],[126,36,98,44],[127,22,99,32],[128,24,100,36,"observer"],[128,32,100,44],[128,33,100,45,"next"],[128,37,100,49],[128,38,100,50],[129,26,101,40,"result"],[129,32,101,46],[129,34,101,48],[130,28,102,44,"type"],[130,32,102,48],[130,34,102,50],[131,26,103,40],[131,27,103,41],[132,26,104,40,"context"],[132,33,104,47],[132,35,104,49],[133,28,105,44,"eventSource"],[133,39,105,55],[133,41,105,57,"chunk"],[133,46,105,62],[133,47,105,63,"eventSource"],[134,26,106,40],[135,24,107,36],[135,25,107,37],[135,26,107,38],[136,24,108,36,"connectionState"],[136,39,108,51],[136,40,108,52,"next"],[136,44,108,56],[136,45,108,57],[137,26,109,40,"type"],[137,30,109,44],[137,32,109,46],[137,39,109,53],[138,26,110,40,"state"],[138,31,110,45],[138,33,110,47],[138,42,110,56],[139,26,111,40,"error"],[139,31,111,45],[139,33,111,47],[140,24,112,36],[140,25,112,37],[140,26,112,38],[141,24,113,36],[142,22,114,32],[143,20,115,28],[143,25,115,33],[143,43,115,51],[144,22,116,32],[145,24,117,36],[145,28,117,42,"error"],[145,33,117,47],[145,36,117,50,"TRPCClientError"],[145,68,117,65],[145,69,117,66,"from"],[145,73,117,70],[145,74,117,71],[146,26,118,40,"error"],[146,31,118,45],[146,33,118,47,"chunk"],[146,38,118,52],[146,39,118,53,"error"],[147,24,119,36],[147,25,119,37],[147,26,119,38],[148,24,120,36],[148,28,120,40,"codes5xx"],[148,36,120,48],[148,37,120,49,"includes"],[148,45,120,57],[148,46,120,58,"chunk"],[148,51,120,63],[148,52,120,64,"error"],[148,57,120,69],[148,58,120,70,"code"],[148,62,120,74],[148,63,120,75],[148,65,120,77],[149,26,121,40],[150,26,122,40,"connectionState"],[150,41,122,55],[150,42,122,56,"next"],[150,46,122,60],[150,47,122,61],[151,28,123,44,"type"],[151,32,123,48],[151,34,123,50],[151,41,123,57],[152,28,124,44,"state"],[152,33,124,49],[152,35,124,51],[152,47,124,63],[153,28,125,44,"error"],[154,26,126,40],[154,27,126,41],[154,28,126,42],[155,26,127,40],[156,24,128,36],[157,24,129,36],[158,24,130,36],[159,24,131,36],[159,30,131,42,"error"],[159,35,131,47],[160,22,132,32],[161,20,133,28],[161,25,133,33],[161,37,133,45],[162,22,134,32],[163,24,135,36],[163,28,135,42,"lastState"],[163,37,135,51],[163,40,135,54,"connectionState"],[163,55,135,69],[163,56,135,70,"get"],[163,59,135,73],[163,60,135,74],[163,61,135,75],[164,24,136,36],[164,28,136,42,"error"],[164,34,136,47],[164,37,136,50,"chunk"],[164,42,136,55],[164,43,136,56,"event"],[164,48,136,61],[164,52,136,65,"TRPCClientError"],[164,84,136,80],[164,85,136,81,"from"],[164,89,136,85],[164,90,136,86,"chunk"],[164,95,136,91],[164,96,136,92,"event"],[164,101,136,97],[164,102,136,98],[165,24,137,36],[165,28,137,40],[165,29,137,41,"error"],[165,35,137,46],[165,39,137,50,"lastState"],[165,48,137,59],[165,49,137,60,"state"],[165,54,137,65],[165,59,137,70],[165,71,137,82],[165,73,137,84],[166,26,138,40],[167,24,139,36],[168,24,140,36,"connectionState"],[168,39,140,51],[168,40,140,52,"next"],[168,44,140,56],[168,45,140,57],[169,26,141,40,"type"],[169,30,141,44],[169,32,141,46],[169,39,141,53],[170,26,142,40,"state"],[170,31,142,45],[170,33,142,47],[170,45,142,59],[171,26,143,40,"error"],[171,31,143,45],[171,33,143,40,"error"],[172,24,144,36],[172,25,144,37],[172,26,144,38],[173,24,145,36],[174,22,146,32],[175,20,147,28],[175,25,147,33],[175,34,147,42],[176,22,148,32],[177,24,149,36,"connectionState"],[177,39,149,51],[177,40,149,52,"next"],[177,44,149,56],[177,45,149,57],[178,26,150,40,"type"],[178,30,150,44],[178,32,150,46],[178,39,150,53],[179,26,151,40,"state"],[179,31,151,45],[179,33,151,47],[179,45,151,59],[180,26,152,40,"error"],[180,31,152,45],[180,33,152,47],[180,37,152,51,"TRPCClientError"],[180,69,152,66],[180,70,152,67],[180,84,152,81,"chunk"],[180,89,152,86],[180,90,152,87,"ms"],[180,92,152,89],[180,133,152,130],[181,24,153,36],[181,25,153,37],[181,26,153,38],[182,22,154,32],[183,18,155,24],[184,16,155,25],[185,14,156,20],[186,12,156,21],[186,21,156,21,"err"],[186,24,156,21],[187,14,156,21,"_didIteratorError"],[187,31,156,21],[188,14,156,21,"_iteratorError"],[188,28,156,21],[188,31,156,21,"err"],[188,34,156,21],[189,12,156,21],[190,14,156,21],[191,16,156,21],[191,20,156,21,"_iteratorAbruptCompletion"],[191,45,156,21],[191,49,156,21,"_iterator"],[191,58,156,21],[191,59,156,21,"return"],[191,65,156,21],[192,18,156,21],[192,24,156,21,"_iterator"],[192,33,156,21],[192,34,156,21,"return"],[192,40,156,21],[193,16,156,21],[194,14,156,21],[195,16,156,21],[195,20,156,21,"_didIteratorError"],[195,37,156,21],[196,18,156,21],[196,24,156,21,"_iteratorError"],[196,38,156,21],[197,16,156,21],[198,14,156,21],[199,12,156,21],[200,12,157,20,"observer"],[200,20,157,28],[200,21,157,29,"next"],[200,25,157,33],[200,26,157,34],[201,14,158,24,"result"],[201,20,158,30],[201,22,158,32],[202,16,159,28,"type"],[202,20,159,32],[202,22,159,34],[203,14,160,24],[204,12,161,20],[204,13,161,21],[204,14,161,22],[205,12,162,20,"connectionState"],[205,27,162,35],[205,28,162,36,"next"],[205,32,162,40],[205,33,162,41],[206,14,163,24,"type"],[206,18,163,28],[206,20,163,30],[206,27,163,37],[207,14,164,24,"state"],[207,19,164,29],[207,21,164,31],[207,27,164,37],[208,14,165,24,"error"],[208,19,165,29],[208,21,165,31],[209,12,166,20],[209,13,166,21],[209,14,166,22],[210,12,167,20,"observer"],[210,20,167,28],[210,21,167,29,"complete"],[210,29,167,37],[210,30,167,38],[210,31,167,39],[211,10,168,16],[211,11,168,17],[211,13,168,18],[211,14,168,19,"catch"],[211,19,168,24],[211,20,168,26,"error"],[211,25,168,31],[211,29,168,34],[212,12,169,20,"observer"],[212,20,169,28],[212,21,169,29,"error"],[212,26,169,34],[212,27,169,35,"TRPCClientError"],[212,59,169,50],[212,60,169,51,"from"],[212,64,169,55],[212,65,169,56,"error"],[212,70,169,61],[212,71,169,62],[212,72,169,63],[213,10,170,16],[213,11,170,17],[213,12,170,18],[214,10,171,16],[214,17,171,23],[214,23,171,27],[215,12,172,20,"observer"],[215,20,172,28],[215,21,172,29,"complete"],[215,29,172,37],[215,30,172,38],[215,31,172,39],[216,12,173,20,"ac"],[216,14,173,22],[216,15,173,23,"abort"],[216,20,173,28],[216,21,173,29],[216,22,173,30],[217,12,174,20,"connectionSub"],[217,25,174,33],[217,26,174,34,"unsubscribe"],[217,37,174,45],[217,38,174,46],[217,39,174,47],[218,10,175,16],[218,11,175,17],[219,8,176,12],[219,9,176,13],[219,10,176,14],[220,6,177,8],[220,7,177,9],[221,4,178,4],[221,5,178,5],[222,2,179,0],[223,0,179,1],[223,3]],"functionMap":{"names":["<global>","urlWithConnectionParams","unstable_httpSubscriptionLink","<anonymous>","observable$argument_0","sseStreamConsumer$argument_0.url","sseStreamConsumer$argument_0.init","connectionState.subscribe$argument_0.next","run$argument_0","run._catch$argument_0"],"mappings":"AAA;ACU;CDQ;IEY;WCE;8BCE;yBCS;0BDO;0BEC;0BFE;oBGW;qBHI;oBIE;iBJiG,QK;iBLE;uBDC;iBCI;aDC;KDE;CFC"}},"type":"js/module"}]}