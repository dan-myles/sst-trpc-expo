{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":361,"column":1}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":361,"column":1}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./processColor","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":21},"end":{"line":16,"column":46}}],"key":"Ai2WyxBOlSTeg5AAQ9iFjvakgZ0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = processBackgroundImage;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var processColor = require(_dependencyMap[2], \"./processColor\").default;\n  var DIRECTION_KEYWORD_REGEX = /^to\\s+(?:top|bottom|left|right)(?:\\s+(?:top|bottom|left|right))?/i;\n  var ANGLE_UNIT_REGEX = /^([+-]?\\d*\\.?\\d+)(deg|grad|rad|turn)$/i;\n  var DEFAULT_DIRECTION = {\n    type: 'angle',\n    value: 180\n  };\n  function processBackgroundImage(backgroundImage) {\n    var result = [];\n    if (backgroundImage == null) {\n      return result;\n    }\n    if (typeof backgroundImage === 'string') {\n      result = parseCSSLinearGradient(backgroundImage.replace(/\\n/g, ' '));\n    } else if (Array.isArray(backgroundImage)) {\n      for (var bgImage of backgroundImage) {\n        var processedColorStops = [];\n        for (var index = 0; index < bgImage.colorStops.length; index++) {\n          var colorStop = bgImage.colorStops[index];\n          var processedColor = processColor(colorStop.color);\n          if (processedColor == null) {\n            return [];\n          }\n          if (colorStop.positions != null && colorStop.positions.length > 0) {\n            for (var position of colorStop.positions) {\n              if (position.endsWith('%')) {\n                processedColorStops.push({\n                  color: processedColor,\n                  position: parseFloat(position) / 100\n                });\n              } else {\n                return [];\n              }\n            }\n          } else {\n            processedColorStops.push({\n              color: processedColor,\n              position: null\n            });\n          }\n        }\n        var direction = DEFAULT_DIRECTION;\n        var bgDirection = bgImage.direction != null ? bgImage.direction.toLowerCase() : null;\n        if (bgDirection != null) {\n          if (ANGLE_UNIT_REGEX.test(bgDirection)) {\n            var parsedAngle = getAngleInDegrees(bgDirection);\n            if (parsedAngle != null) {\n              direction = {\n                type: 'angle',\n                value: parsedAngle\n              };\n            } else {\n              return [];\n            }\n          } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {\n            var parsedDirection = getDirectionForKeyword(bgDirection);\n            if (parsedDirection != null) {\n              direction = parsedDirection;\n            } else {\n              return [];\n            }\n          } else {\n            return [];\n          }\n        }\n        var fixedColorStops = getFixedColorStops(processedColorStops);\n        result = result.concat({\n          type: 'linearGradient',\n          direction,\n          colorStops: fixedColorStops\n        });\n      }\n    }\n    return result;\n  }\n  function parseCSSLinearGradient(cssString) {\n    var gradients = [];\n    var match;\n    var linearGradientRegex = /linear-gradient\\s*\\(((?:\\([^)]*\\)|[^())])*)\\)/gi;\n    while (match = linearGradientRegex.exec(cssString)) {\n      var gradientContent = match[1];\n      var parts = gradientContent.split(',');\n      var direction = DEFAULT_DIRECTION;\n      var trimmedDirection = parts[0].trim().toLowerCase();\n      var colorStopRegex = /\\s*((?:(?:rgba?|hsla?)\\s*\\([^)]+\\))|#[0-9a-fA-F]+|[a-zA-Z]+)(?:\\s+(-?[0-9.]+%?)(?:\\s+(-?[0-9.]+%?))?)?\\s*/gi;\n      if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {\n        var parsedAngle = getAngleInDegrees(trimmedDirection);\n        if (parsedAngle != null) {\n          direction = {\n            type: 'angle',\n            value: parsedAngle\n          };\n          parts.shift();\n        } else {\n          return [];\n        }\n      } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {\n        var parsedDirection = getDirectionForKeyword(trimmedDirection);\n        if (parsedDirection != null) {\n          direction = parsedDirection;\n          parts.shift();\n        } else {\n          return [];\n        }\n      } else if (!colorStopRegex.test(trimmedDirection)) {\n        return [];\n      }\n      colorStopRegex.lastIndex = 0;\n      var colorStops = [];\n      var fullColorStopsStr = parts.join(',');\n      var colorStopMatch = void 0;\n      while (colorStopMatch = colorStopRegex.exec(fullColorStopsStr)) {\n        var _colorStopMatch = colorStopMatch,\n          _colorStopMatch2 = (0, _slicedToArray2.default)(_colorStopMatch, 4),\n          color = _colorStopMatch2[1],\n          position1 = _colorStopMatch2[2],\n          position2 = _colorStopMatch2[3];\n        var processedColor = processColor(color.trim().toLowerCase());\n        if (processedColor == null) {\n          return [];\n        }\n        if (typeof position1 !== 'undefined') {\n          if (position1.endsWith('%')) {\n            colorStops.push({\n              color: processedColor,\n              position: parseFloat(position1) / 100\n            });\n          } else {\n            return [];\n          }\n        } else {\n          colorStops.push({\n            color: processedColor,\n            position: null\n          });\n        }\n        if (typeof position2 !== 'undefined') {\n          if (position2.endsWith('%')) {\n            colorStops.push({\n              color: processedColor,\n              position: parseFloat(position2) / 100\n            });\n          } else {\n            return [];\n          }\n        }\n      }\n      var fixedColorStops = getFixedColorStops(colorStops);\n      gradients.push({\n        type: 'linearGradient',\n        direction,\n        colorStops: fixedColorStops\n      });\n    }\n    return gradients;\n  }\n  function getDirectionForKeyword(direction) {\n    if (direction == null) {\n      return null;\n    }\n    var normalized = direction.replace(/\\s+/g, ' ').toLowerCase();\n    switch (normalized) {\n      case 'to top':\n        return {\n          type: 'angle',\n          value: 0\n        };\n      case 'to right':\n        return {\n          type: 'angle',\n          value: 90\n        };\n      case 'to bottom':\n        return {\n          type: 'angle',\n          value: 180\n        };\n      case 'to left':\n        return {\n          type: 'angle',\n          value: 270\n        };\n      case 'to top right':\n      case 'to right top':\n        return {\n          type: 'keyword',\n          value: 'to top right'\n        };\n      case 'to bottom right':\n      case 'to right bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom right'\n        };\n      case 'to top left':\n      case 'to left top':\n        return {\n          type: 'keyword',\n          value: 'to top left'\n        };\n      case 'to bottom left':\n      case 'to left bottom':\n        return {\n          type: 'keyword',\n          value: 'to bottom left'\n        };\n      default:\n        return null;\n    }\n  }\n  function getAngleInDegrees(angle) {\n    if (angle == null) {\n      return null;\n    }\n    var match = angle.match(ANGLE_UNIT_REGEX);\n    if (!match) {\n      return null;\n    }\n    var _match = (0, _slicedToArray2.default)(match, 3),\n      value = _match[1],\n      unit = _match[2];\n    var numericValue = parseFloat(value);\n    switch (unit) {\n      case 'deg':\n        return numericValue;\n      case 'grad':\n        return numericValue * 0.9;\n      case 'rad':\n        return numericValue * 180 / Math.PI;\n      case 'turn':\n        return numericValue * 360;\n      default:\n        return null;\n    }\n  }\n  function getFixedColorStops(colorStops) {\n    var fixedColorStops = [];\n    var hasNullPositions = false;\n    var maxPositionSoFar = colorStops[0].position ?? 0;\n    for (var i = 0; i < colorStops.length; i++) {\n      var colorStop = colorStops[i];\n      var newPosition = colorStop.position;\n      if (newPosition === null) {\n        if (i === 0) {\n          newPosition = 0;\n        } else if (i === colorStops.length - 1) {\n          newPosition = 1;\n        }\n      }\n      if (newPosition !== null) {\n        newPosition = Math.max(newPosition, maxPositionSoFar);\n        fixedColorStops[i] = {\n          color: colorStop.color,\n          position: newPosition\n        };\n        maxPositionSoFar = newPosition;\n      } else {\n        hasNullPositions = true;\n      }\n    }\n    if (hasNullPositions) {\n      var lastDefinedIndex = 0;\n      for (var _i = 1; _i < fixedColorStops.length; _i++) {\n        if (fixedColorStops[_i] !== undefined) {\n          var unpositionedStops = _i - lastDefinedIndex - 1;\n          if (unpositionedStops > 0) {\n            var startPosition = fixedColorStops[lastDefinedIndex].position;\n            var endPosition = fixedColorStops[_i].position;\n            var increment = (endPosition - startPosition) / (unpositionedStops + 1);\n            for (var j = 1; j <= unpositionedStops; j++) {\n              fixedColorStops[lastDefinedIndex + j] = {\n                color: colorStops[lastDefinedIndex + j].color,\n                position: startPosition + increment * j\n              };\n            }\n          }\n          lastDefinedIndex = _i;\n        }\n      }\n    }\n    return fixedColorStops;\n  }\n});","lineCount":292,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"require"],[4,38,11,13],[4,39,11,13,"_dependencyMap"],[4,53,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"default"],[8,17,11,13],[8,20,11,13,"processBackgroundImage"],[8,42,11,13],[9,2,11,13],[9,6,11,13,"_slicedToArray2"],[9,21,11,13],[9,24,11,13,"_interopRequireDefault"],[9,46,11,13],[9,47,11,13,"require"],[9,54,11,13],[9,55,11,13,"_dependencyMap"],[9,69,11,13],[10,2,16,0],[10,6,16,6,"processColor"],[10,18,16,18],[10,21,16,21,"require"],[10,28,16,28],[10,29,16,28,"_dependencyMap"],[10,43,16,28],[10,64,16,45],[10,65,16,46],[10,66,16,47,"default"],[10,73,16,54],[11,2,17,0],[11,6,17,6,"DIRECTION_KEYWORD_REGEX"],[11,29,17,29],[11,32,18,2],[11,99,18,69],[12,2,19,0],[12,6,19,6,"ANGLE_UNIT_REGEX"],[12,22,19,22],[12,25,19,25],[12,65,19,65],[13,2,34,0],[13,6,34,6,"DEFAULT_DIRECTION"],[13,23,34,48],[13,26,34,51],[14,4,35,2,"type"],[14,8,35,6],[14,10,35,8],[14,17,35,15],[15,4,36,2,"value"],[15,9,36,7],[15,11,36,9],[16,2,37,0],[16,3,37,1],[17,2,39,15],[17,11,39,24,"processBackgroundImage"],[17,33,39,46,"processBackgroundImage"],[17,34,40,2,"backgroundImage"],[17,49,40,60],[17,51,41,39],[18,4,42,2],[18,8,42,6,"result"],[18,14,42,49],[18,17,42,52],[18,19,42,54],[19,4,43,2],[19,8,43,6,"backgroundImage"],[19,23,43,21],[19,27,43,25],[19,31,43,29],[19,33,43,31],[20,6,44,4],[20,13,44,11,"result"],[20,19,44,17],[21,4,45,2],[22,4,47,2],[22,8,47,6],[22,15,47,13,"backgroundImage"],[22,30,47,28],[22,35,47,33],[22,43,47,41],[22,45,47,43],[23,6,48,4,"result"],[23,12,48,10],[23,15,48,13,"parseCSSLinearGradient"],[23,37,48,35],[23,38,48,36,"backgroundImage"],[23,53,48,51],[23,54,48,52,"replace"],[23,61,48,59],[23,62,48,60],[23,67,48,65],[23,69,48,67],[23,72,48,70],[23,73,48,71],[23,74,48,72],[24,4,49,2],[24,5,49,3],[24,11,49,9],[24,15,49,13,"Array"],[24,20,49,18],[24,21,49,19,"isArray"],[24,28,49,26],[24,29,49,27,"backgroundImage"],[24,44,49,42],[24,45,49,43],[24,47,49,45],[25,6,50,4],[25,11,50,9],[25,15,50,15,"bgImage"],[25,22,50,22],[25,26,50,26,"backgroundImage"],[25,41,50,41],[25,43,50,43],[26,8,51,6],[26,12,51,12,"processedColorStops"],[26,31,54,8],[26,34,54,11],[26,36,54,13],[27,8,55,6],[27,13,55,11],[27,17,55,15,"index"],[27,22,55,20],[27,25,55,23],[27,26,55,24],[27,28,55,26,"index"],[27,33,55,31],[27,36,55,34,"bgImage"],[27,43,55,41],[27,44,55,42,"colorStops"],[27,54,55,52],[27,55,55,53,"length"],[27,61,55,59],[27,63,55,61,"index"],[27,68,55,66],[27,70,55,68],[27,72,55,70],[28,10,56,8],[28,14,56,14,"colorStop"],[28,23,56,23],[28,26,56,26,"bgImage"],[28,33,56,33],[28,34,56,34,"colorStops"],[28,44,56,44],[28,45,56,45,"index"],[28,50,56,50],[28,51,56,51],[29,10,57,8],[29,14,57,14,"processedColor"],[29,28,57,28],[29,31,57,31,"processColor"],[29,43,57,43],[29,44,57,44,"colorStop"],[29,53,57,53],[29,54,57,54,"color"],[29,59,57,59],[29,60,57,60],[30,10,58,8],[30,14,58,12,"processedColor"],[30,28,58,26],[30,32,58,30],[30,36,58,34],[30,38,58,36],[31,12,60,10],[31,19,60,17],[31,21,60,19],[32,10,61,8],[33,10,62,8],[33,14,62,12,"colorStop"],[33,23,62,21],[33,24,62,22,"positions"],[33,33,62,31],[33,37,62,35],[33,41,62,39],[33,45,62,43,"colorStop"],[33,54,62,52],[33,55,62,53,"positions"],[33,64,62,62],[33,65,62,63,"length"],[33,71,62,69],[33,74,62,72],[33,75,62,73],[33,77,62,75],[34,12,63,10],[34,17,63,15],[34,21,63,21,"position"],[34,29,63,29],[34,33,63,33,"colorStop"],[34,42,63,42],[34,43,63,43,"positions"],[34,52,63,52],[34,54,63,54],[35,14,64,12],[35,18,64,16,"position"],[35,26,64,24],[35,27,64,25,"endsWith"],[35,35,64,33],[35,36,64,34],[35,39,64,37],[35,40,64,38],[35,42,64,40],[36,16,65,14,"processedColorStops"],[36,35,65,33],[36,36,65,34,"push"],[36,40,65,38],[36,41,65,39],[37,18,66,16,"color"],[37,23,66,21],[37,25,66,23,"processedColor"],[37,39,66,37],[38,18,67,16,"position"],[38,26,67,24],[38,28,67,26,"parseFloat"],[38,38,67,36],[38,39,67,37,"position"],[38,47,67,45],[38,48,67,46],[38,51,67,49],[39,16,68,14],[39,17,68,15],[39,18,68,16],[40,14,69,12],[40,15,69,13],[40,21,69,19],[41,16,71,14],[41,23,71,21],[41,25,71,23],[42,14,72,12],[43,12,73,10],[44,10,74,8],[44,11,74,9],[44,17,74,15],[45,12,75,10,"processedColorStops"],[45,31,75,29],[45,32,75,30,"push"],[45,36,75,34],[45,37,75,35],[46,14,76,12,"color"],[46,19,76,17],[46,21,76,19,"processedColor"],[46,35,76,33],[47,14,77,12,"position"],[47,22,77,20],[47,24,77,22],[48,12,78,10],[48,13,78,11],[48,14,78,12],[49,10,79,8],[50,8,80,6],[51,8,82,6],[51,12,82,10,"direction"],[51,21,82,44],[51,24,82,47,"DEFAULT_DIRECTION"],[51,41,82,64],[52,8,83,6],[52,12,83,12,"bgDirection"],[52,23,83,23],[52,26,84,8,"bgImage"],[52,33,84,15],[52,34,84,16,"direction"],[52,43,84,25],[52,47,84,29],[52,51,84,33],[52,54,84,36,"bgImage"],[52,61,84,43],[52,62,84,44,"direction"],[52,71,84,53],[52,72,84,54,"toLowerCase"],[52,83,84,65],[52,84,84,66],[52,85,84,67],[52,88,84,70],[52,92,84,74],[53,8,86,6],[53,12,86,10,"bgDirection"],[53,23,86,21],[53,27,86,25],[53,31,86,29],[53,33,86,31],[54,10,87,8],[54,14,87,12,"ANGLE_UNIT_REGEX"],[54,30,87,28],[54,31,87,29,"test"],[54,35,87,33],[54,36,87,34,"bgDirection"],[54,47,87,45],[54,48,87,46],[54,50,87,48],[55,12,88,10],[55,16,88,16,"parsedAngle"],[55,27,88,27],[55,30,88,30,"getAngleInDegrees"],[55,47,88,47],[55,48,88,48,"bgDirection"],[55,59,88,59],[55,60,88,60],[56,12,89,10],[56,16,89,14,"parsedAngle"],[56,27,89,25],[56,31,89,29],[56,35,89,33],[56,37,89,35],[57,14,90,12,"direction"],[57,23,90,21],[57,26,90,24],[58,16,91,14,"type"],[58,20,91,18],[58,22,91,20],[58,29,91,27],[59,16,92,14,"value"],[59,21,92,19],[59,23,92,21,"parsedAngle"],[60,14,93,12],[60,15,93,13],[61,12,94,10],[61,13,94,11],[61,19,94,17],[62,14,96,12],[62,21,96,19],[62,23,96,21],[63,12,97,10],[64,10,98,8],[64,11,98,9],[64,17,98,15],[64,21,98,19,"DIRECTION_KEYWORD_REGEX"],[64,44,98,42],[64,45,98,43,"test"],[64,49,98,47],[64,50,98,48,"bgDirection"],[64,61,98,59],[64,62,98,60],[64,64,98,62],[65,12,99,10],[65,16,99,16,"parsedDirection"],[65,31,99,31],[65,34,99,34,"getDirectionForKeyword"],[65,56,99,56],[65,57,99,57,"bgDirection"],[65,68,99,68],[65,69,99,69],[66,12,100,10],[66,16,100,14,"parsedDirection"],[66,31,100,29],[66,35,100,33],[66,39,100,37],[66,41,100,39],[67,14,101,12,"direction"],[67,23,101,21],[67,26,101,24,"parsedDirection"],[67,41,101,39],[68,12,102,10],[68,13,102,11],[68,19,102,17],[69,14,104,12],[69,21,104,19],[69,23,104,21],[70,12,105,10],[71,10,106,8],[71,11,106,9],[71,17,106,15],[72,12,108,10],[72,19,108,17],[72,21,108,19],[73,10,109,8],[74,8,110,6],[75,8,112,6],[75,12,112,12,"fixedColorStops"],[75,27,112,27],[75,30,112,30,"getFixedColorStops"],[75,48,112,48],[75,49,112,49,"processedColorStops"],[75,68,112,68],[75,69,112,69],[76,8,114,6,"result"],[76,14,114,12],[76,17,114,15,"result"],[76,23,114,21],[76,24,114,22,"concat"],[76,30,114,28],[76,31,114,29],[77,10,115,8,"type"],[77,14,115,12],[77,16,115,14],[77,32,115,30],[78,10,116,8,"direction"],[78,19,116,17],[79,10,117,8,"colorStops"],[79,20,117,18],[79,22,117,20,"fixedColorStops"],[80,8,118,6],[80,9,118,7],[80,10,118,8],[81,6,119,4],[82,4,120,2],[83,4,122,2],[83,11,122,9,"result"],[83,17,122,15],[84,2,123,0],[85,2,125,0],[85,11,125,9,"parseCSSLinearGradient"],[85,33,125,31,"parseCSSLinearGradient"],[85,34,126,2,"cssString"],[85,43,126,19],[85,45,127,39],[86,4,128,2],[86,8,128,8,"gradients"],[86,17,128,17],[86,20,128,20],[86,22,128,22],[87,4,129,2],[87,8,129,6,"match"],[87,13,129,11],[88,4,132,2],[88,8,132,8,"linearGradientRegex"],[88,27,132,27],[88,30,132,30],[88,79,132,79],[89,4,134,2],[89,11,134,10,"match"],[89,16,134,15],[89,19,134,18,"linearGradientRegex"],[89,38,134,37],[89,39,134,38,"exec"],[89,43,134,42],[89,44,134,43,"cssString"],[89,53,134,52],[89,54,134,53],[89,56,134,56],[90,6,135,4],[90,10,135,10,"gradientContent"],[90,25,135,25],[90,28,135,28,"match"],[90,33,135,33],[90,34,135,34],[90,35,135,35],[90,36,135,36],[91,6,136,4],[91,10,136,10,"parts"],[91,15,136,15],[91,18,136,18,"gradientContent"],[91,33,136,33],[91,34,136,34,"split"],[91,39,136,39],[91,40,136,40],[91,43,136,43],[91,44,136,44],[92,6,137,4],[92,10,137,8,"direction"],[92,19,137,42],[92,22,137,45,"DEFAULT_DIRECTION"],[92,39,137,62],[93,6,138,4],[93,10,138,10,"trimmedDirection"],[93,26,138,26],[93,29,138,29,"parts"],[93,34,138,34],[93,35,138,35],[93,36,138,36],[93,37,138,37],[93,38,138,38,"trim"],[93,42,138,42],[93,43,138,43],[93,44,138,44],[93,45,138,45,"toLowerCase"],[93,56,138,56],[93,57,138,57],[93,58,138,58],[94,6,144,4],[94,10,144,10,"colorStopRegex"],[94,24,144,24],[94,27,145,6],[94,136,145,115],[95,6,147,4],[95,10,147,8,"ANGLE_UNIT_REGEX"],[95,26,147,24],[95,27,147,25,"test"],[95,31,147,29],[95,32,147,30,"trimmedDirection"],[95,48,147,46],[95,49,147,47],[95,51,147,49],[96,8,148,6],[96,12,148,12,"parsedAngle"],[96,23,148,23],[96,26,148,26,"getAngleInDegrees"],[96,43,148,43],[96,44,148,44,"trimmedDirection"],[96,60,148,60],[96,61,148,61],[97,8,149,6],[97,12,149,10,"parsedAngle"],[97,23,149,21],[97,27,149,25],[97,31,149,29],[97,33,149,31],[98,10,150,8,"direction"],[98,19,150,17],[98,22,150,20],[99,12,151,10,"type"],[99,16,151,14],[99,18,151,16],[99,25,151,23],[100,12,152,10,"value"],[100,17,152,15],[100,19,152,17,"parsedAngle"],[101,10,153,8],[101,11,153,9],[102,10,154,8,"parts"],[102,15,154,13],[102,16,154,14,"shift"],[102,21,154,19],[102,22,154,20],[102,23,154,21],[103,8,155,6],[103,9,155,7],[103,15,155,13],[104,10,157,8],[104,17,157,15],[104,19,157,17],[105,8,158,6],[106,6,159,4],[106,7,159,5],[106,13,159,11],[106,17,159,15,"DIRECTION_KEYWORD_REGEX"],[106,40,159,38],[106,41,159,39,"test"],[106,45,159,43],[106,46,159,44,"trimmedDirection"],[106,62,159,60],[106,63,159,61],[106,65,159,63],[107,8,160,6],[107,12,160,12,"parsedDirection"],[107,27,160,27],[107,30,160,30,"getDirectionForKeyword"],[107,52,160,52],[107,53,160,53,"trimmedDirection"],[107,69,160,69],[107,70,160,70],[108,8,161,6],[108,12,161,10,"parsedDirection"],[108,27,161,25],[108,31,161,29],[108,35,161,33],[108,37,161,35],[109,10,162,8,"direction"],[109,19,162,17],[109,22,162,20,"parsedDirection"],[109,37,162,35],[110,10,163,8,"parts"],[110,15,163,13],[110,16,163,14,"shift"],[110,21,163,19],[110,22,163,20],[110,23,163,21],[111,8,164,6],[111,9,164,7],[111,15,164,13],[112,10,166,8],[112,17,166,15],[112,19,166,17],[113,8,167,6],[114,6,168,4],[114,7,168,5],[114,13,168,11],[114,17,168,15],[114,18,168,16,"colorStopRegex"],[114,32,168,30],[114,33,168,31,"test"],[114,37,168,35],[114,38,168,36,"trimmedDirection"],[114,54,168,52],[114,55,168,53],[114,57,168,55],[115,8,170,6],[115,15,170,13],[115,17,170,15],[116,6,171,4],[117,6,172,4,"colorStopRegex"],[117,20,172,18],[117,21,172,19,"lastIndex"],[117,30,172,28],[117,33,172,31],[117,34,172,32],[118,6,174,4],[118,10,174,10,"colorStops"],[118,20,174,20],[118,23,174,23],[118,25,174,25],[119,6,175,4],[119,10,175,10,"fullColorStopsStr"],[119,27,175,27],[119,30,175,30,"parts"],[119,35,175,35],[119,36,175,36,"join"],[119,40,175,40],[119,41,175,41],[119,44,175,44],[119,45,175,45],[120,6,176,4],[120,10,176,8,"colorStopMatch"],[120,24,176,22],[121,6,177,4],[121,13,177,12,"colorStopMatch"],[121,27,177,26],[121,30,177,29,"colorStopRegex"],[121,44,177,43],[121,45,177,44,"exec"],[121,49,177,48],[121,50,177,49,"fullColorStopsStr"],[121,67,177,66],[121,68,177,67],[121,70,177,70],[122,8,178,6],[122,12,178,6,"_colorStopMatch"],[122,27,178,6],[122,30,178,46,"colorStopMatch"],[122,44,178,60],[123,10,178,60,"_colorStopMatch2"],[123,26,178,60],[123,33,178,60,"_slicedToArray2"],[123,48,178,60],[123,49,178,60,"default"],[123,56,178,60],[123,58,178,60,"_colorStopMatch"],[123,73,178,60],[124,10,178,15,"color"],[124,15,178,20],[124,18,178,20,"_colorStopMatch2"],[124,34,178,20],[125,10,178,22,"position1"],[125,19,178,31],[125,22,178,31,"_colorStopMatch2"],[125,38,178,31],[126,10,178,33,"position2"],[126,19,178,42],[126,22,178,42,"_colorStopMatch2"],[126,38,178,42],[127,8,179,6],[127,12,179,12,"processedColor"],[127,26,179,26],[127,29,179,29,"processColor"],[127,41,179,41],[127,42,179,42,"color"],[127,47,179,47],[127,48,179,48,"trim"],[127,52,179,52],[127,53,179,53],[127,54,179,54],[127,55,179,55,"toLowerCase"],[127,66,179,66],[127,67,179,67],[127,68,179,68],[127,69,179,69],[128,8,180,6],[128,12,180,10,"processedColor"],[128,26,180,24],[128,30,180,28],[128,34,180,32],[128,36,180,34],[129,10,182,8],[129,17,182,15],[129,19,182,17],[130,8,183,6],[131,8,185,6],[131,12,185,10],[131,19,185,17,"position1"],[131,28,185,26],[131,33,185,31],[131,44,185,42],[131,46,185,44],[132,10,186,8],[132,14,186,12,"position1"],[132,23,186,21],[132,24,186,22,"endsWith"],[132,32,186,30],[132,33,186,31],[132,36,186,34],[132,37,186,35],[132,39,186,37],[133,12,187,10,"colorStops"],[133,22,187,20],[133,23,187,21,"push"],[133,27,187,25],[133,28,187,26],[134,14,188,12,"color"],[134,19,188,17],[134,21,188,19,"processedColor"],[134,35,188,33],[135,14,189,12,"position"],[135,22,189,20],[135,24,189,22,"parseFloat"],[135,34,189,32],[135,35,189,33,"position1"],[135,44,189,42],[135,45,189,43],[135,48,189,46],[136,12,190,10],[136,13,190,11],[136,14,190,12],[137,10,191,8],[137,11,191,9],[137,17,191,15],[138,12,193,10],[138,19,193,17],[138,21,193,19],[139,10,194,8],[140,8,195,6],[140,9,195,7],[140,15,195,13],[141,10,196,8,"colorStops"],[141,20,196,18],[141,21,196,19,"push"],[141,25,196,23],[141,26,196,24],[142,12,197,10,"color"],[142,17,197,15],[142,19,197,17,"processedColor"],[142,33,197,31],[143,12,198,10,"position"],[143,20,198,18],[143,22,198,20],[144,10,199,8],[144,11,199,9],[144,12,199,10],[145,8,200,6],[146,8,202,6],[146,12,202,10],[146,19,202,17,"position2"],[146,28,202,26],[146,33,202,31],[146,44,202,42],[146,46,202,44],[147,10,203,8],[147,14,203,12,"position2"],[147,23,203,21],[147,24,203,22,"endsWith"],[147,32,203,30],[147,33,203,31],[147,36,203,34],[147,37,203,35],[147,39,203,37],[148,12,204,10,"colorStops"],[148,22,204,20],[148,23,204,21,"push"],[148,27,204,25],[148,28,204,26],[149,14,205,12,"color"],[149,19,205,17],[149,21,205,19,"processedColor"],[149,35,205,33],[150,14,206,12,"position"],[150,22,206,20],[150,24,206,22,"parseFloat"],[150,34,206,32],[150,35,206,33,"position2"],[150,44,206,42],[150,45,206,43],[150,48,206,46],[151,12,207,10],[151,13,207,11],[151,14,207,12],[152,10,208,8],[152,11,208,9],[152,17,208,15],[153,12,210,10],[153,19,210,17],[153,21,210,19],[154,10,211,8],[155,8,212,6],[156,6,213,4],[157,6,215,4],[157,10,215,10,"fixedColorStops"],[157,25,215,25],[157,28,215,28,"getFixedColorStops"],[157,46,215,46],[157,47,215,47,"colorStops"],[157,57,215,57],[157,58,215,58],[158,6,217,4,"gradients"],[158,15,217,13],[158,16,217,14,"push"],[158,20,217,18],[158,21,217,19],[159,8,218,6,"type"],[159,12,218,10],[159,14,218,12],[159,30,218,28],[160,8,219,6,"direction"],[160,17,219,15],[161,8,220,6,"colorStops"],[161,18,220,16],[161,20,220,18,"fixedColorStops"],[162,6,221,4],[162,7,221,5],[162,8,221,6],[163,4,222,2],[164,4,224,2],[164,11,224,9,"gradients"],[164,20,224,18],[165,2,225,0],[166,2,227,0],[166,11,227,9,"getDirectionForKeyword"],[166,33,227,31,"getDirectionForKeyword"],[166,34,227,32,"direction"],[166,43,227,50],[166,45,227,78],[167,4,228,2],[167,8,228,6,"direction"],[167,17,228,15],[167,21,228,19],[167,25,228,23],[167,27,228,25],[168,6,229,4],[168,13,229,11],[168,17,229,15],[169,4,230,2],[170,4,232,2],[170,8,232,8,"normalized"],[170,18,232,18],[170,21,232,21,"direction"],[170,30,232,30],[170,31,232,31,"replace"],[170,38,232,38],[170,39,232,39],[170,45,232,45],[170,47,232,47],[170,50,232,50],[170,51,232,51],[170,52,232,52,"toLowerCase"],[170,63,232,63],[170,64,232,64],[170,65,232,65],[171,4,234,2],[171,12,234,10,"normalized"],[171,22,234,20],[172,6,235,4],[172,11,235,9],[172,19,235,17],[173,8,236,6],[173,15,236,13],[174,10,236,14,"type"],[174,14,236,18],[174,16,236,20],[174,23,236,27],[175,10,236,29,"value"],[175,15,236,34],[175,17,236,36],[176,8,236,37],[176,9,236,38],[177,6,237,4],[177,11,237,9],[177,21,237,19],[178,8,238,6],[178,15,238,13],[179,10,238,14,"type"],[179,14,238,18],[179,16,238,20],[179,23,238,27],[180,10,238,29,"value"],[180,15,238,34],[180,17,238,36],[181,8,238,38],[181,9,238,39],[182,6,239,4],[182,11,239,9],[182,22,239,20],[183,8,240,6],[183,15,240,13],[184,10,240,14,"type"],[184,14,240,18],[184,16,240,20],[184,23,240,27],[185,10,240,29,"value"],[185,15,240,34],[185,17,240,36],[186,8,240,39],[186,9,240,40],[187,6,241,4],[187,11,241,9],[187,20,241,18],[188,8,242,6],[188,15,242,13],[189,10,242,14,"type"],[189,14,242,18],[189,16,242,20],[189,23,242,27],[190,10,242,29,"value"],[190,15,242,34],[190,17,242,36],[191,8,242,39],[191,9,242,40],[192,6,243,4],[192,11,243,9],[192,25,243,23],[193,6,244,4],[193,11,244,9],[193,25,244,23],[194,8,245,6],[194,15,245,13],[195,10,245,14,"type"],[195,14,245,18],[195,16,245,20],[195,25,245,29],[196,10,245,31,"value"],[196,15,245,36],[196,17,245,38],[197,8,245,52],[197,9,245,53],[198,6,246,4],[198,11,246,9],[198,28,246,26],[199,6,247,4],[199,11,247,9],[199,28,247,26],[200,8,248,6],[200,15,248,13],[201,10,248,14,"type"],[201,14,248,18],[201,16,248,20],[201,25,248,29],[202,10,248,31,"value"],[202,15,248,36],[202,17,248,38],[203,8,248,55],[203,9,248,56],[204,6,249,4],[204,11,249,9],[204,24,249,22],[205,6,250,4],[205,11,250,9],[205,24,250,22],[206,8,251,6],[206,15,251,13],[207,10,251,14,"type"],[207,14,251,18],[207,16,251,20],[207,25,251,29],[208,10,251,31,"value"],[208,15,251,36],[208,17,251,38],[209,8,251,51],[209,9,251,52],[210,6,252,4],[210,11,252,9],[210,27,252,25],[211,6,253,4],[211,11,253,9],[211,27,253,25],[212,8,254,6],[212,15,254,13],[213,10,254,14,"type"],[213,14,254,18],[213,16,254,20],[213,25,254,29],[214,10,254,31,"value"],[214,15,254,36],[214,17,254,38],[215,8,254,54],[215,9,254,55],[216,6,255,4],[217,8,256,6],[217,15,256,13],[217,19,256,17],[218,4,257,2],[219,2,258,0],[220,2,260,0],[220,11,260,9,"getAngleInDegrees"],[220,28,260,26,"getAngleInDegrees"],[220,29,260,27,"angle"],[220,34,260,41],[220,36,260,52],[221,4,261,2],[221,8,261,6,"angle"],[221,13,261,11],[221,17,261,15],[221,21,261,19],[221,23,261,21],[222,6,262,4],[222,13,262,11],[222,17,262,15],[223,4,263,2],[224,4,264,2],[224,8,264,8,"match"],[224,13,264,13],[224,16,264,16,"angle"],[224,21,264,21],[224,22,264,22,"match"],[224,27,264,27],[224,28,264,28,"ANGLE_UNIT_REGEX"],[224,44,264,44],[224,45,264,45],[225,4,265,2],[225,8,265,6],[225,9,265,7,"match"],[225,14,265,12],[225,16,265,14],[226,6,266,4],[226,13,266,11],[226,17,266,15],[227,4,267,2],[228,4,269,2],[228,8,269,2,"_match"],[228,14,269,2],[228,21,269,2,"_slicedToArray2"],[228,36,269,2],[228,37,269,2,"default"],[228,44,269,2],[228,46,269,26,"match"],[228,51,269,31],[229,6,269,11,"value"],[229,11,269,16],[229,14,269,16,"_match"],[229,20,269,16],[230,6,269,18,"unit"],[230,10,269,22],[230,13,269,22,"_match"],[230,19,269,22],[231,4,271,2],[231,8,271,8,"numericValue"],[231,20,271,20],[231,23,271,23,"parseFloat"],[231,33,271,33],[231,34,271,34,"value"],[231,39,271,39],[231,40,271,40],[232,4,272,2],[232,12,272,10,"unit"],[232,16,272,14],[233,6,273,4],[233,11,273,9],[233,16,273,14],[234,8,274,6],[234,15,274,13,"numericValue"],[234,27,274,25],[235,6,275,4],[235,11,275,9],[235,17,275,15],[236,8,276,6],[236,15,276,13,"numericValue"],[236,27,276,25],[236,30,276,28],[236,33,276,31],[237,6,277,4],[237,11,277,9],[237,16,277,14],[238,8,278,6],[238,15,278,14,"numericValue"],[238,27,278,26],[238,30,278,29],[238,33,278,32],[238,36,278,36,"Math"],[238,40,278,40],[238,41,278,41,"PI"],[238,43,278,43],[239,6,279,4],[239,11,279,9],[239,17,279,15],[240,8,280,6],[240,15,280,13,"numericValue"],[240,27,280,25],[240,30,280,28],[240,33,280,31],[241,6,281,4],[242,8,282,6],[242,15,282,13],[242,19,282,17],[243,4,283,2],[244,2,284,0],[245,2,287,0],[245,11,287,9,"getFixedColorStops"],[245,29,287,27,"getFixedColorStops"],[245,30,288,2,"colorStops"],[245,40,291,4],[245,42,295,3],[246,4,296,2],[246,8,296,6,"fixedColorStops"],[246,23,299,4],[246,26,299,7],[246,28,299,9],[247,4,300,2],[247,8,300,6,"hasNullPositions"],[247,24,300,22],[247,27,300,25],[247,32,300,30],[248,4,301,2],[248,8,301,6,"maxPositionSoFar"],[248,24,301,22],[248,27,301,25,"colorStops"],[248,37,301,35],[248,38,301,36],[248,39,301,37],[248,40,301,38],[248,41,301,39,"position"],[248,49,301,47],[248,53,301,51],[248,54,301,52],[249,4,302,2],[249,9,302,7],[249,13,302,11,"i"],[249,14,302,12],[249,17,302,15],[249,18,302,16],[249,20,302,18,"i"],[249,21,302,19],[249,24,302,22,"colorStops"],[249,34,302,32],[249,35,302,33,"length"],[249,41,302,39],[249,43,302,41,"i"],[249,44,302,42],[249,46,302,44],[249,48,302,46],[250,6,303,4],[250,10,303,10,"colorStop"],[250,19,303,19],[250,22,303,22,"colorStops"],[250,32,303,32],[250,33,303,33,"i"],[250,34,303,34],[250,35,303,35],[251,6,304,4],[251,10,304,8,"newPosition"],[251,21,304,19],[251,24,304,22,"colorStop"],[251,33,304,31],[251,34,304,32,"position"],[251,42,304,40],[252,6,305,4],[252,10,305,8,"newPosition"],[252,21,305,19],[252,26,305,24],[252,30,305,28],[252,32,305,30],[253,8,310,6],[253,12,310,10,"i"],[253,13,310,11],[253,18,310,16],[253,19,310,17],[253,21,310,19],[254,10,311,8,"newPosition"],[254,21,311,19],[254,24,311,22],[254,25,311,23],[255,8,312,6],[255,9,312,7],[255,15,312,13],[255,19,312,17,"i"],[255,20,312,18],[255,25,312,23,"colorStops"],[255,35,312,33],[255,36,312,34,"length"],[255,42,312,40],[255,45,312,43],[255,46,312,44],[255,48,312,46],[256,10,313,8,"newPosition"],[256,21,313,19],[256,24,313,22],[256,25,313,23],[257,8,314,6],[258,6,315,4],[259,6,321,4],[259,10,321,8,"newPosition"],[259,21,321,19],[259,26,321,24],[259,30,321,28],[259,32,321,30],[260,8,322,6,"newPosition"],[260,19,322,17],[260,22,322,20,"Math"],[260,26,322,24],[260,27,322,25,"max"],[260,30,322,28],[260,31,322,29,"newPosition"],[260,42,322,40],[260,44,322,42,"maxPositionSoFar"],[260,60,322,58],[260,61,322,59],[261,8,323,6,"fixedColorStops"],[261,23,323,21],[261,24,323,22,"i"],[261,25,323,23],[261,26,323,24],[261,29,323,27],[262,10,324,8,"color"],[262,15,324,13],[262,17,324,15,"colorStop"],[262,26,324,24],[262,27,324,25,"color"],[262,32,324,30],[263,10,325,8,"position"],[263,18,325,16],[263,20,325,18,"newPosition"],[264,8,326,6],[264,9,326,7],[265,8,327,6,"maxPositionSoFar"],[265,24,327,22],[265,27,327,25,"newPosition"],[265,38,327,36],[266,6,328,4],[266,7,328,5],[266,13,328,11],[267,8,329,6,"hasNullPositions"],[267,24,329,22],[267,27,329,25],[267,31,329,29],[268,6,330,4],[269,4,331,2],[270,4,338,2],[270,8,338,6,"hasNullPositions"],[270,24,338,22],[270,26,338,24],[271,6,339,4],[271,10,339,8,"lastDefinedIndex"],[271,26,339,24],[271,29,339,27],[271,30,339,28],[272,6,340,4],[272,11,340,9],[272,15,340,13,"i"],[272,17,340,14],[272,20,340,17],[272,21,340,18],[272,23,340,20,"i"],[272,25,340,21],[272,28,340,24,"fixedColorStops"],[272,43,340,39],[272,44,340,40,"length"],[272,50,340,46],[272,52,340,48,"i"],[272,54,340,49],[272,56,340,51],[272,58,340,53],[273,8,341,6],[273,12,341,10,"fixedColorStops"],[273,27,341,25],[273,28,341,26,"i"],[273,30,341,27],[273,31,341,28],[273,36,341,33,"undefined"],[273,45,341,42],[273,47,341,44],[274,10,342,8],[274,14,342,14,"unpositionedStops"],[274,31,342,31],[274,34,342,34,"i"],[274,36,342,35],[274,39,342,38,"lastDefinedIndex"],[274,55,342,54],[274,58,342,57],[274,59,342,58],[275,10,343,8],[275,14,343,12,"unpositionedStops"],[275,31,343,29],[275,34,343,32],[275,35,343,33],[275,37,343,35],[276,12,344,10],[276,16,344,16,"startPosition"],[276,29,344,29],[276,32,344,32,"fixedColorStops"],[276,47,344,47],[276,48,344,48,"lastDefinedIndex"],[276,64,344,64],[276,65,344,65],[276,66,344,66,"position"],[276,74,344,74],[277,12,345,10],[277,16,345,16,"endPosition"],[277,27,345,27],[277,30,345,30,"fixedColorStops"],[277,45,345,45],[277,46,345,46,"i"],[277,48,345,47],[277,49,345,48],[277,50,345,49,"position"],[277,58,345,57],[278,12,346,10],[278,16,346,16,"increment"],[278,25,346,25],[278,28,347,12],[278,29,347,13,"endPosition"],[278,40,347,24],[278,43,347,27,"startPosition"],[278,56,347,40],[278,61,347,45,"unpositionedStops"],[278,78,347,62],[278,81,347,65],[278,82,347,66],[278,83,347,67],[279,12,348,10],[279,17,348,15],[279,21,348,19,"j"],[279,22,348,20],[279,25,348,23],[279,26,348,24],[279,28,348,26,"j"],[279,29,348,27],[279,33,348,31,"unpositionedStops"],[279,50,348,48],[279,52,348,50,"j"],[279,53,348,51],[279,55,348,53],[279,57,348,55],[280,14,349,12,"fixedColorStops"],[280,29,349,27],[280,30,349,28,"lastDefinedIndex"],[280,46,349,44],[280,49,349,47,"j"],[280,50,349,48],[280,51,349,49],[280,54,349,52],[281,16,350,14,"color"],[281,21,350,19],[281,23,350,21,"colorStops"],[281,33,350,31],[281,34,350,32,"lastDefinedIndex"],[281,50,350,48],[281,53,350,51,"j"],[281,54,350,52],[281,55,350,53],[281,56,350,54,"color"],[281,61,350,59],[282,16,351,14,"position"],[282,24,351,22],[282,26,351,24,"startPosition"],[282,39,351,37],[282,42,351,40,"increment"],[282,51,351,49],[282,54,351,52,"j"],[283,14,352,12],[283,15,352,13],[284,12,353,10],[285,10,354,8],[286,10,355,8,"lastDefinedIndex"],[286,26,355,24],[286,29,355,27,"i"],[286,31,355,28],[287,8,356,6],[288,6,357,4],[289,4,358,2],[290,4,360,2],[290,11,360,9,"fixedColorStops"],[290,26,360,24],[291,2,361,0],[292,0,361,1],[292,3]],"functionMap":{"names":["<global>","processBackgroundImage","parseCSSLinearGradient","getDirectionForKeyword","getAngleInDegrees","getFixedColorStops"],"mappings":"AAA;eCsC;CDoF;AEE;CFoG;AGE;CH+B;AIE;CJwB;AKG"}},"type":"js/module"}]}