{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":3992}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":3992}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./observable.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"H3RWiSY7YI5ZygEBPFxnMuNKuqY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.distinctUntilChanged = distinctUntilChanged;\n  exports.distinctUntilDeepChanged = distinctUntilDeepChanged;\n  exports.map = map;\n  exports.share = share;\n  exports.tap = tap;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _observable = require(_dependencyMap[2], \"./observable.mjs\");\n  function map(project) {\n    return source => {\n      return (0, _observable.observable)(destination => {\n        var index = 0;\n        var subscription = source.subscribe({\n          next(value) {\n            destination.next(project(value, index++));\n          },\n          error(error) {\n            destination.error(error);\n          },\n          complete() {\n            destination.complete();\n          }\n        });\n        return subscription;\n      });\n    };\n  }\n  function share(_opts) {\n    return source => {\n      var refCount = 0;\n      var subscription = null;\n      var observers = [];\n      function startIfNeeded() {\n        if (subscription) {\n          return;\n        }\n        subscription = source.subscribe({\n          next(value) {\n            for (var observer of observers) {\n              observer.next?.(value);\n            }\n          },\n          error(error) {\n            for (var observer of observers) {\n              observer.error?.(error);\n            }\n          },\n          complete() {\n            for (var observer of observers) {\n              observer.complete?.();\n            }\n          }\n        });\n      }\n      function resetIfNeeded() {\n        // \"resetOnRefCountZero\"\n        if (refCount === 0 && subscription) {\n          var _sub = subscription;\n          subscription = null;\n          _sub.unsubscribe();\n        }\n      }\n      return (0, _observable.observable)(subscriber => {\n        refCount++;\n        observers.push(subscriber);\n        startIfNeeded();\n        return {\n          unsubscribe() {\n            refCount--;\n            resetIfNeeded();\n            var index = observers.findIndex(v => v === subscriber);\n            if (index > -1) {\n              observers.splice(index, 1);\n            }\n          }\n        };\n      });\n    };\n  }\n  function tap(observer) {\n    return source => {\n      return (0, _observable.observable)(destination => {\n        return source.subscribe({\n          next(value) {\n            observer.next?.(value);\n            destination.next(value);\n          },\n          error(error) {\n            observer.error?.(error);\n            destination.error(error);\n          },\n          complete() {\n            observer.complete?.();\n            destination.complete();\n          }\n        });\n      });\n    };\n  }\n  var distinctUnsetMarker = Symbol();\n  function distinctUntilChanged() {\n    var compare = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (a, b) => a === b;\n    return source => {\n      return (0, _observable.observable)(destination => {\n        var lastValue = distinctUnsetMarker;\n        return source.subscribe({\n          next(value) {\n            if (lastValue !== distinctUnsetMarker && compare(lastValue, value)) {\n              return;\n            }\n            lastValue = value;\n            destination.next(value);\n          },\n          error(error) {\n            destination.error(error);\n          },\n          complete() {\n            destination.complete();\n          }\n        });\n      });\n    };\n  }\n  var isDeepEqual = (a, b) => {\n    if (a === b) {\n      return true;\n    }\n    var bothAreObjects = a && b && typeof a === 'object' && typeof b === 'object';\n    return !!bothAreObjects && Object.keys(a).length === Object.keys(b).length && Object.entries(a).every(_ref => {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n      return isDeepEqual(v, b[k]);\n    });\n  };\n  function distinctUntilDeepChanged() {\n    return distinctUntilChanged(isDeepEqual);\n  }\n});","lineCount":143,"map":[[12,2,1,0],[12,6,1,0,"_observable"],[12,17,1,0],[12,20,1,0,"require"],[12,27,1,0],[12,28,1,0,"_dependencyMap"],[12,42,1,0],[13,2,3,0],[13,11,3,9,"map"],[13,14,3,12,"map"],[13,15,3,13,"project"],[13,22,3,20],[13,24,3,22],[14,4,4,4],[14,11,4,12,"source"],[14,17,4,18],[14,21,4,21],[15,6,5,8],[15,13,5,15],[15,17,5,15,"observable"],[15,39,5,25],[15,41,5,27,"destination"],[15,52,5,38],[15,56,5,41],[16,8,6,12],[16,12,6,16,"index"],[16,17,6,21],[16,20,6,24],[16,21,6,25],[17,8,7,12],[17,12,7,18,"subscription"],[17,24,7,30],[17,27,7,33,"source"],[17,33,7,39],[17,34,7,40,"subscribe"],[17,43,7,49],[17,44,7,50],[18,10,8,16,"next"],[18,14,8,20,"next"],[18,15,8,22,"value"],[18,20,8,27],[18,22,8,29],[19,12,9,20,"destination"],[19,23,9,31],[19,24,9,32,"next"],[19,28,9,36],[19,29,9,37,"project"],[19,36,9,44],[19,37,9,45,"value"],[19,42,9,50],[19,44,9,52,"index"],[19,49,9,57],[19,51,9,59],[19,52,9,60],[19,53,9,61],[20,10,10,16],[20,11,10,17],[21,10,11,16,"error"],[21,15,11,21,"error"],[21,16,11,23,"error"],[21,21,11,28],[21,23,11,30],[22,12,12,20,"destination"],[22,23,12,31],[22,24,12,32,"error"],[22,29,12,37],[22,30,12,38,"error"],[22,35,12,43],[22,36,12,44],[23,10,13,16],[23,11,13,17],[24,10,14,16,"complete"],[24,18,14,24,"complete"],[24,19,14,24],[24,21,14,28],[25,12,15,20,"destination"],[25,23,15,31],[25,24,15,32,"complete"],[25,32,15,40],[25,33,15,41],[25,34,15,42],[26,10,16,16],[27,8,17,12],[27,9,17,13],[27,10,17,14],[28,8,18,12],[28,15,18,19,"subscription"],[28,27,18,31],[29,6,19,8],[29,7,19,9],[29,8,19,10],[30,4,20,4],[30,5,20,5],[31,2,21,0],[32,2,22,0],[32,11,22,9,"share"],[32,16,22,14,"share"],[32,17,22,15,"_opts"],[32,22,22,20],[32,24,22,22],[33,4,23,4],[33,11,23,12,"source"],[33,17,23,18],[33,21,23,21],[34,6,24,8],[34,10,24,12,"refCount"],[34,18,24,20],[34,21,24,23],[34,22,24,24],[35,6,25,8],[35,10,25,12,"subscription"],[35,22,25,24],[35,25,25,27],[35,29,25,31],[36,6,26,8],[36,10,26,14,"observers"],[36,19,26,23],[36,22,26,26],[36,24,26,28],[37,6,27,8],[37,15,27,17,"startIfNeeded"],[37,28,27,30,"startIfNeeded"],[37,29,27,30],[37,31,27,33],[38,8,28,12],[38,12,28,16,"subscription"],[38,24,28,28],[38,26,28,30],[39,10,29,16],[40,8,30,12],[41,8,31,12,"subscription"],[41,20,31,24],[41,23,31,27,"source"],[41,29,31,33],[41,30,31,34,"subscribe"],[41,39,31,43],[41,40,31,44],[42,10,32,16,"next"],[42,14,32,20,"next"],[42,15,32,22,"value"],[42,20,32,27],[42,22,32,29],[43,12,33,20],[43,17,33,25],[43,21,33,31,"observer"],[43,29,33,39],[43,33,33,43,"observers"],[43,42,33,52],[43,44,33,53],[44,14,34,24,"observer"],[44,22,34,32],[44,23,34,33,"next"],[44,27,34,37],[44,30,34,40,"value"],[44,35,34,45],[44,36,34,46],[45,12,35,20],[46,10,36,16],[46,11,36,17],[47,10,37,16,"error"],[47,15,37,21,"error"],[47,16,37,23,"error"],[47,21,37,28],[47,23,37,30],[48,12,38,20],[48,17,38,25],[48,21,38,31,"observer"],[48,29,38,39],[48,33,38,43,"observers"],[48,42,38,52],[48,44,38,53],[49,14,39,24,"observer"],[49,22,39,32],[49,23,39,33,"error"],[49,28,39,38],[49,31,39,41,"error"],[49,36,39,46],[49,37,39,47],[50,12,40,20],[51,10,41,16],[51,11,41,17],[52,10,42,16,"complete"],[52,18,42,24,"complete"],[52,19,42,24],[52,21,42,28],[53,12,43,20],[53,17,43,25],[53,21,43,31,"observer"],[53,29,43,39],[53,33,43,43,"observers"],[53,42,43,52],[53,44,43,53],[54,14,44,24,"observer"],[54,22,44,32],[54,23,44,33,"complete"],[54,31,44,41],[54,34,44,44],[54,35,44,45],[55,12,45,20],[56,10,46,16],[57,8,47,12],[57,9,47,13],[57,10,47,14],[58,6,48,8],[59,6,49,8],[59,15,49,17,"resetIfNeeded"],[59,28,49,30,"resetIfNeeded"],[59,29,49,30],[59,31,49,33],[60,8,50,12],[61,8,51,12],[61,12,51,16,"refCount"],[61,20,51,24],[61,25,51,29],[61,26,51,30],[61,30,51,34,"subscription"],[61,42,51,46],[61,44,51,48],[62,10,52,16],[62,14,52,22,"_sub"],[62,18,52,26],[62,21,52,29,"subscription"],[62,33,52,41],[63,10,53,16,"subscription"],[63,22,53,28],[63,25,53,31],[63,29,53,35],[64,10,54,16,"_sub"],[64,14,54,20],[64,15,54,21,"unsubscribe"],[64,26,54,32],[64,27,54,33],[64,28,54,34],[65,8,55,12],[66,6,56,8],[67,6,57,8],[67,13,57,15],[67,17,57,15,"observable"],[67,39,57,25],[67,41,57,27,"subscriber"],[67,51,57,37],[67,55,57,40],[68,8,58,12,"refCount"],[68,16,58,20],[68,18,58,22],[69,8,59,12,"observers"],[69,17,59,21],[69,18,59,22,"push"],[69,22,59,26],[69,23,59,27,"subscriber"],[69,33,59,37],[69,34,59,38],[70,8,60,12,"startIfNeeded"],[70,21,60,25],[70,22,60,26],[70,23,60,27],[71,8,61,12],[71,15,61,19],[72,10,62,16,"unsubscribe"],[72,21,62,27,"unsubscribe"],[72,22,62,27],[72,24,62,31],[73,12,63,20,"refCount"],[73,20,63,28],[73,22,63,30],[74,12,64,20,"resetIfNeeded"],[74,25,64,33],[74,26,64,34],[74,27,64,35],[75,12,65,20],[75,16,65,26,"index"],[75,21,65,31],[75,24,65,34,"observers"],[75,33,65,43],[75,34,65,44,"findIndex"],[75,43,65,53],[75,44,65,55,"v"],[75,45,65,56],[75,49,65,59,"v"],[75,50,65,60],[75,55,65,65,"subscriber"],[75,65,65,75],[75,66,65,76],[76,12,66,20],[76,16,66,24,"index"],[76,21,66,29],[76,24,66,32],[76,25,66,33],[76,26,66,34],[76,28,66,36],[77,14,67,24,"observers"],[77,23,67,33],[77,24,67,34,"splice"],[77,30,67,40],[77,31,67,41,"index"],[77,36,67,46],[77,38,67,48],[77,39,67,49],[77,40,67,50],[78,12,68,20],[79,10,69,16],[80,8,70,12],[80,9,70,13],[81,6,71,8],[81,7,71,9],[81,8,71,10],[82,4,72,4],[82,5,72,5],[83,2,73,0],[84,2,74,0],[84,11,74,9,"tap"],[84,14,74,12,"tap"],[84,15,74,13,"observer"],[84,23,74,21],[84,25,74,23],[85,4,75,4],[85,11,75,12,"source"],[85,17,75,18],[85,21,75,21],[86,6,76,8],[86,13,76,15],[86,17,76,15,"observable"],[86,39,76,25],[86,41,76,27,"destination"],[86,52,76,38],[86,56,76,41],[87,8,77,12],[87,15,77,19,"source"],[87,21,77,25],[87,22,77,26,"subscribe"],[87,31,77,35],[87,32,77,36],[88,10,78,16,"next"],[88,14,78,20,"next"],[88,15,78,22,"value"],[88,20,78,27],[88,22,78,29],[89,12,79,20,"observer"],[89,20,79,28],[89,21,79,29,"next"],[89,25,79,33],[89,28,79,36,"value"],[89,33,79,41],[89,34,79,42],[90,12,80,20,"destination"],[90,23,80,31],[90,24,80,32,"next"],[90,28,80,36],[90,29,80,37,"value"],[90,34,80,42],[90,35,80,43],[91,10,81,16],[91,11,81,17],[92,10,82,16,"error"],[92,15,82,21,"error"],[92,16,82,23,"error"],[92,21,82,28],[92,23,82,30],[93,12,83,20,"observer"],[93,20,83,28],[93,21,83,29,"error"],[93,26,83,34],[93,29,83,37,"error"],[93,34,83,42],[93,35,83,43],[94,12,84,20,"destination"],[94,23,84,31],[94,24,84,32,"error"],[94,29,84,37],[94,30,84,38,"error"],[94,35,84,43],[94,36,84,44],[95,10,85,16],[95,11,85,17],[96,10,86,16,"complete"],[96,18,86,24,"complete"],[96,19,86,24],[96,21,86,28],[97,12,87,20,"observer"],[97,20,87,28],[97,21,87,29,"complete"],[97,29,87,37],[97,32,87,40],[97,33,87,41],[98,12,88,20,"destination"],[98,23,88,31],[98,24,88,32,"complete"],[98,32,88,40],[98,33,88,41],[98,34,88,42],[99,10,89,16],[100,8,90,12],[100,9,90,13],[100,10,90,14],[101,6,91,8],[101,7,91,9],[101,8,91,10],[102,4,92,4],[102,5,92,5],[103,2,93,0],[104,2,94,0],[104,6,94,6,"distinctUnsetMarker"],[104,25,94,25],[104,28,94,28,"Symbol"],[104,34,94,34],[104,35,94,35],[104,36,94,36],[105,2,95,0],[105,11,95,9,"distinctUntilChanged"],[105,31,95,29,"distinctUntilChanged"],[105,32,95,29],[105,34,95,57],[106,4,95,57],[106,8,95,30,"compare"],[106,15,95,37],[106,18,95,37,"arguments"],[106,27,95,37],[106,28,95,37,"length"],[106,34,95,37],[106,42,95,37,"arguments"],[106,51,95,37],[106,59,95,37,"undefined"],[106,68,95,37],[106,71,95,37,"arguments"],[106,80,95,37],[106,86,95,40],[106,87,95,41,"a"],[106,88,95,42],[106,90,95,44,"b"],[106,91,95,45],[106,96,95,48,"a"],[106,97,95,49],[106,102,95,54,"b"],[106,103,95,55],[107,4,96,4],[107,11,96,12,"source"],[107,17,96,18],[107,21,96,21],[108,6,97,8],[108,13,97,15],[108,17,97,15,"observable"],[108,39,97,25],[108,41,97,27,"destination"],[108,52,97,38],[108,56,97,41],[109,8,98,12],[109,12,98,16,"lastValue"],[109,21,98,25],[109,24,98,28,"distinctUnsetMarker"],[109,43,98,47],[110,8,99,12],[110,15,99,19,"source"],[110,21,99,25],[110,22,99,26,"subscribe"],[110,31,99,35],[110,32,99,36],[111,10,100,16,"next"],[111,14,100,20,"next"],[111,15,100,22,"value"],[111,20,100,27],[111,22,100,29],[112,12,101,20],[112,16,101,24,"lastValue"],[112,25,101,33],[112,30,101,38,"distinctUnsetMarker"],[112,49,101,57],[112,53,101,61,"compare"],[112,60,101,68],[112,61,101,69,"lastValue"],[112,70,101,78],[112,72,101,80,"value"],[112,77,101,85],[112,78,101,86],[112,80,101,88],[113,14,102,24],[114,12,103,20],[115,12,104,20,"lastValue"],[115,21,104,29],[115,24,104,32,"value"],[115,29,104,37],[116,12,105,20,"destination"],[116,23,105,31],[116,24,105,32,"next"],[116,28,105,36],[116,29,105,37,"value"],[116,34,105,42],[116,35,105,43],[117,10,106,16],[117,11,106,17],[118,10,107,16,"error"],[118,15,107,21,"error"],[118,16,107,23,"error"],[118,21,107,28],[118,23,107,30],[119,12,108,20,"destination"],[119,23,108,31],[119,24,108,32,"error"],[119,29,108,37],[119,30,108,38,"error"],[119,35,108,43],[119,36,108,44],[120,10,109,16],[120,11,109,17],[121,10,110,16,"complete"],[121,18,110,24,"complete"],[121,19,110,24],[121,21,110,28],[122,12,111,20,"destination"],[122,23,111,31],[122,24,111,32,"complete"],[122,32,111,40],[122,33,111,41],[122,34,111,42],[123,10,112,16],[124,8,113,12],[124,9,113,13],[124,10,113,14],[125,6,114,8],[125,7,114,9],[125,8,114,10],[126,4,115,4],[126,5,115,5],[127,2,116,0],[128,2,117,0],[128,6,117,6,"isDeepEqual"],[128,17,117,17],[128,20,117,20,"isDeepEqual"],[128,21,117,21,"a"],[128,22,117,22],[128,24,117,24,"b"],[128,25,117,25],[128,30,117,28],[129,4,118,4],[129,8,118,8,"a"],[129,9,118,9],[129,14,118,14,"b"],[129,15,118,15],[129,17,118,17],[130,6,119,8],[130,13,119,15],[130,17,119,19],[131,4,120,4],[132,4,121,4],[132,8,121,10,"bothAreObjects"],[132,22,121,24],[132,25,121,27,"a"],[132,26,121,28],[132,30,121,32,"b"],[132,31,121,33],[132,35,121,37],[132,42,121,44,"a"],[132,43,121,45],[132,48,121,50],[132,56,121,58],[132,60,121,62],[132,67,121,69,"b"],[132,68,121,70],[132,73,121,75],[132,81,121,83],[133,4,122,4],[133,11,122,11],[133,12,122,12],[133,13,122,13,"bothAreObjects"],[133,27,122,27],[133,31,122,31,"Object"],[133,37,122,37],[133,38,122,38,"keys"],[133,42,122,42],[133,43,122,43,"a"],[133,44,122,44],[133,45,122,45],[133,46,122,46,"length"],[133,52,122,52],[133,57,122,57,"Object"],[133,63,122,63],[133,64,122,64,"keys"],[133,68,122,68],[133,69,122,69,"b"],[133,70,122,70],[133,71,122,71],[133,72,122,72,"length"],[133,78,122,78],[133,82,122,82,"Object"],[133,88,122,88],[133,89,122,89,"entries"],[133,96,122,96],[133,97,122,97,"a"],[133,98,122,98],[133,99,122,99],[133,100,122,100,"every"],[133,105,122,105],[133,106,122,106,"_ref"],[133,110,122,106],[134,6,122,106],[134,10,122,106,"_ref2"],[134,15,122,106],[134,22,122,106,"_slicedToArray2"],[134,37,122,106],[134,38,122,106,"default"],[134,45,122,106],[134,47,122,106,"_ref"],[134,51,122,106],[135,8,122,108,"k"],[135,9,122,109],[135,12,122,109,"_ref2"],[135,17,122,109],[136,8,122,111,"v"],[136,9,122,112],[136,12,122,112,"_ref2"],[136,17,122,112],[137,6,122,112],[137,13,122,116,"isDeepEqual"],[137,24,122,127],[137,25,122,128,"v"],[137,26,122,129],[137,28,122,131,"b"],[137,29,122,132],[137,30,122,133,"k"],[137,31,122,134],[137,32,122,135],[137,33,122,136],[138,4,122,136],[138,6,122,137],[139,2,123,0],[139,3,123,1],[140,2,124,0],[140,11,124,9,"distinctUntilDeepChanged"],[140,35,124,33,"distinctUntilDeepChanged"],[140,36,124,33],[140,38,124,36],[141,4,125,4],[141,11,125,11,"distinctUntilChanged"],[141,31,125,31],[141,32,125,32,"isDeepEqual"],[141,43,125,43],[141,44,125,44],[142,2,126,0],[143,0,126,1],[143,3]],"functionMap":{"names":["<global>","map","<anonymous>","observable$argument_0","source.subscribe$argument_0.next","source.subscribe$argument_0.error","source.subscribe$argument_0.complete","share","startIfNeeded","resetIfNeeded","unsubscribe","observers.findIndex$argument_0","tap","distinctUntilChanged","isDeepEqual","Object.entries.every$argument_0","distinctUntilDeepChanged"],"mappings":"AAA;ACE;WCC;0BCC;gBCG;iBDE;gBEC;iBFE;gBGC;iBHE;SDG;KDC;CDC;AOC;WLC;QMI;gBJK;iBII;gBHC;iBGI;gBFC;iBEI;SNE;QOC;SPO;0BCC;gBOK;sDCG,qBD;iBPI;SDE;KKC;CPC;AYC;WVC;0BCC;gBCE;iBDG;gBEC;iBFG;gBGC;iBHG;SDE;KUC;CZC;AaE,wCX,eW;WXC;0BCC;gBCG;iBDM;gBEC;iBFE;gBGC;iBHE;SDE;KWC;CbC;oBcC;0GCK,8BD;CdC;AgBC;ChBE"}},"type":"js/module"}]}