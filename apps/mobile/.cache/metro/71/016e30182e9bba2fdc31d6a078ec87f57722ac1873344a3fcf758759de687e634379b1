{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":27,"column":0,"index":880}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"expo-constants","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"2TquPknmjb1g5OMuvQ0eTuioYjU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getBaseUrl = void 0;\n  var _expoConstants = _interopRequireDefault(require(_dependencyMap[1], \"expo-constants\"));\n  /**\n   * Extend this function when going to production by\n   * setting the baseUrl to your production API URL.\n   */\n  var getBaseUrl = () => {\n    /**\n     * Gets the IP address of your host-machine. If it cannot automatically find it,\n     * you'll have to manually set it. NOTE: Port 3000 should work for most but confirm\n     * you don't have anything else running on it, or you'd have to change it.\n     *\n     * **NOTE**: This is only for development. In production, you'll want to set the\n     * baseUrl to your production API URL.\n     */\n    var debuggerHost = _expoConstants.default.expoConfig?.hostUri;\n    var localhost = debuggerHost?.split(\":\")[0];\n    if (!localhost) {\n      // return \"https://turbo.t3.gg\";\n      throw new Error(\"Failed to get localhost. Please point to your production server.\");\n    }\n    return `http://${localhost}:3000`;\n  };\n  exports.getBaseUrl = getBaseUrl;\n});","lineCount":30,"map":[[7,2,1,0],[7,6,1,0,"_expoConstants"],[7,20,1,0],[7,23,1,0,"_interopRequireDefault"],[7,45,1,0],[7,46,1,0,"require"],[7,53,1,0],[7,54,1,0,"_dependencyMap"],[7,68,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,2,7,7],[12,6,7,13,"getBaseUrl"],[12,16,7,23],[12,19,7,26,"getBaseUrl"],[12,20,7,26],[12,25,7,32],[13,4,8,2],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,4,16,2],[21,8,16,8,"debuggerHost"],[21,20,16,20],[21,23,16,23,"Constants"],[21,45,16,32],[21,46,16,33,"expoConfig"],[21,56,16,43],[21,58,16,45,"hostUri"],[21,65,16,52],[22,4,17,2],[22,8,17,8,"localhost"],[22,17,17,17],[22,20,17,20,"debuggerHost"],[22,32,17,32],[22,34,17,34,"split"],[22,39,17,39],[22,40,17,40],[22,43,17,43],[22,44,17,44],[22,45,17,45],[22,46,17,46],[22,47,17,47],[23,4,19,2],[23,8,19,6],[23,9,19,7,"localhost"],[23,18,19,16],[23,20,19,18],[24,6,20,4],[25,6,21,4],[25,12,21,10],[25,16,21,14,"Error"],[25,21,21,19],[25,22,22,6],[25,88,23,4],[25,89,23,5],[26,4,24,2],[27,4,25,2],[27,11,25,9],[27,21,25,19,"localhost"],[27,30,25,28],[27,37,25,35],[28,2,26,0],[28,3,26,1],[29,2,26,2,"exports"],[29,9,26,2],[29,10,26,2,"getBaseUrl"],[29,20,26,2],[29,23,26,2,"getBaseUrl"],[29,33,26,2],[30,0,26,2],[30,3]],"functionMap":{"names":["<global>","getBaseUrl"],"mappings":"AAA;0BCM;CDmB"}},"type":"js/module"}]}