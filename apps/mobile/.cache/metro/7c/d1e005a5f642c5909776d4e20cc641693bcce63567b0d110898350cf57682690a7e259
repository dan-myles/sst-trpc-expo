{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":0,"index":1252}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":0,"index":1252}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../error/TRPCError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"9ib1RjUnEdxHK//Di4rQ4LyNNns="}},{"name":"../utils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":40,"index":92}}],"key":"Fat1H7ILw/aiXtTd5J3KzMpI+dk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseConnectionParamsFromString = parseConnectionParamsFromString;\n  exports.parseConnectionParamsFromUnknown = parseConnectionParamsFromUnknown;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _TRPCError = require(_dependencyMap[2], \"../error/TRPCError.mjs\");\n  var _utils = require(_dependencyMap[3], \"../utils.mjs\");\n  function parseConnectionParamsFromUnknown(parsed) {\n    try {\n      if (parsed === null) {\n        return null;\n      }\n      if (!(0, _utils.isObject)(parsed)) {\n        throw new Error('Expected object');\n      }\n      var nonStringValues = Object.entries(parsed).filter(_ref => {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          _key = _ref2[0],\n          value = _ref2[1];\n        return typeof value !== 'string';\n      });\n      if (nonStringValues.length > 0) {\n        throw new Error(`Expected connectionParams to be string values. Got ${nonStringValues.map(_ref3 => {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n            key = _ref4[0],\n            value = _ref4[1];\n          return `${key}: ${typeof value}`;\n        }).join(', ')}`);\n      }\n      return parsed;\n    } catch (cause) {\n      throw new _TRPCError.TRPCError({\n        code: 'PARSE_ERROR',\n        message: 'Invalid connection params shape',\n        cause\n      });\n    }\n  }\n  function parseConnectionParamsFromString(str) {\n    var parsed;\n    try {\n      parsed = JSON.parse(str);\n    } catch (cause) {\n      throw new _TRPCError.TRPCError({\n        code: 'PARSE_ERROR',\n        message: 'Not JSON-parsable query params',\n        cause\n      });\n    }\n    return parseConnectionParamsFromUnknown(parsed);\n  }\n});","lineCount":55,"map":[[9,2,1,0],[9,6,1,0,"_TRPCError"],[9,16,1,0],[9,19,1,0,"require"],[9,26,1,0],[9,27,1,0,"_dependencyMap"],[9,41,1,0],[10,2,2,0],[10,6,2,0,"_utils"],[10,12,2,0],[10,15,2,0,"require"],[10,22,2,0],[10,23,2,0,"_dependencyMap"],[10,37,2,0],[11,2,4,0],[11,11,4,9,"parseConnectionParamsFromUnknown"],[11,43,4,41,"parseConnectionParamsFromUnknown"],[11,44,4,42,"parsed"],[11,50,4,48],[11,52,4,50],[12,4,5,4],[12,8,5,8],[13,6,6,8],[13,10,6,12,"parsed"],[13,16,6,18],[13,21,6,23],[13,25,6,27],[13,27,6,29],[14,8,7,12],[14,15,7,19],[14,19,7,23],[15,6,8,8],[16,6,9,8],[16,10,9,12],[16,11,9,13],[16,15,9,13,"isObject"],[16,30,9,21],[16,32,9,22,"parsed"],[16,38,9,28],[16,39,9,29],[16,41,9,31],[17,8,10,12],[17,14,10,18],[17,18,10,22,"Error"],[17,23,10,27],[17,24,10,28],[17,41,10,45],[17,42,10,46],[18,6,11,8],[19,6,12,8],[19,10,12,14,"nonStringValues"],[19,25,12,29],[19,28,12,32,"Object"],[19,34,12,38],[19,35,12,39,"entries"],[19,42,12,46],[19,43,12,47,"parsed"],[19,49,12,53],[19,50,12,54],[19,51,12,55,"filter"],[19,57,12,61],[19,58,12,62,"_ref"],[19,62,12,62],[20,8,12,62],[20,12,12,62,"_ref2"],[20,17,12,62],[20,24,12,62,"_slicedToArray2"],[20,39,12,62],[20,40,12,62,"default"],[20,47,12,62],[20,49,12,62,"_ref"],[20,53,12,62],[21,10,12,64,"_key"],[21,14,12,68],[21,17,12,68,"_ref2"],[21,22,12,68],[22,10,12,70,"value"],[22,15,12,75],[22,18,12,75,"_ref2"],[22,23,12,75],[23,8,12,75],[23,15,12,79],[23,22,12,86,"value"],[23,27,12,91],[23,32,12,96],[23,40,12,104],[24,6,12,104],[24,8,12,105],[25,6,13,8],[25,10,13,12,"nonStringValues"],[25,25,13,27],[25,26,13,28,"length"],[25,32,13,34],[25,35,13,37],[25,36,13,38],[25,38,13,40],[26,8,14,12],[26,14,14,18],[26,18,14,22,"Error"],[26,23,14,27],[26,24,14,28],[26,78,14,82,"nonStringValues"],[26,93,14,97],[26,94,14,98,"map"],[26,97,14,101],[26,98,14,102,"_ref3"],[26,103,14,102],[27,10,14,102],[27,14,14,102,"_ref4"],[27,19,14,102],[27,26,14,102,"_slicedToArray2"],[27,41,14,102],[27,42,14,102,"default"],[27,49,14,102],[27,51,14,102,"_ref3"],[27,56,14,102],[28,12,14,104,"key"],[28,15,14,107],[28,18,14,107,"_ref4"],[28,23,14,107],[29,12,14,109,"value"],[29,17,14,114],[29,20,14,114,"_ref4"],[29,25,14,114],[30,10,14,114],[30,17,14,118],[30,20,14,121,"key"],[30,23,14,124],[30,28,14,129],[30,35,14,136,"value"],[30,40,14,141],[30,42,14,143],[31,8,14,143],[31,10,14,144],[31,11,14,145,"join"],[31,15,14,149],[31,16,14,150],[31,20,14,154],[31,21,14,155],[31,23,14,157],[31,24,14,158],[32,6,15,8],[33,6,16,8],[33,13,16,15,"parsed"],[33,19,16,21],[34,4,17,4],[34,5,17,5],[34,6,17,6],[34,13,17,13,"cause"],[34,18,17,18],[34,20,17,20],[35,6,18,8],[35,12,18,14],[35,16,18,18,"TRPCError"],[35,36,18,27],[35,37,18,28],[36,8,19,12,"code"],[36,12,19,16],[36,14,19,18],[36,27,19,31],[37,8,20,12,"message"],[37,15,20,19],[37,17,20,21],[37,50,20,54],[38,8,21,12,"cause"],[39,6,22,8],[39,7,22,9],[39,8,22,10],[40,4,23,4],[41,2,24,0],[42,2,25,0],[42,11,25,9,"parseConnectionParamsFromString"],[42,42,25,40,"parseConnectionParamsFromString"],[42,43,25,41,"str"],[42,46,25,44],[42,48,25,46],[43,4,26,4],[43,8,26,8,"parsed"],[43,14,26,14],[44,4,27,4],[44,8,27,8],[45,6,28,8,"parsed"],[45,12,28,14],[45,15,28,17,"JSON"],[45,19,28,21],[45,20,28,22,"parse"],[45,25,28,27],[45,26,28,28,"str"],[45,29,28,31],[45,30,28,32],[46,4,29,4],[46,5,29,5],[46,6,29,6],[46,13,29,13,"cause"],[46,18,29,18],[46,20,29,20],[47,6,30,8],[47,12,30,14],[47,16,30,18,"TRPCError"],[47,36,30,27],[47,37,30,28],[48,8,31,12,"code"],[48,12,31,16],[48,14,31,18],[48,27,31,31],[49,8,32,12,"message"],[49,15,32,19],[49,17,32,21],[49,49,32,53],[50,8,33,12,"cause"],[51,6,34,8],[51,7,34,9],[51,8,34,10],[52,4,35,4],[53,4,36,4],[53,11,36,11,"parseConnectionParamsFromUnknown"],[53,43,36,43],[53,44,36,44,"parsed"],[53,50,36,50],[53,51,36,51],[54,2,37,0],[55,0,37,1],[55,3]],"functionMap":{"names":["<global>","parseConnectionParamsFromUnknown","Object.entries.filter$argument_0","nonStringValues.map$argument_0","parseConnectionParamsFromString"],"mappings":"AAA;ACG;8DCQ,0CD;sGEE,yCF;CDU;AIC;CJY"}},"type":"js/module"}]}