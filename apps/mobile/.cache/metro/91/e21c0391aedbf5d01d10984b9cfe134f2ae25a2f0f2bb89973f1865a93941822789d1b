{"dependencies":[{"name":"./observable.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"H3RWiSY7YI5ZygEBPFxnMuNKuqY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.behaviorSubject = behaviorSubject;\n  var _observable = require(_dependencyMap[0], \"./observable.mjs\");\n  /**\n   * @internal\n   * An observable that maintains and provides a \"current value\" to subscribers\n   * @see https://www.learnrxjs.io/learn-rxjs/subjects/behaviorsubject\n   */\n  function behaviorSubject(initialValue) {\n    var value = initialValue;\n    var observerList = [];\n    var addObserver = observer => {\n      if (value !== undefined) {\n        observer.next(value);\n      }\n      observerList.push(observer);\n    };\n    var removeObserver = observer => {\n      observerList.splice(observerList.indexOf(observer), 1);\n    };\n    var obs = (0, _observable.observable)(observer => {\n      addObserver(observer);\n      return () => {\n        removeObserver(observer);\n      };\n    });\n    obs.next = nextValue => {\n      if (value === nextValue) {\n        return;\n      }\n      value = nextValue;\n      for (var observer of observerList) {\n        observer.next(nextValue);\n      }\n    };\n    obs.get = () => value;\n    return obs;\n  }\n});","lineCount":42,"map":[[6,2,1,0],[6,6,1,0,"_observable"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,2,7,4],[12,11,7,13,"behaviorSubject"],[12,26,7,28,"behaviorSubject"],[12,27,7,29,"initialValue"],[12,39,7,41],[12,41,7,43],[13,4,8,4],[13,8,8,8,"value"],[13,13,8,13],[13,16,8,16,"initialValue"],[13,28,8,28],[14,4,9,4],[14,8,9,10,"observerList"],[14,20,9,22],[14,23,9,25],[14,25,9,27],[15,4,10,4],[15,8,10,10,"addObserver"],[15,19,10,21],[15,22,10,25,"observer"],[15,30,10,33],[15,34,10,36],[16,6,11,8],[16,10,11,12,"value"],[16,15,11,17],[16,20,11,22,"undefined"],[16,29,11,31],[16,31,11,33],[17,8,12,12,"observer"],[17,16,12,20],[17,17,12,21,"next"],[17,21,12,25],[17,22,12,26,"value"],[17,27,12,31],[17,28,12,32],[18,6,13,8],[19,6,14,8,"observerList"],[19,18,14,20],[19,19,14,21,"push"],[19,23,14,25],[19,24,14,26,"observer"],[19,32,14,34],[19,33,14,35],[20,4,15,4],[20,5,15,5],[21,4,16,4],[21,8,16,10,"removeObserver"],[21,22,16,24],[21,25,16,28,"observer"],[21,33,16,36],[21,37,16,39],[22,6,17,8,"observerList"],[22,18,17,20],[22,19,17,21,"splice"],[22,25,17,27],[22,26,17,28,"observerList"],[22,38,17,40],[22,39,17,41,"indexOf"],[22,46,17,48],[22,47,17,49,"observer"],[22,55,17,57],[22,56,17,58],[22,58,17,60],[22,59,17,61],[22,60,17,62],[23,4,18,4],[23,5,18,5],[24,4,19,4],[24,8,19,10,"obs"],[24,11,19,13],[24,14,19,16],[24,18,19,16,"observable"],[24,40,19,26],[24,42,19,28,"observer"],[24,50,19,36],[24,54,19,39],[25,6,20,8,"addObserver"],[25,17,20,19],[25,18,20,20,"observer"],[25,26,20,28],[25,27,20,29],[26,6,21,8],[26,13,21,15],[26,19,21,19],[27,8,22,12,"removeObserver"],[27,22,22,26],[27,23,22,27,"observer"],[27,31,22,35],[27,32,22,36],[28,6,23,8],[28,7,23,9],[29,4,24,4],[29,5,24,5],[29,6,24,6],[30,4,25,4,"obs"],[30,7,25,7],[30,8,25,8,"next"],[30,12,25,12],[30,15,25,16,"nextValue"],[30,24,25,25],[30,28,25,28],[31,6,26,8],[31,10,26,12,"value"],[31,15,26,17],[31,20,26,22,"nextValue"],[31,29,26,31],[31,31,26,33],[32,8,27,12],[33,6,28,8],[34,6,29,8,"value"],[34,11,29,13],[34,14,29,16,"nextValue"],[34,23,29,25],[35,6,30,8],[35,11,30,13],[35,15,30,19,"observer"],[35,23,30,27],[35,27,30,31,"observerList"],[35,39,30,43],[35,41,30,44],[36,8,31,12,"observer"],[36,16,31,20],[36,17,31,21,"next"],[36,21,31,25],[36,22,31,26,"nextValue"],[36,31,31,35],[36,32,31,36],[37,6,32,8],[38,4,33,4],[38,5,33,5],[39,4,34,4,"obs"],[39,7,34,7],[39,8,34,8,"get"],[39,11,34,11],[39,14,34,14],[39,20,34,18,"value"],[39,25,34,23],[40,4,35,4],[40,11,35,11,"obs"],[40,14,35,14],[41,2,36,0],[42,0,36,1],[42,3]],"functionMap":{"names":["<global>","behaviorSubject","addObserver","removeObserver","observable$argument_0","<anonymous>","obs.next","obs.get"],"mappings":"AAA;ICM;wBCG;KDK;2BEC;KFE;2BGC;eCE;SDE;KHC;eKC;KLQ;cMC,SN;CDE"}},"type":"js/module"}]}