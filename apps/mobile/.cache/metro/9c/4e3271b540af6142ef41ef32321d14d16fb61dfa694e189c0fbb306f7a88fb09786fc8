{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":81,"column":0,"index":2958}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":81,"column":0,"index":2958}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":81,"column":0,"index":2958}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./error/formatter.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"NaFQJs/lPDeE3tiOjyD06hQzDos="}},{"name":"./middleware.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":59,"index":117}}],"key":"FLOZHEWcl71oBM9grBooH6Lq+bE="}},{"name":"./procedureBuilder.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":55,"index":173}}],"key":"9gN6Xc5qMhA0YNbuLO+9/hxLz9o="}},{"name":"./rootConfig.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":174},"end":{"line":4,"column":51,"index":225}}],"key":"ZQ+O5nyEC9o1eTGRCzp/w8tWebw="}},{"name":"./router.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":226},"end":{"line":5,"column":86,"index":312}}],"key":"tKTkPAEuoIB8jNyNGVfi2PyjtqI="}},{"name":"./transformer.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":313},"end":{"line":6,"column":75,"index":388}}],"key":"l0kgHDfZUlnTT0guzpjf8wWPUeU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initTRPC = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _formatter = require(_dependencyMap[3], \"./error/formatter.mjs\");\n  var _middleware = require(_dependencyMap[4], \"./middleware.mjs\");\n  var _procedureBuilder = require(_dependencyMap[5], \"./procedureBuilder.mjs\");\n  var _rootConfig = require(_dependencyMap[6], \"./rootConfig.mjs\");\n  var _router = require(_dependencyMap[7], \"./router.mjs\");\n  var _transformer = require(_dependencyMap[8], \"./transformer.mjs\");\n  var TRPCBuilder = /*#__PURE__*/function () {\n    function TRPCBuilder() {\n      (0, _classCallCheck2.default)(this, TRPCBuilder);\n    }\n    return (0, _createClass2.default)(TRPCBuilder, [{\n      key: \"context\",\n      value:\n      /**\n      * Add a context shape as a generic to the root object\n      * @see https://trpc.io/docs/v11/server/context\n      */\n      function context() {\n        return new TRPCBuilder();\n      }\n      /**\n      * Add a meta shape as a generic to the root object\n      * @see https://trpc.io/docs/v11/quickstart\n      */\n    }, {\n      key: \"meta\",\n      value: function meta() {\n        return new TRPCBuilder();\n      }\n      /**\n      * Create the root object\n      * @see https://trpc.io/docs/v11/server/routers#initialize-trpc\n      */\n    }, {\n      key: \"create\",\n      value: function create(opts) {\n        var config = {\n          ...opts,\n          transformer: (0, _transformer.getDataTransformer)(opts?.transformer ?? _transformer.defaultTransformer),\n          isDev: opts?.isDev ??\n          // eslint-disable-next-line @typescript-eslint/dot-notation\n          globalThis.process?.env['NODE_ENV'] !== 'production',\n          allowOutsideOfServer: opts?.allowOutsideOfServer ?? false,\n          errorFormatter: opts?.errorFormatter ?? _formatter.defaultFormatter,\n          isServer: opts?.isServer ?? _rootConfig.isServerDefault,\n          /**\n          * These are just types, they can't be used at runtime\n          * @internal\n          */\n          $types: null\n        };\n        {\n          // Server check\n          var isServer = opts?.isServer ?? _rootConfig.isServerDefault;\n          if (!isServer && opts?.allowOutsideOfServer !== true) {\n            throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n          }\n        }\n        return {\n          /**\n          * Your router config\n          * @internal\n          */\n          _config: config,\n          /**\n          * Builder object for creating procedures\n          * @see https://trpc.io/docs/v11/server/procedures\n          */\n          procedure: (0, _procedureBuilder.createBuilder)({\n            meta: opts?.defaultMeta\n          }),\n          /**\n          * Create reusable middlewares\n          * @see https://trpc.io/docs/v11/server/middlewares\n          */\n          middleware: (0, _middleware.createMiddlewareFactory)(),\n          /**\n          * Create a router\n          * @see https://trpc.io/docs/v11/server/routers\n          */\n          router: (0, _router.createRouterFactory)(config),\n          /**\n          * Merge Routers\n          * @see https://trpc.io/docs/v11/server/merging-routers\n          */\n          mergeRouters: _router.mergeRouters,\n          /**\n          * Create a server-side caller for a router\n          * @see https://trpc.io/docs/v11/server/server-side-calls\n          */\n          createCallerFactory: (0, _router.createCallerFactory)()\n        };\n      }\n    }]);\n  }();\n  /**\n   * Builder to initialize the tRPC root object - use this exactly once per backend\n   * @see https://trpc.io/docs/v11/quickstart\n   */\n  var initTRPC = exports.initTRPC = new TRPCBuilder();\n});","lineCount":109,"map":[[9,2,1,0],[9,6,1,0,"_formatter"],[9,16,1,0],[9,19,1,0,"require"],[9,26,1,0],[9,27,1,0,"_dependencyMap"],[9,41,1,0],[10,2,2,0],[10,6,2,0,"_middleware"],[10,17,2,0],[10,20,2,0,"require"],[10,27,2,0],[10,28,2,0,"_dependencyMap"],[10,42,2,0],[11,2,3,0],[11,6,3,0,"_procedureBuilder"],[11,23,3,0],[11,26,3,0,"require"],[11,33,3,0],[11,34,3,0,"_dependencyMap"],[11,48,3,0],[12,2,4,0],[12,6,4,0,"_rootConfig"],[12,17,4,0],[12,20,4,0,"require"],[12,27,4,0],[12,28,4,0,"_dependencyMap"],[12,42,4,0],[13,2,5,0],[13,6,5,0,"_router"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_transformer"],[14,18,6,0],[14,21,6,0,"require"],[14,28,6,0],[14,29,6,0,"_dependencyMap"],[14,43,6,0],[15,2,6,75],[15,6,8,6,"TRPCBuilder"],[15,17,8,17],[16,4,8,17],[16,13,8,17,"TRPCBuilder"],[16,25,8,17],[17,6,8,17],[17,10,8,17,"_classCallCheck2"],[17,26,8,17],[17,27,8,17,"default"],[17,34,8,17],[17,42,8,17,"TRPCBuilder"],[17,53,8,17],[18,4,8,17],[19,4,8,17],[19,15,8,17,"_createClass2"],[19,28,8,17],[19,29,8,17,"default"],[19,36,8,17],[19,38,8,17,"TRPCBuilder"],[19,49,8,17],[20,6,8,17,"key"],[20,9,8,17],[21,6,8,17,"value"],[21,11,8,17],[22,6,9,4],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,6,12,6],[26,15,12,6,"context"],[26,22,12,13,"context"],[26,23,12,13],[26,25,12,16],[27,8,13,8],[27,15,13,15],[27,19,13,19,"TRPCBuilder"],[27,30,13,30],[27,31,13,31],[27,32,13,32],[28,6,14,4],[29,6,15,4],[30,0,16,0],[31,0,17,0],[32,0,18,0],[33,4,15,4],[34,6,15,4,"key"],[34,9,15,4],[35,6,15,4,"value"],[35,11,15,4],[35,13,18,6],[35,22,18,6,"meta"],[35,26,18,10,"meta"],[35,27,18,10],[35,29,18,13],[36,8,19,8],[36,15,19,15],[36,19,19,19,"TRPCBuilder"],[36,30,19,30],[36,31,19,31],[36,32,19,32],[37,6,20,4],[38,6,21,4],[39,0,22,0],[40,0,23,0],[41,0,24,0],[42,4,21,4],[43,6,21,4,"key"],[43,9,21,4],[44,6,21,4,"value"],[44,11,21,4],[44,13,24,6],[44,22,24,6,"create"],[44,28,24,12,"create"],[44,29,24,13,"opts"],[44,33,24,17],[44,35,24,19],[45,8,25,8],[45,12,25,14,"config"],[45,18,25,20],[45,21,25,23],[46,10,26,12],[46,13,26,15,"opts"],[46,17,26,19],[47,10,27,12,"transformer"],[47,21,27,23],[47,23,27,25],[47,27,27,25,"getDataTransformer"],[47,58,27,43],[47,60,27,44,"opts"],[47,64,27,48],[47,66,27,50,"transformer"],[47,77,27,61],[47,81,27,65,"defaultTransformer"],[47,112,27,83],[47,113,27,84],[48,10,28,12,"isDev"],[48,15,28,17],[48,17,28,19,"opts"],[48,21,28,23],[48,23,28,25,"isDev"],[48,28,28,30],[49,10,28,34],[50,10,29,12,"globalThis"],[50,20,29,22],[50,21,29,23,"process"],[50,28,29,30],[50,30,29,32,"env"],[50,33,29,35],[50,34,29,36],[50,44,29,46],[50,45,29,47],[50,50,29,52],[50,62,29,64],[51,10,30,12,"allowOutsideOfServer"],[51,30,30,32],[51,32,30,34,"opts"],[51,36,30,38],[51,38,30,40,"allowOutsideOfServer"],[51,58,30,60],[51,62,30,64],[51,67,30,69],[52,10,31,12,"errorFormatter"],[52,24,31,26],[52,26,31,28,"opts"],[52,30,31,32],[52,32,31,34,"errorFormatter"],[52,46,31,48],[52,50,31,52,"defaultFormatter"],[52,77,31,68],[53,10,32,12,"isServer"],[53,18,32,20],[53,20,32,22,"opts"],[53,24,32,26],[53,26,32,28,"isServer"],[53,34,32,36],[53,38,32,40,"isServerDefault"],[53,65,32,55],[54,10,33,12],[55,0,34,0],[56,0,35,0],[57,0,36,0],[58,10,36,10,"$types"],[58,16,36,16],[58,18,36,18],[59,8,37,8],[59,9,37,9],[60,8,38,8],[61,10,39,12],[62,10,40,12],[62,14,40,18,"isServer"],[62,22,40,26],[62,25,40,29,"opts"],[62,29,40,33],[62,31,40,35,"isServer"],[62,39,40,43],[62,43,40,47,"isServerDefault"],[62,70,40,62],[63,10,41,12],[63,14,41,16],[63,15,41,17,"isServer"],[63,23,41,25],[63,27,41,29,"opts"],[63,31,41,33],[63,33,41,35,"allowOutsideOfServer"],[63,53,41,55],[63,58,41,60],[63,62,41,64],[63,64,41,66],[64,12,42,16],[64,18,42,22],[64,22,42,26,"Error"],[64,27,42,31],[64,28,42,32],[64,126,42,130],[64,127,42,131],[65,10,43,12],[66,8,44,8],[67,8,45,8],[67,15,45,15],[68,10,46,12],[69,0,47,0],[70,0,48,0],[71,0,49,0],[72,10,49,10,"_config"],[72,17,49,17],[72,19,49,19,"config"],[72,25,49,25],[73,10,50,12],[74,0,51,0],[75,0,52,0],[76,0,53,0],[77,10,53,10,"procedure"],[77,19,53,19],[77,21,53,21],[77,25,53,21,"createBuilder"],[77,56,53,34],[77,58,53,35],[78,12,54,16,"meta"],[78,16,54,20],[78,18,54,22,"opts"],[78,22,54,26],[78,24,54,28,"defaultMeta"],[79,10,55,12],[79,11,55,13],[79,12,55,14],[80,10,56,12],[81,0,57,0],[82,0,58,0],[83,0,59,0],[84,10,59,10,"middleware"],[84,20,59,20],[84,22,59,22],[84,26,59,22,"createMiddlewareFactory"],[84,61,59,45],[84,63,59,46],[84,64,59,47],[85,10,60,12],[86,0,61,0],[87,0,62,0],[88,0,63,0],[89,10,63,10,"router"],[89,16,63,16],[89,18,63,18],[89,22,63,18,"createRouterFactory"],[89,49,63,37],[89,51,63,38,"config"],[89,57,63,44],[89,58,63,45],[90,10,64,12],[91,0,65,0],[92,0,66,0],[93,0,67,0],[94,10,67,10,"mergeRouters"],[94,22,67,22],[94,24,67,10,"mergeRouters"],[94,44,67,22],[95,10,68,12],[96,0,69,0],[97,0,70,0],[98,0,71,0],[99,10,71,10,"createCallerFactory"],[99,29,71,29],[99,31,71,31],[99,35,71,31,"createCallerFactory"],[99,62,71,50],[99,64,71,51],[100,8,72,8],[100,9,72,9],[101,6,73,4],[102,4,73,5],[103,2,73,5],[104,2,75,0],[105,0,76,0],[106,0,77,0],[107,0,78,0],[108,2,78,4],[108,6,78,10,"initTRPC"],[108,14,78,18],[108,17,78,18,"exports"],[108,24,78,18],[108,25,78,18,"initTRPC"],[108,33,78,18],[108,36,78,21],[108,40,78,25,"TRPCBuilder"],[108,51,78,36],[108,52,78,37],[108,53,78,38],[109,0,78,39],[109,3]],"functionMap":{"names":["<global>","TRPCBuilder","TRPCBuilder#context","TRPCBuilder#meta","TRPCBuilder#create"],"mappings":"AAA;ACO;MCI;KDE;MEI;KFE;MGI;KHiD;CDC"}},"type":"js/module"}]}