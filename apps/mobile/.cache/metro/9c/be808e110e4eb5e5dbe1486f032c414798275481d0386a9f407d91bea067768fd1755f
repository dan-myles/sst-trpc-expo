{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.willFetch = exports.shouldSuspend = exports.fetchOptimistic = exports.ensureSuspenseTimers = exports.defaultThrowOnError = void 0;\n  // src/suspense.ts\n  var defaultThrowOnError = (_error, query) => query.state.data === void 0;\n  exports.defaultThrowOnError = defaultThrowOnError;\n  var ensureSuspenseTimers = defaultedOptions => {\n    var originalStaleTime = defaultedOptions.staleTime;\n    if (defaultedOptions.suspense) {\n      defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? function () {\n        return Math.max(originalStaleTime(...arguments), 1e3);\n      } : Math.max(originalStaleTime ?? 1e3, 1e3);\n      if (typeof defaultedOptions.gcTime === \"number\") {\n        defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n      }\n    }\n  };\n  exports.ensureSuspenseTimers = ensureSuspenseTimers;\n  var willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\n  exports.willFetch = willFetch;\n  var shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\n  exports.shouldSuspend = shouldSuspend;\n  var fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset();\n  });\n  exports.fetchOptimistic = fetchOptimistic;\n});","lineCount":29,"map":[[6,2,1,0],[7,2,2,0],[7,6,2,4,"defaultThrowOnError"],[7,25,2,23],[7,28,2,26,"defaultThrowOnError"],[7,29,2,27,"_error"],[7,35,2,33],[7,37,2,35,"query"],[7,42,2,40],[7,47,2,45,"query"],[7,52,2,50],[7,53,2,51,"state"],[7,58,2,56],[7,59,2,57,"data"],[7,63,2,61],[7,68,2,66],[7,73,2,71],[7,74,2,72],[8,2,2,73,"exports"],[8,9,2,73],[8,10,2,73,"defaultThrowOnError"],[8,29,2,73],[8,32,2,73,"defaultThrowOnError"],[8,51,2,73],[9,2,3,0],[9,6,3,4,"ensureSuspenseTimers"],[9,26,3,24],[9,29,3,28,"defaultedOptions"],[9,45,3,44],[9,49,3,49],[10,4,4,2],[10,8,4,8,"originalStaleTime"],[10,25,4,25],[10,28,4,28,"defaultedOptions"],[10,44,4,44],[10,45,4,45,"staleTime"],[10,54,4,54],[11,4,5,2],[11,8,5,6,"defaultedOptions"],[11,24,5,22],[11,25,5,23,"suspense"],[11,33,5,31],[11,35,5,33],[12,6,6,4,"defaultedOptions"],[12,22,6,20],[12,23,6,21,"staleTime"],[12,32,6,30],[12,35,6,33],[12,42,6,40,"originalStaleTime"],[12,59,6,57],[12,64,6,62],[12,74,6,72],[12,77,6,75],[13,8,6,75],[13,15,6,88,"Math"],[13,19,6,92],[13,20,6,93,"max"],[13,23,6,96],[13,24,6,97,"originalStaleTime"],[13,41,6,114],[13,42,6,115],[13,45,6,115,"arguments"],[13,54,6,122],[13,55,6,123],[13,57,6,125],[13,60,6,128],[13,61,6,129],[14,6,6,129],[14,10,6,132,"Math"],[14,14,6,136],[14,15,6,137,"max"],[14,18,6,140],[14,19,6,141,"originalStaleTime"],[14,36,6,158],[14,40,6,162],[14,43,6,165],[14,45,6,167],[14,48,6,170],[14,49,6,171],[15,6,7,4],[15,10,7,8],[15,17,7,15,"defaultedOptions"],[15,33,7,31],[15,34,7,32,"gcTime"],[15,40,7,38],[15,45,7,43],[15,53,7,51],[15,55,7,53],[16,8,8,6,"defaultedOptions"],[16,24,8,22],[16,25,8,23,"gcTime"],[16,31,8,29],[16,34,8,32,"Math"],[16,38,8,36],[16,39,8,37,"max"],[16,42,8,40],[16,43,8,41,"defaultedOptions"],[16,59,8,57],[16,60,8,58,"gcTime"],[16,66,8,64],[16,68,8,66],[16,71,8,69],[16,72,8,70],[17,6,9,4],[18,4,10,2],[19,2,11,0],[19,3,11,1],[20,2,11,2,"exports"],[20,9,11,2],[20,10,11,2,"ensureSuspenseTimers"],[20,30,11,2],[20,33,11,2,"ensureSuspenseTimers"],[20,53,11,2],[21,2,12,0],[21,6,12,4,"willFetch"],[21,15,12,13],[21,18,12,16,"willFetch"],[21,19,12,17,"result"],[21,25,12,23],[21,27,12,25,"isRestoring"],[21,38,12,36],[21,43,12,41,"result"],[21,49,12,47],[21,50,12,48,"isLoading"],[21,59,12,57],[21,63,12,61,"result"],[21,69,12,67],[21,70,12,68,"isFetching"],[21,80,12,78],[21,84,12,82],[21,85,12,83,"isRestoring"],[21,96,12,94],[22,2,12,95,"exports"],[22,9,12,95],[22,10,12,95,"willFetch"],[22,19,12,95],[22,22,12,95,"willFetch"],[22,31,12,95],[23,2,13,0],[23,6,13,4,"shouldSuspend"],[23,19,13,17],[23,22,13,20,"shouldSuspend"],[23,23,13,21,"defaultedOptions"],[23,39,13,37],[23,41,13,39,"result"],[23,47,13,45],[23,52,13,50,"defaultedOptions"],[23,68,13,66],[23,70,13,68,"suspense"],[23,78,13,76],[23,82,13,80,"result"],[23,88,13,86],[23,89,13,87,"isPending"],[23,98,13,96],[24,2,13,97,"exports"],[24,9,13,97],[24,10,13,97,"shouldSuspend"],[24,23,13,97],[24,26,13,97,"shouldSuspend"],[24,39,13,97],[25,2,14,0],[25,6,14,4,"fetchOptimistic"],[25,21,14,19],[25,24,14,22,"fetchOptimistic"],[25,25,14,23,"defaultedOptions"],[25,41,14,39],[25,43,14,41,"observer"],[25,51,14,49],[25,53,14,51,"errorResetBoundary"],[25,71,14,69],[25,76,14,74,"observer"],[25,84,14,82],[25,85,14,83,"fetchOptimistic"],[25,100,14,98],[25,101,14,99,"defaultedOptions"],[25,117,14,115],[25,118,14,116],[25,119,14,117,"catch"],[25,124,14,122],[25,125,14,123],[25,131,14,129],[26,4,15,2,"errorResetBoundary"],[26,22,15,20],[26,23,15,21,"clearReset"],[26,33,15,31],[26,34,15,32],[26,35,15,33],[27,2,16,0],[27,3,16,1],[27,4,16,2],[28,2,16,3,"exports"],[28,9,16,3],[28,10,16,3,"fetchOptimistic"],[28,25,16,3],[28,28,16,3,"fetchOptimistic"],[28,43,16,3],[29,0,16,3],[29,3]],"functionMap":{"names":["<global>","defaultThrowOnError","ensureSuspenseTimers","<anonymous>","willFetch","shouldSuspend","fetchOptimistic","observer.fetchOptimistic._catch$argument_0"],"mappings":"AAA;0BCC,8CD;2BEC;2ECG,sDD;CFK;gBIC,8EJ;oBKC,4EL;sBMC,qGC;CDE,CN"}},"type":"js/module"}]}