{"dependencies":[{"name":"@trpc/server/observable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"I122979nMYhHcuaUZWanjRGzbec="}},{"name":"./internals/createChain.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":58,"index":112}}],"key":"IqwsA4HiYjSBQMhbW5efch8yoJM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.splitLink = splitLink;\n  var _observable = require(_dependencyMap[0], \"@trpc/server/observable\");\n  var _createChain = require(_dependencyMap[1], \"./internals/createChain.mjs\");\n  function asArray(value) {\n    return Array.isArray(value) ? value : [value];\n  }\n  function splitLink(opts) {\n    return runtime => {\n      var yes = asArray(opts.true).map(link => link(runtime));\n      var no = asArray(opts.false).map(link => link(runtime));\n      return props => {\n        return (0, _observable.observable)(observer => {\n          var links = opts.condition(props.op) ? yes : no;\n          return (0, _createChain.createChain)({\n            op: props.op,\n            links\n          }).subscribe(observer);\n        });\n      };\n    };\n  }\n});","lineCount":26,"map":[[6,2,1,0],[6,6,1,0,"_observable"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_createChain"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,4,0],[8,11,4,9,"asArray"],[8,18,4,16,"asArray"],[8,19,4,17,"value"],[8,24,4,22],[8,26,4,24],[9,4,5,4],[9,11,5,11,"Array"],[9,16,5,16],[9,17,5,17,"isArray"],[9,24,5,24],[9,25,5,25,"value"],[9,30,5,30],[9,31,5,31],[9,34,5,34,"value"],[9,39,5,39],[9,42,5,42],[9,43,6,8,"value"],[9,48,6,13],[9,49,7,5],[10,2,8,0],[11,2,9,0],[11,11,9,9,"splitLink"],[11,20,9,18,"splitLink"],[11,21,9,19,"opts"],[11,25,9,23],[11,27,9,25],[12,4,10,4],[12,11,10,12,"runtime"],[12,18,10,19],[12,22,10,22],[13,6,11,8],[13,10,11,14,"yes"],[13,13,11,17],[13,16,11,20,"asArray"],[13,23,11,27],[13,24,11,28,"opts"],[13,28,11,32],[13,29,11,33,"true"],[13,33,11,37],[13,34,11,38],[13,35,11,39,"map"],[13,38,11,42],[13,39,11,44,"link"],[13,43,11,48],[13,47,11,51,"link"],[13,51,11,55],[13,52,11,56,"runtime"],[13,59,11,63],[13,60,11,64],[13,61,11,65],[14,6,12,8],[14,10,12,14,"no"],[14,12,12,16],[14,15,12,19,"asArray"],[14,22,12,26],[14,23,12,27,"opts"],[14,27,12,31],[14,28,12,32,"false"],[14,33,12,37],[14,34,12,38],[14,35,12,39,"map"],[14,38,12,42],[14,39,12,44,"link"],[14,43,12,48],[14,47,12,51,"link"],[14,51,12,55],[14,52,12,56,"runtime"],[14,59,12,63],[14,60,12,64],[14,61,12,65],[15,6,13,8],[15,13,13,16,"props"],[15,18,13,21],[15,22,13,24],[16,8,14,12],[16,15,14,19],[16,19,14,19,"observable"],[16,41,14,29],[16,43,14,31,"observer"],[16,51,14,39],[16,55,14,42],[17,10,15,16],[17,14,15,22,"links"],[17,19,15,27],[17,22,15,30,"opts"],[17,26,15,34],[17,27,15,35,"condition"],[17,36,15,44],[17,37,15,45,"props"],[17,42,15,50],[17,43,15,51,"op"],[17,45,15,53],[17,46,15,54],[17,49,15,57,"yes"],[17,52,15,60],[17,55,15,63,"no"],[17,57,15,65],[18,10,16,16],[18,17,16,23],[18,21,16,23,"createChain"],[18,45,16,34],[18,47,16,35],[19,12,17,20,"op"],[19,14,17,22],[19,16,17,24,"props"],[19,21,17,29],[19,22,17,30,"op"],[19,24,17,32],[20,12,18,20,"links"],[21,10,19,16],[21,11,19,17],[21,12,19,18],[21,13,19,19,"subscribe"],[21,22,19,28],[21,23,19,29,"observer"],[21,31,19,37],[21,32,19,38],[22,8,20,12],[22,9,20,13],[22,10,20,14],[23,6,21,8],[23,7,21,9],[24,4,22,4],[24,5,22,5],[25,2,23,0],[26,0,23,1],[26,3]],"functionMap":{"names":["<global>","asArray","splitLink","<anonymous>","asArray.map$argument_0","observable$argument_0"],"mappings":"AAA;ACG;CDI;AEC;WCC;2CCC,qBD;2CCC,qBD;8BEE;aFM;KDE;CFC"}},"type":"js/module"}]}