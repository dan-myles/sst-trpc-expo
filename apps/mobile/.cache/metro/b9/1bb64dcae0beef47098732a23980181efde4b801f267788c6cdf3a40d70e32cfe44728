{"dependencies":[{"name":"@trpc/server/observable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"I122979nMYhHcuaUZWanjRGzbec="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":75,"index":129}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../TRPCClientError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":57,"index":187}}],"key":"+VRJuZ2ikq/rZ4G1ICvMdURsA7A="}},{"name":"./internals/httpUtils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":107,"index":295}}],"key":"ZJK0wcbPkw9cOEgpaYuOlXy9AFA="}},{"name":"./internals/contentTypes.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":296},"end":{"line":5,"column":71,"index":367}}],"key":"zALQvwBMZ3FbcH3MzkwtE1BTxpw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.httpLink = httpLink;\n  var _observable = require(_dependencyMap[0], \"@trpc/server/observable\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[1], \"@trpc/server/unstable-core-do-not-import\");\n  var _TRPCClientError = require(_dependencyMap[2], \"../TRPCClientError.mjs\");\n  var _httpUtils = require(_dependencyMap[3], \"./internals/httpUtils.mjs\");\n  var _contentTypes = require(_dependencyMap[4], \"./internals/contentTypes.mjs\");\n  var universalRequester = opts => {\n    if ('input' in opts) {\n      var input = opts.input;\n      if ((0, _contentTypes.isFormData)(input)) {\n        if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n          throw new Error('FormData is only supported for mutations');\n        }\n        return (0, _httpUtils.httpRequest)({\n          ...opts,\n          // The browser will set this automatically and include the boundary= in it\n          contentTypeHeader: undefined,\n          getUrl: _httpUtils.getUrl,\n          getBody: () => input\n        });\n      }\n      if ((0, _contentTypes.isOctetType)(input)) {\n        if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n          throw new Error('Octet type input is only supported for mutations');\n        }\n        return (0, _httpUtils.httpRequest)({\n          ...opts,\n          contentTypeHeader: 'application/octet-stream',\n          getUrl: _httpUtils.getUrl,\n          getBody: () => input\n        });\n      }\n    }\n    return (0, _httpUtils.jsonHttpRequester)(opts);\n  };\n  /**\n   * @see https://trpc.io/docs/client/links/httpLink\n   */\n  function httpLink(opts) {\n    var resolvedOpts = (0, _httpUtils.resolveHTTPLinkOptions)(opts);\n    return () => {\n      return _ref => {\n        var op = _ref.op;\n        return (0, _observable.observable)(observer => {\n          var path = op.path,\n            input = op.input,\n            type = op.type;\n          /* istanbul ignore if -- @preserve */\n          if (type === 'subscription') {\n            throw new Error('Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`');\n          }\n          var request = universalRequester({\n            ...resolvedOpts,\n            type,\n            path,\n            input,\n            signal: op.signal,\n            headers() {\n              if (!opts.headers) {\n                return {};\n              }\n              if (typeof opts.headers === 'function') {\n                return opts.headers({\n                  op\n                });\n              }\n              return opts.headers;\n            }\n          });\n          var meta = undefined;\n          request.then(res => {\n            meta = res.meta;\n            var transformed = (0, _unstableCoreDoNotImport.transformResult)(res.json, resolvedOpts.transformer.output);\n            if (!transformed.ok) {\n              observer.error(_TRPCClientError.TRPCClientError.from(transformed.error, {\n                meta\n              }));\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result\n            });\n            observer.complete();\n          }).catch(cause => {\n            observer.error(_TRPCClientError.TRPCClientError.from(cause, {\n              meta\n            }));\n          });\n          return () => {\n            // noop\n          };\n        });\n      };\n    };\n  }\n});","lineCount":101,"map":[[6,2,1,0],[6,6,1,0,"_observable"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_unstableCoreDoNotImport"],[7,30,2,0],[7,33,2,0,"require"],[7,40,2,0],[7,41,2,0,"_dependencyMap"],[7,55,2,0],[8,2,3,0],[8,6,3,0,"_TRPCClientError"],[8,22,3,0],[8,25,3,0,"require"],[8,32,3,0],[8,33,3,0,"_dependencyMap"],[8,47,3,0],[9,2,4,0],[9,6,4,0,"_httpUtils"],[9,16,4,0],[9,19,4,0,"require"],[9,26,4,0],[9,27,4,0,"_dependencyMap"],[9,41,4,0],[10,2,5,0],[10,6,5,0,"_contentTypes"],[10,19,5,0],[10,22,5,0,"require"],[10,29,5,0],[10,30,5,0,"_dependencyMap"],[10,44,5,0],[11,2,7,0],[11,6,7,6,"universalRequester"],[11,24,7,24],[11,27,7,28,"opts"],[11,31,7,32],[11,35,7,35],[12,4,8,4],[12,8,8,8],[12,15,8,15],[12,19,8,19,"opts"],[12,23,8,23],[12,25,8,25],[13,6,9,8],[13,10,9,16,"input"],[13,15,9,21],[13,18,9,26,"opts"],[13,22,9,30],[13,23,9,16,"input"],[13,28,9,21],[14,6,10,8],[14,10,10,12],[14,14,10,12,"isFormData"],[14,38,10,22],[14,40,10,23,"input"],[14,45,10,28],[14,46,10,29],[14,48,10,31],[15,8,11,12],[15,12,11,16,"opts"],[15,16,11,20],[15,17,11,21,"type"],[15,21,11,25],[15,26,11,30],[15,36,11,40],[15,40,11,44,"opts"],[15,44,11,48],[15,45,11,49,"methodOverride"],[15,59,11,63],[15,64,11,68],[15,70,11,74],[15,72,11,76],[16,10,12,16],[16,16,12,22],[16,20,12,26,"Error"],[16,25,12,31],[16,26,12,32],[16,68,12,74],[16,69,12,75],[17,8,13,12],[18,8,14,12],[18,15,14,19],[18,19,14,19,"httpRequest"],[18,41,14,30],[18,43,14,31],[19,10,15,16],[19,13,15,19,"opts"],[19,17,15,23],[20,10,16,16],[21,10,17,16,"contentTypeHeader"],[21,27,17,33],[21,29,17,35,"undefined"],[21,38,17,44],[22,10,18,16,"getUrl"],[22,16,18,22],[22,18,18,16,"getUrl"],[22,35,18,22],[23,10,19,16,"getBody"],[23,17,19,23],[23,19,19,25,"getBody"],[23,20,19,25],[23,25,19,29,"input"],[24,8,20,12],[24,9,20,13],[24,10,20,14],[25,6,21,8],[26,6,22,8],[26,10,22,12],[26,14,22,12,"isOctetType"],[26,39,22,23],[26,41,22,24,"input"],[26,46,22,29],[26,47,22,30],[26,49,22,32],[27,8,23,12],[27,12,23,16,"opts"],[27,16,23,20],[27,17,23,21,"type"],[27,21,23,25],[27,26,23,30],[27,36,23,40],[27,40,23,44,"opts"],[27,44,23,48],[27,45,23,49,"methodOverride"],[27,59,23,63],[27,64,23,68],[27,70,23,74],[27,72,23,76],[28,10,24,16],[28,16,24,22],[28,20,24,26,"Error"],[28,25,24,31],[28,26,24,32],[28,76,24,82],[28,77,24,83],[29,8,25,12],[30,8,26,12],[30,15,26,19],[30,19,26,19,"httpRequest"],[30,41,26,30],[30,43,26,31],[31,10,27,16],[31,13,27,19,"opts"],[31,17,27,23],[32,10,28,16,"contentTypeHeader"],[32,27,28,33],[32,29,28,35],[32,55,28,61],[33,10,29,16,"getUrl"],[33,16,29,22],[33,18,29,16,"getUrl"],[33,35,29,22],[34,10,30,16,"getBody"],[34,17,30,23],[34,19,30,25,"getBody"],[34,20,30,25],[34,25,30,29,"input"],[35,8,31,12],[35,9,31,13],[35,10,31,14],[36,6,32,8],[37,4,33,4],[38,4,34,4],[38,11,34,11],[38,15,34,11,"jsonHttpRequester"],[38,43,34,28],[38,45,34,29,"opts"],[38,49,34,33],[38,50,34,34],[39,2,35,0],[39,3,35,1],[40,2,36,0],[41,0,37,0],[42,0,38,0],[43,2,38,4],[43,11,38,13,"httpLink"],[43,19,38,21,"httpLink"],[43,20,38,22,"opts"],[43,24,38,26],[43,26,38,28],[44,4,39,4],[44,8,39,10,"resolvedOpts"],[44,20,39,22],[44,23,39,25],[44,27,39,25,"resolveHTTPLinkOptions"],[44,60,39,47],[44,62,39,48,"opts"],[44,66,39,52],[44,67,39,53],[45,4,40,4],[45,11,40,11],[45,17,40,15],[46,6,41,8],[46,13,41,15,"_ref"],[46,17,41,15],[46,21,41,25],[47,8,41,25],[47,12,41,18,"op"],[47,14,41,20],[47,17,41,20,"_ref"],[47,21,41,20],[47,22,41,18,"op"],[47,24,41,20],[48,8,42,12],[48,15,42,19],[48,19,42,19,"observable"],[48,41,42,29],[48,43,42,31,"observer"],[48,51,42,39],[48,55,42,42],[49,10,43,16],[49,14,43,24,"path"],[49,18,43,28],[49,21,43,46,"op"],[49,23,43,48],[49,24,43,24,"path"],[49,28,43,28],[50,12,43,30,"input"],[50,17,43,35],[50,20,43,46,"op"],[50,22,43,48],[50,23,43,30,"input"],[50,28,43,35],[51,12,43,37,"type"],[51,16,43,41],[51,19,43,46,"op"],[51,21,43,48],[51,22,43,37,"type"],[51,26,43,41],[52,10,44,16],[53,10,44,54],[53,14,44,58,"type"],[53,18,44,62],[53,23,44,67],[53,37,44,81],[53,39,44,83],[54,12,45,20],[54,18,45,26],[54,22,45,30,"Error"],[54,27,45,35],[54,28,45,36],[54,114,45,122],[54,115,45,123],[55,10,46,16],[56,10,47,16],[56,14,47,22,"request"],[56,21,47,29],[56,24,47,32,"universalRequester"],[56,42,47,50],[56,43,47,51],[57,12,48,20],[57,15,48,23,"resolvedOpts"],[57,27,48,35],[58,12,49,20,"type"],[58,16,49,24],[59,12,50,20,"path"],[59,16,50,24],[60,12,51,20,"input"],[60,17,51,25],[61,12,52,20,"signal"],[61,18,52,26],[61,20,52,28,"op"],[61,22,52,30],[61,23,52,31,"signal"],[61,29,52,37],[62,12,53,20,"headers"],[62,19,53,27,"headers"],[62,20,53,27],[62,22,53,31],[63,14,54,24],[63,18,54,28],[63,19,54,29,"opts"],[63,23,54,33],[63,24,54,34,"headers"],[63,31,54,41],[63,33,54,43],[64,16,55,28],[64,23,55,35],[64,24,55,36],[64,25,55,37],[65,14,56,24],[66,14,57,24],[66,18,57,28],[66,25,57,35,"opts"],[66,29,57,39],[66,30,57,40,"headers"],[66,37,57,47],[66,42,57,52],[66,52,57,62],[66,54,57,64],[67,16,58,28],[67,23,58,35,"opts"],[67,27,58,39],[67,28,58,40,"headers"],[67,35,58,47],[67,36,58,48],[68,18,59,32,"op"],[69,16,60,28],[69,17,60,29],[69,18,60,30],[70,14,61,24],[71,14,62,24],[71,21,62,31,"opts"],[71,25,62,35],[71,26,62,36,"headers"],[71,33,62,43],[72,12,63,20],[73,10,64,16],[73,11,64,17],[73,12,64,18],[74,10,65,16],[74,14,65,20,"meta"],[74,18,65,24],[74,21,65,27,"undefined"],[74,30,65,36],[75,10,66,16,"request"],[75,17,66,23],[75,18,66,24,"then"],[75,22,66,28],[75,23,66,30,"res"],[75,26,66,33],[75,30,66,36],[76,12,67,20,"meta"],[76,16,67,24],[76,19,67,27,"res"],[76,22,67,30],[76,23,67,31,"meta"],[76,27,67,35],[77,12,68,20],[77,16,68,26,"transformed"],[77,27,68,37],[77,30,68,40],[77,34,68,40,"transformResult"],[77,74,68,55],[77,76,68,56,"res"],[77,79,68,59],[77,80,68,60,"json"],[77,84,68,64],[77,86,68,66,"resolvedOpts"],[77,98,68,78],[77,99,68,79,"transformer"],[77,110,68,90],[77,111,68,91,"output"],[77,117,68,97],[77,118,68,98],[78,12,69,20],[78,16,69,24],[78,17,69,25,"transformed"],[78,28,69,36],[78,29,69,37,"ok"],[78,31,69,39],[78,33,69,41],[79,14,70,24,"observer"],[79,22,70,32],[79,23,70,33,"error"],[79,28,70,38],[79,29,70,39,"TRPCClientError"],[79,61,70,54],[79,62,70,55,"from"],[79,66,70,59],[79,67,70,60,"transformed"],[79,78,70,71],[79,79,70,72,"error"],[79,84,70,77],[79,86,70,79],[80,16,71,28,"meta"],[81,14,72,24],[81,15,72,25],[81,16,72,26],[81,17,72,27],[82,14,73,24],[83,12,74,20],[84,12,75,20,"observer"],[84,20,75,28],[84,21,75,29,"next"],[84,25,75,33],[84,26,75,34],[85,14,76,24,"context"],[85,21,76,31],[85,23,76,33,"res"],[85,26,76,36],[85,27,76,37,"meta"],[85,31,76,41],[86,14,77,24,"result"],[86,20,77,30],[86,22,77,32,"transformed"],[86,33,77,43],[86,34,77,44,"result"],[87,12,78,20],[87,13,78,21],[87,14,78,22],[88,12,79,20,"observer"],[88,20,79,28],[88,21,79,29,"complete"],[88,29,79,37],[88,30,79,38],[88,31,79,39],[89,10,80,16],[89,11,80,17],[89,12,80,18],[89,13,80,19,"catch"],[89,18,80,24],[89,19,80,26,"cause"],[89,24,80,31],[89,28,80,34],[90,12,81,20,"observer"],[90,20,81,28],[90,21,81,29,"error"],[90,26,81,34],[90,27,81,35,"TRPCClientError"],[90,59,81,50],[90,60,81,51,"from"],[90,64,81,55],[90,65,81,56,"cause"],[90,70,81,61],[90,72,81,63],[91,14,82,24,"meta"],[92,12,83,20],[92,13,83,21],[92,14,83,22],[92,15,83,23],[93,10,84,16],[93,11,84,17],[93,12,84,18],[94,10,85,16],[94,17,85,23],[94,23,85,27],[95,12,86,16],[96,10,86,16],[96,11,87,17],[97,8,88,12],[97,9,88,13],[97,10,88,14],[98,6,89,8],[98,7,89,9],[99,4,90,4],[99,5,90,5],[100,2,91,0],[101,0,91,1],[101,3]],"functionMap":{"names":["<global>","universalRequester","httpRequest$argument_0.getBody","httpLink","<anonymous>","observable$argument_0","universalRequester$argument_0.headers","request.then$argument_0","request.then._catch$argument_0"],"mappings":"AAA;2BCM;yBCY,SD;yBCW,SD;CDK;IGG;WCE;8BCE;oBCW;qBDU;6BEG;iBFc,QG;iBHI;uBDC;iBCE;aDC;KDE;CHC"}},"type":"js/module"}]}