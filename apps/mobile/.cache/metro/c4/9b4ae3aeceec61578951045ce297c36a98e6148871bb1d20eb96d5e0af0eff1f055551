{"dependencies":[{"name":"./is.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"a3kdRR4+YEHt0iAzUCWd5VoNrOQ="}},{"name":"./util.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":37,"index":101}}],"key":"aUcbDdENC60aSU0lb8uQwyHqHcs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.setDeep = exports.getDeep = void 0;\n  var _is = require(_dependencyMap[0], \"./is.js\");\n  var _util = require(_dependencyMap[1], \"./util.js\");\n  var getNthKey = (value, n) => {\n    if (n > value.size) throw new Error('index out of bounds');\n    var keys = value.keys();\n    while (n > 0) {\n      keys.next();\n      n--;\n    }\n    return keys.next().value;\n  };\n  function validatePath(path) {\n    if ((0, _util.includes)(path, '__proto__')) {\n      throw new Error('__proto__ is not allowed as a property');\n    }\n    if ((0, _util.includes)(path, 'prototype')) {\n      throw new Error('prototype is not allowed as a property');\n    }\n    if ((0, _util.includes)(path, 'constructor')) {\n      throw new Error('constructor is not allowed as a property');\n    }\n  }\n  var getDeep = (object, path) => {\n    validatePath(path);\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n      if ((0, _is.isSet)(object)) {\n        object = getNthKey(object, +key);\n      } else if ((0, _is.isMap)(object)) {\n        var row = +key;\n        var type = +path[++i] === 0 ? 'key' : 'value';\n        var keyOfRow = getNthKey(object, row);\n        switch (type) {\n          case 'key':\n            object = keyOfRow;\n            break;\n          case 'value':\n            object = object.get(keyOfRow);\n            break;\n        }\n      } else {\n        object = object[key];\n      }\n    }\n    return object;\n  };\n  exports.getDeep = getDeep;\n  var setDeep = (object, path, mapper) => {\n    validatePath(path);\n    if (path.length === 0) {\n      return mapper(object);\n    }\n    var parent = object;\n    for (var i = 0; i < path.length - 1; i++) {\n      var key = path[i];\n      if ((0, _is.isArray)(parent)) {\n        var index = +key;\n        parent = parent[index];\n      } else if ((0, _is.isPlainObject)(parent)) {\n        parent = parent[key];\n      } else if ((0, _is.isSet)(parent)) {\n        var row = +key;\n        parent = getNthKey(parent, row);\n      } else if ((0, _is.isMap)(parent)) {\n        var isEnd = i === path.length - 2;\n        if (isEnd) {\n          break;\n        }\n        var _row = +key;\n        var type = +path[++i] === 0 ? 'key' : 'value';\n        var keyOfRow = getNthKey(parent, _row);\n        switch (type) {\n          case 'key':\n            parent = keyOfRow;\n            break;\n          case 'value':\n            parent = parent.get(keyOfRow);\n            break;\n        }\n      }\n    }\n    var lastKey = path[path.length - 1];\n    if ((0, _is.isArray)(parent)) {\n      parent[+lastKey] = mapper(parent[+lastKey]);\n    } else if ((0, _is.isPlainObject)(parent)) {\n      parent[lastKey] = mapper(parent[lastKey]);\n    }\n    if ((0, _is.isSet)(parent)) {\n      var oldValue = getNthKey(parent, +lastKey);\n      var newValue = mapper(oldValue);\n      if (oldValue !== newValue) {\n        parent.delete(oldValue);\n        parent.add(newValue);\n      }\n    }\n    if ((0, _is.isMap)(parent)) {\n      var _row2 = +path[path.length - 2];\n      var keyToRow = getNthKey(parent, _row2);\n      var _type = +lastKey === 0 ? 'key' : 'value';\n      switch (_type) {\n        case 'key':\n          {\n            var newKey = mapper(keyToRow);\n            parent.set(newKey, parent.get(keyToRow));\n            if (newKey !== keyToRow) {\n              parent.delete(keyToRow);\n            }\n            break;\n          }\n        case 'value':\n          {\n            parent.set(keyToRow, mapper(parent.get(keyToRow)));\n            break;\n          }\n      }\n    }\n    return object;\n  };\n  exports.setDeep = setDeep;\n});","lineCount":125,"map":[[6,2,1,0],[6,6,1,0,"_is"],[6,9,1,0],[6,12,1,0,"require"],[6,19,1,0],[6,20,1,0,"_dependencyMap"],[6,34,1,0],[7,2,2,0],[7,6,2,0,"_util"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,3,0],[8,6,3,6,"getNthKey"],[8,15,3,15],[8,18,3,18,"getNthKey"],[8,19,3,19,"value"],[8,24,3,24],[8,26,3,26,"n"],[8,27,3,27],[8,32,3,32],[9,4,4,4],[9,8,4,8,"n"],[9,9,4,9],[9,12,4,12,"value"],[9,17,4,17],[9,18,4,18,"size"],[9,22,4,22],[9,24,5,8],[9,30,5,14],[9,34,5,18,"Error"],[9,39,5,23],[9,40,5,24],[9,61,5,45],[9,62,5,46],[10,4,6,4],[10,8,6,10,"keys"],[10,12,6,14],[10,15,6,17,"value"],[10,20,6,22],[10,21,6,23,"keys"],[10,25,6,27],[10,26,6,28],[10,27,6,29],[11,4,7,4],[11,11,7,11,"n"],[11,12,7,12],[11,15,7,15],[11,16,7,16],[11,18,7,18],[12,6,8,8,"keys"],[12,10,8,12],[12,11,8,13,"next"],[12,15,8,17],[12,16,8,18],[12,17,8,19],[13,6,9,8,"n"],[13,7,9,9],[13,9,9,11],[14,4,10,4],[15,4,11,4],[15,11,11,11,"keys"],[15,15,11,15],[15,16,11,16,"next"],[15,20,11,20],[15,21,11,21],[15,22,11,22],[15,23,11,23,"value"],[15,28,11,28],[16,2,12,0],[16,3,12,1],[17,2,13,0],[17,11,13,9,"validatePath"],[17,23,13,21,"validatePath"],[17,24,13,22,"path"],[17,28,13,26],[17,30,13,28],[18,4,14,4],[18,8,14,8],[18,12,14,8,"includes"],[18,26,14,16],[18,28,14,17,"path"],[18,32,14,21],[18,34,14,23],[18,45,14,34],[18,46,14,35],[18,48,14,37],[19,6,15,8],[19,12,15,14],[19,16,15,18,"Error"],[19,21,15,23],[19,22,15,24],[19,62,15,64],[19,63,15,65],[20,4,16,4],[21,4,17,4],[21,8,17,8],[21,12,17,8,"includes"],[21,26,17,16],[21,28,17,17,"path"],[21,32,17,21],[21,34,17,23],[21,45,17,34],[21,46,17,35],[21,48,17,37],[22,6,18,8],[22,12,18,14],[22,16,18,18,"Error"],[22,21,18,23],[22,22,18,24],[22,62,18,64],[22,63,18,65],[23,4,19,4],[24,4,20,4],[24,8,20,8],[24,12,20,8,"includes"],[24,26,20,16],[24,28,20,17,"path"],[24,32,20,21],[24,34,20,23],[24,47,20,36],[24,48,20,37],[24,50,20,39],[25,6,21,8],[25,12,21,14],[25,16,21,18,"Error"],[25,21,21,23],[25,22,21,24],[25,64,21,66],[25,65,21,67],[26,4,22,4],[27,2,23,0],[28,2,24,7],[28,6,24,13,"getDeep"],[28,13,24,20],[28,16,24,23,"getDeep"],[28,17,24,24,"object"],[28,23,24,30],[28,25,24,32,"path"],[28,29,24,36],[28,34,24,41],[29,4,25,4,"validatePath"],[29,16,25,16],[29,17,25,17,"path"],[29,21,25,21],[29,22,25,22],[30,4,26,4],[30,9,26,9],[30,13,26,13,"i"],[30,14,26,14],[30,17,26,17],[30,18,26,18],[30,20,26,20,"i"],[30,21,26,21],[30,24,26,24,"path"],[30,28,26,28],[30,29,26,29,"length"],[30,35,26,35],[30,37,26,37,"i"],[30,38,26,38],[30,40,26,40],[30,42,26,42],[31,6,27,8],[31,10,27,14,"key"],[31,13,27,17],[31,16,27,20,"path"],[31,20,27,24],[31,21,27,25,"i"],[31,22,27,26],[31,23,27,27],[32,6,28,8],[32,10,28,12],[32,14,28,12,"isSet"],[32,23,28,17],[32,25,28,18,"object"],[32,31,28,24],[32,32,28,25],[32,34,28,27],[33,8,29,12,"object"],[33,14,29,18],[33,17,29,21,"getNthKey"],[33,26,29,30],[33,27,29,31,"object"],[33,33,29,37],[33,35,29,39],[33,36,29,40,"key"],[33,39,29,43],[33,40,29,44],[34,6,30,8],[34,7,30,9],[34,13,31,13],[34,17,31,17],[34,21,31,17,"isMap"],[34,30,31,22],[34,32,31,23,"object"],[34,38,31,29],[34,39,31,30],[34,41,31,32],[35,8,32,12],[35,12,32,18,"row"],[35,15,32,21],[35,18,32,24],[35,19,32,25,"key"],[35,22,32,28],[36,8,33,12],[36,12,33,18,"type"],[36,16,33,22],[36,19,33,25],[36,20,33,26,"path"],[36,24,33,30],[36,25,33,31],[36,27,33,33,"i"],[36,28,33,34],[36,29,33,35],[36,34,33,40],[36,35,33,41],[36,38,33,44],[36,43,33,49],[36,46,33,52],[36,53,33,59],[37,8,34,12],[37,12,34,18,"keyOfRow"],[37,20,34,26],[37,23,34,29,"getNthKey"],[37,32,34,38],[37,33,34,39,"object"],[37,39,34,45],[37,41,34,47,"row"],[37,44,34,50],[37,45,34,51],[38,8,35,12],[38,16,35,20,"type"],[38,20,35,24],[39,10,36,16],[39,15,36,21],[39,20,36,26],[40,12,37,20,"object"],[40,18,37,26],[40,21,37,29,"keyOfRow"],[40,29,37,37],[41,12,38,20],[42,10,39,16],[42,15,39,21],[42,22,39,28],[43,12,40,20,"object"],[43,18,40,26],[43,21,40,29,"object"],[43,27,40,35],[43,28,40,36,"get"],[43,31,40,39],[43,32,40,40,"keyOfRow"],[43,40,40,48],[43,41,40,49],[44,12,41,20],[45,8,42,12],[46,6,43,8],[46,7,43,9],[46,13,44,13],[47,8,45,12,"object"],[47,14,45,18],[47,17,45,21,"object"],[47,23,45,27],[47,24,45,28,"key"],[47,27,45,31],[47,28,45,32],[48,6,46,8],[49,4,47,4],[50,4,48,4],[50,11,48,11,"object"],[50,17,48,17],[51,2,49,0],[51,3,49,1],[52,2,49,2,"exports"],[52,9,49,2],[52,10,49,2,"getDeep"],[52,17,49,2],[52,20,49,2,"getDeep"],[52,27,49,2],[53,2,50,7],[53,6,50,13,"setDeep"],[53,13,50,20],[53,16,50,23,"setDeep"],[53,17,50,24,"object"],[53,23,50,30],[53,25,50,32,"path"],[53,29,50,36],[53,31,50,38,"mapper"],[53,37,50,44],[53,42,50,49],[54,4,51,4,"validatePath"],[54,16,51,16],[54,17,51,17,"path"],[54,21,51,21],[54,22,51,22],[55,4,52,4],[55,8,52,8,"path"],[55,12,52,12],[55,13,52,13,"length"],[55,19,52,19],[55,24,52,24],[55,25,52,25],[55,27,52,27],[56,6,53,8],[56,13,53,15,"mapper"],[56,19,53,21],[56,20,53,22,"object"],[56,26,53,28],[56,27,53,29],[57,4,54,4],[58,4,55,4],[58,8,55,8,"parent"],[58,14,55,14],[58,17,55,17,"object"],[58,23,55,23],[59,4,56,4],[59,9,56,9],[59,13,56,13,"i"],[59,14,56,14],[59,17,56,17],[59,18,56,18],[59,20,56,20,"i"],[59,21,56,21],[59,24,56,24,"path"],[59,28,56,28],[59,29,56,29,"length"],[59,35,56,35],[59,38,56,38],[59,39,56,39],[59,41,56,41,"i"],[59,42,56,42],[59,44,56,44],[59,46,56,46],[60,6,57,8],[60,10,57,14,"key"],[60,13,57,17],[60,16,57,20,"path"],[60,20,57,24],[60,21,57,25,"i"],[60,22,57,26],[60,23,57,27],[61,6,58,8],[61,10,58,12],[61,14,58,12,"isArray"],[61,25,58,19],[61,27,58,20,"parent"],[61,33,58,26],[61,34,58,27],[61,36,58,29],[62,8,59,12],[62,12,59,18,"index"],[62,17,59,23],[62,20,59,26],[62,21,59,27,"key"],[62,24,59,30],[63,8,60,12,"parent"],[63,14,60,18],[63,17,60,21,"parent"],[63,23,60,27],[63,24,60,28,"index"],[63,29,60,33],[63,30,60,34],[64,6,61,8],[64,7,61,9],[64,13,62,13],[64,17,62,17],[64,21,62,17,"isPlainObject"],[64,38,62,30],[64,40,62,31,"parent"],[64,46,62,37],[64,47,62,38],[64,49,62,40],[65,8,63,12,"parent"],[65,14,63,18],[65,17,63,21,"parent"],[65,23,63,27],[65,24,63,28,"key"],[65,27,63,31],[65,28,63,32],[66,6,64,8],[66,7,64,9],[66,13,65,13],[66,17,65,17],[66,21,65,17,"isSet"],[66,30,65,22],[66,32,65,23,"parent"],[66,38,65,29],[66,39,65,30],[66,41,65,32],[67,8,66,12],[67,12,66,18,"row"],[67,15,66,21],[67,18,66,24],[67,19,66,25,"key"],[67,22,66,28],[68,8,67,12,"parent"],[68,14,67,18],[68,17,67,21,"getNthKey"],[68,26,67,30],[68,27,67,31,"parent"],[68,33,67,37],[68,35,67,39,"row"],[68,38,67,42],[68,39,67,43],[69,6,68,8],[69,7,68,9],[69,13,69,13],[69,17,69,17],[69,21,69,17,"isMap"],[69,30,69,22],[69,32,69,23,"parent"],[69,38,69,29],[69,39,69,30],[69,41,69,32],[70,8,70,12],[70,12,70,18,"isEnd"],[70,17,70,23],[70,20,70,26,"i"],[70,21,70,27],[70,26,70,32,"path"],[70,30,70,36],[70,31,70,37,"length"],[70,37,70,43],[70,40,70,46],[70,41,70,47],[71,8,71,12],[71,12,71,16,"isEnd"],[71,17,71,21],[71,19,71,23],[72,10,72,16],[73,8,73,12],[74,8,74,12],[74,12,74,18,"row"],[74,16,74,21],[74,19,74,24],[74,20,74,25,"key"],[74,23,74,28],[75,8,75,12],[75,12,75,18,"type"],[75,16,75,22],[75,19,75,25],[75,20,75,26,"path"],[75,24,75,30],[75,25,75,31],[75,27,75,33,"i"],[75,28,75,34],[75,29,75,35],[75,34,75,40],[75,35,75,41],[75,38,75,44],[75,43,75,49],[75,46,75,52],[75,53,75,59],[76,8,76,12],[76,12,76,18,"keyOfRow"],[76,20,76,26],[76,23,76,29,"getNthKey"],[76,32,76,38],[76,33,76,39,"parent"],[76,39,76,45],[76,41,76,47,"row"],[76,45,76,50],[76,46,76,51],[77,8,77,12],[77,16,77,20,"type"],[77,20,77,24],[78,10,78,16],[78,15,78,21],[78,20,78,26],[79,12,79,20,"parent"],[79,18,79,26],[79,21,79,29,"keyOfRow"],[79,29,79,37],[80,12,80,20],[81,10,81,16],[81,15,81,21],[81,22,81,28],[82,12,82,20,"parent"],[82,18,82,26],[82,21,82,29,"parent"],[82,27,82,35],[82,28,82,36,"get"],[82,31,82,39],[82,32,82,40,"keyOfRow"],[82,40,82,48],[82,41,82,49],[83,12,83,20],[84,8,84,12],[85,6,85,8],[86,4,86,4],[87,4,87,4],[87,8,87,10,"lastKey"],[87,15,87,17],[87,18,87,20,"path"],[87,22,87,24],[87,23,87,25,"path"],[87,27,87,29],[87,28,87,30,"length"],[87,34,87,36],[87,37,87,39],[87,38,87,40],[87,39,87,41],[88,4,88,4],[88,8,88,8],[88,12,88,8,"isArray"],[88,23,88,15],[88,25,88,16,"parent"],[88,31,88,22],[88,32,88,23],[88,34,88,25],[89,6,89,8,"parent"],[89,12,89,14],[89,13,89,15],[89,14,89,16,"lastKey"],[89,21,89,23],[89,22,89,24],[89,25,89,27,"mapper"],[89,31,89,33],[89,32,89,34,"parent"],[89,38,89,40],[89,39,89,41],[89,40,89,42,"lastKey"],[89,47,89,49],[89,48,89,50],[89,49,89,51],[90,4,90,4],[90,5,90,5],[90,11,91,9],[90,15,91,13],[90,19,91,13,"isPlainObject"],[90,36,91,26],[90,38,91,27,"parent"],[90,44,91,33],[90,45,91,34],[90,47,91,36],[91,6,92,8,"parent"],[91,12,92,14],[91,13,92,15,"lastKey"],[91,20,92,22],[91,21,92,23],[91,24,92,26,"mapper"],[91,30,92,32],[91,31,92,33,"parent"],[91,37,92,39],[91,38,92,40,"lastKey"],[91,45,92,47],[91,46,92,48],[91,47,92,49],[92,4,93,4],[93,4,94,4],[93,8,94,8],[93,12,94,8,"isSet"],[93,21,94,13],[93,23,94,14,"parent"],[93,29,94,20],[93,30,94,21],[93,32,94,23],[94,6,95,8],[94,10,95,14,"oldValue"],[94,18,95,22],[94,21,95,25,"getNthKey"],[94,30,95,34],[94,31,95,35,"parent"],[94,37,95,41],[94,39,95,43],[94,40,95,44,"lastKey"],[94,47,95,51],[94,48,95,52],[95,6,96,8],[95,10,96,14,"newValue"],[95,18,96,22],[95,21,96,25,"mapper"],[95,27,96,31],[95,28,96,32,"oldValue"],[95,36,96,40],[95,37,96,41],[96,6,97,8],[96,10,97,12,"oldValue"],[96,18,97,20],[96,23,97,25,"newValue"],[96,31,97,33],[96,33,97,35],[97,8,98,12,"parent"],[97,14,98,18],[97,15,98,19,"delete"],[97,21,98,25],[97,22,98,26,"oldValue"],[97,30,98,34],[97,31,98,35],[98,8,99,12,"parent"],[98,14,99,18],[98,15,99,19,"add"],[98,18,99,22],[98,19,99,23,"newValue"],[98,27,99,31],[98,28,99,32],[99,6,100,8],[100,4,101,4],[101,4,102,4],[101,8,102,8],[101,12,102,8,"isMap"],[101,21,102,13],[101,23,102,14,"parent"],[101,29,102,20],[101,30,102,21],[101,32,102,23],[102,6,103,8],[102,10,103,14,"row"],[102,15,103,17],[102,18,103,20],[102,19,103,21,"path"],[102,23,103,25],[102,24,103,26,"path"],[102,28,103,30],[102,29,103,31,"length"],[102,35,103,37],[102,38,103,40],[102,39,103,41],[102,40,103,42],[103,6,104,8],[103,10,104,14,"keyToRow"],[103,18,104,22],[103,21,104,25,"getNthKey"],[103,30,104,34],[103,31,104,35,"parent"],[103,37,104,41],[103,39,104,43,"row"],[103,44,104,46],[103,45,104,47],[104,6,105,8],[104,10,105,14,"type"],[104,15,105,18],[104,18,105,21],[104,19,105,22,"lastKey"],[104,26,105,29],[104,31,105,34],[104,32,105,35],[104,35,105,38],[104,40,105,43],[104,43,105,46],[104,50,105,53],[105,6,106,8],[105,14,106,16,"type"],[105,19,106,20],[106,8,107,12],[106,13,107,17],[106,18,107,22],[107,10,107,24],[108,12,108,16],[108,16,108,22,"newKey"],[108,22,108,28],[108,25,108,31,"mapper"],[108,31,108,37],[108,32,108,38,"keyToRow"],[108,40,108,46],[108,41,108,47],[109,12,109,16,"parent"],[109,18,109,22],[109,19,109,23,"set"],[109,22,109,26],[109,23,109,27,"newKey"],[109,29,109,33],[109,31,109,35,"parent"],[109,37,109,41],[109,38,109,42,"get"],[109,41,109,45],[109,42,109,46,"keyToRow"],[109,50,109,54],[109,51,109,55],[109,52,109,56],[110,12,110,16],[110,16,110,20,"newKey"],[110,22,110,26],[110,27,110,31,"keyToRow"],[110,35,110,39],[110,37,110,41],[111,14,111,20,"parent"],[111,20,111,26],[111,21,111,27,"delete"],[111,27,111,33],[111,28,111,34,"keyToRow"],[111,36,111,42],[111,37,111,43],[112,12,112,16],[113,12,113,16],[114,10,114,12],[115,8,115,12],[115,13,115,17],[115,20,115,24],[116,10,115,26],[117,12,116,16,"parent"],[117,18,116,22],[117,19,116,23,"set"],[117,22,116,26],[117,23,116,27,"keyToRow"],[117,31,116,35],[117,33,116,37,"mapper"],[117,39,116,43],[117,40,116,44,"parent"],[117,46,116,50],[117,47,116,51,"get"],[117,50,116,54],[117,51,116,55,"keyToRow"],[117,59,116,63],[117,60,116,64],[117,61,116,65],[117,62,116,66],[118,12,117,16],[119,10,118,12],[120,6,119,8],[121,4,120,4],[122,4,121,4],[122,11,121,11,"object"],[122,17,121,17],[123,2,122,0],[123,3,122,1],[124,2,122,2,"exports"],[124,9,122,2],[124,10,122,2,"setDeep"],[124,17,122,2],[124,20,122,2,"setDeep"],[124,27,122,2],[125,0,122,2],[125,3]],"functionMap":{"names":["<global>","getNthKey","validatePath","getDeep","setDeep"],"mappings":"AAA;kBCE;CDS;AEC;CFU;uBGC;CHyB;uBIC;CJwE"}},"type":"js/module"}]}