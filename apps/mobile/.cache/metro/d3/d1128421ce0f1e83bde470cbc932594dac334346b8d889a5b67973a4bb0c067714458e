{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":17,"index":159},"end":{"line":4,"column":52,"index":194}}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":28,"index":224},"end":{"line":5,"column":56,"index":252}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":35,"index":289},"end":{"line":6,"column":72,"index":326}}],"key":"LF4arccvrvx2h7gjlFGN9GGMwEE="}},{"name":"./link/linking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}}],"key":"qAkeFDg1XiLn62LRw0bLpv/nYbc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getLinkingConfig = exports.getNavigationConfig = void 0;\n  var native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  var expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  var getReactNavigationConfig_1 = require(_dependencyMap[2], \"./getReactNavigationConfig\");\n  var linking_1 = require(_dependencyMap[3], \"./link/linking\");\n  function getNavigationConfig(routes) {\n    var metaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly);\n  }\n  exports.getNavigationConfig = getNavigationConfig;\n  function getLinkingConfig(store, routes, context) {\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$metaOnly = _ref.metaOnly,\n      metaOnly = _ref$metaOnly === void 0 ? true : _ref$metaOnly,\n      serverUrl = _ref.serverUrl;\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    var hasCachedInitialUrl = false;\n    var initialUrl;\n    var nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    var nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    return {\n      prefixes: [],\n      config: getNavigationConfig(routes, metaOnly),\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              if (typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.addEventListener)(nativeLinking),\n      getStateFromPath: linking_1.getStateFromPath.bind(store),\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, {\n          screens: {},\n          ...this.config,\n          ...options\n        }) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n  exports.getLinkingConfig = getLinkingConfig;\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getLinkingConfig"],[7,26,3,24],[7,29,3,27,"exports"],[7,36,3,34],[7,37,3,35,"getNavigationConfig"],[7,56,3,54],[7,59,3,57],[7,64,3,62],[7,65,3,63],[8,2,4,0],[8,6,4,6,"native_1"],[8,14,4,14],[8,17,4,17,"require"],[8,24,4,24],[8,25,4,24,"_dependencyMap"],[8,39,4,24],[8,70,4,51],[8,71,4,52],[9,2,5,0],[9,6,5,6,"expo_modules_core_1"],[9,25,5,25],[9,28,5,28,"require"],[9,35,5,35],[9,36,5,35,"_dependencyMap"],[9,50,5,35],[9,74,5,55],[9,75,5,56],[10,2,6,0],[10,6,6,6,"getReactNavigationConfig_1"],[10,32,6,32],[10,35,6,35,"require"],[10,42,6,42],[10,43,6,42,"_dependencyMap"],[10,57,6,42],[10,90,6,71],[10,91,6,72],[11,2,7,0],[11,6,7,6,"linking_1"],[11,15,7,15],[11,18,7,18,"require"],[11,25,7,25],[11,26,7,25,"_dependencyMap"],[11,40,7,25],[11,61,7,42],[11,62,7,43],[12,2,8,0],[12,11,8,9,"getNavigationConfig"],[12,30,8,28,"getNavigationConfig"],[12,31,8,29,"routes"],[12,37,8,35],[12,39,8,54],[13,4,8,54],[13,8,8,37,"metaOnly"],[13,16,8,45],[13,19,8,45,"arguments"],[13,28,8,45],[13,29,8,45,"length"],[13,35,8,45],[13,43,8,45,"arguments"],[13,52,8,45],[13,60,8,45,"undefined"],[13,69,8,45],[13,72,8,45,"arguments"],[13,81,8,45],[13,87,8,48],[13,91,8,52],[14,4,9,4],[14,11,9,11],[14,12,9,12],[14,13,9,13],[14,15,9,15,"getReactNavigationConfig_1"],[14,41,9,41],[14,42,9,42,"getReactNavigationConfig"],[14,66,9,66],[14,68,9,68,"routes"],[14,74,9,74],[14,76,9,76,"metaOnly"],[14,84,9,84],[14,85,9,85],[15,2,10,0],[16,2,11,0,"exports"],[16,9,11,7],[16,10,11,8,"getNavigationConfig"],[16,29,11,27],[16,32,11,30,"getNavigationConfig"],[16,51,11,49],[17,2,12,0],[17,11,12,9,"getLinkingConfig"],[17,27,12,25,"getLinkingConfig"],[17,28,12,26,"store"],[17,33,12,31],[17,35,12,33,"routes"],[17,41,12,39],[17,43,12,41,"context"],[17,50,12,48],[17,52,12,87],[18,4,12,87],[18,8,12,87,"_ref"],[18,12,12,87],[18,15,12,87,"arguments"],[18,24,12,87],[18,25,12,87,"length"],[18,31,12,87],[18,39,12,87,"arguments"],[18,48,12,87],[18,56,12,87,"undefined"],[18,65,12,87],[18,68,12,87,"arguments"],[18,77,12,87],[18,83,12,83],[18,84,12,84],[18,85,12,85],[19,6,12,85,"_ref$metaOnly"],[19,19,12,85],[19,22,12,85,"_ref"],[19,26,12,85],[19,27,12,52,"metaOnly"],[19,35,12,60],[20,6,12,52,"metaOnly"],[20,14,12,60],[20,17,12,60,"_ref$metaOnly"],[20,30,12,60],[20,44,12,63],[20,48,12,67],[20,51,12,67,"_ref$metaOnly"],[20,64,12,67],[21,6,12,69,"serverUrl"],[21,15,12,78],[21,18,12,78,"_ref"],[21,22,12,78],[21,23,12,69,"serverUrl"],[21,32,12,78],[22,4,13,4],[23,4,14,4],[23,8,14,8,"hasCachedInitialUrl"],[23,27,14,27],[23,30,14,30],[23,35,14,35],[24,4,15,4],[24,8,15,8,"initialUrl"],[24,18,15,18],[25,4,16,4],[25,8,16,10,"nativeLinkingKey"],[25,24,16,26],[25,27,16,29,"context"],[25,34,16,36],[25,35,17,9,"keys"],[25,39,17,13],[25,40,17,14],[25,41,17,15],[25,42,18,9,"find"],[25,46,18,13],[25,47,18,15,"key"],[25,50,18,18],[25,54,18,23,"key"],[25,57,18,26],[25,58,18,27,"match"],[25,63,18,32],[25,64,18,33],[25,96,18,65],[25,97,18,66],[25,98,18,67],[26,4,19,4],[26,8,19,10,"nativeLinking"],[26,21,19,23],[26,24,19,26,"nativeLinkingKey"],[26,40,19,42],[26,43,20,10,"context"],[26,50,20,17],[26,51,20,18,"nativeLinkingKey"],[26,67,20,34],[26,68,20,35],[26,71,21,10,"undefined"],[26,80,21,19],[27,4,22,4],[27,11,22,11],[28,6,23,8,"prefixes"],[28,14,23,16],[28,16,23,18],[28,18,23,20],[29,6,24,8,"config"],[29,12,24,14],[29,14,24,16,"getNavigationConfig"],[29,33,24,35],[29,34,24,36,"routes"],[29,40,24,42],[29,42,24,44,"metaOnly"],[29,50,24,52],[29,51,24,53],[30,6,25,8],[31,6,26,8],[32,6,27,8],[33,6,28,8],[34,6,29,8],[35,6,30,8,"getInitialURL"],[35,19,30,21,"getInitialURL"],[35,20,30,21],[35,22,30,24],[36,8,31,12],[37,8,32,12],[38,8,33,12],[38,12,33,16],[38,13,33,17,"hasCachedInitialUrl"],[38,32,33,36],[38,34,33,38],[39,10,34,16],[39,14,34,20,"expo_modules_core_1"],[39,33,34,39],[39,34,34,40,"Platform"],[39,42,34,48],[39,43,34,49,"OS"],[39,45,34,51],[39,50,34,56],[39,55,34,61],[39,57,34,63],[40,12,35,20,"initialUrl"],[40,22,35,30],[40,25,35,33,"serverUrl"],[40,34,35,42],[40,38,35,46],[40,39,35,47],[40,40,35,48],[40,42,35,50,"linking_1"],[40,51,35,59],[40,52,35,60,"getInitialURL"],[40,65,35,73],[40,67,35,75],[40,68,35,76],[41,10,36,16],[41,11,36,17],[41,17,37,21],[42,12,38,20,"initialUrl"],[42,22,38,30],[42,25,38,33,"serverUrl"],[42,34,38,42],[42,38,38,46],[42,39,38,47],[42,40,38,48],[42,42,38,50,"linking_1"],[42,51,38,59],[42,52,38,60,"getInitialURL"],[42,65,38,73],[42,67,38,75],[42,68,38,76],[43,12,39,20],[43,16,39,24],[43,23,39,31,"initialUrl"],[43,33,39,41],[43,38,39,46],[43,46,39,54],[43,48,39,56],[44,14,40,24],[44,18,40,28],[44,25,40,35,"nativeLinking"],[44,38,40,48],[44,40,40,50,"redirectSystemPath"],[44,58,40,68],[44,63,40,73],[44,73,40,83],[44,75,40,85],[45,16,41,28,"initialUrl"],[45,26,41,38],[45,29,41,41,"nativeLinking"],[45,42,41,54],[45,43,41,55,"redirectSystemPath"],[45,61,41,73],[45,62,41,74],[46,18,41,76,"path"],[46,22,41,80],[46,24,41,82,"initialUrl"],[46,34,41,92],[47,18,41,94,"initial"],[47,25,41,101],[47,27,41,103],[48,16,41,108],[48,17,41,109],[48,18,41,110],[49,14,42,24],[50,12,43,20],[50,13,43,21],[50,19,44,25],[50,23,44,29,"initialUrl"],[50,33,44,39],[50,35,44,41],[51,14,45,24,"initialUrl"],[51,24,45,34],[51,27,45,37,"initialUrl"],[51,37,45,47],[51,38,45,48,"then"],[51,42,45,52],[51,43,45,54,"url"],[51,46,45,57],[51,50,45,62],[52,16,46,28],[52,20,46,32,"url"],[52,23,46,35],[52,27,46,39],[52,34,46,46,"nativeLinking"],[52,47,46,59],[52,49,46,61,"redirectSystemPath"],[52,67,46,79],[52,72,46,84],[52,82,46,94],[52,84,46,96],[53,18,47,32],[53,25,47,39,"nativeLinking"],[53,38,47,52],[53,39,47,53,"redirectSystemPath"],[53,57,47,71],[53,58,47,72],[54,20,47,74,"path"],[54,24,47,78],[54,26,47,80,"url"],[54,29,47,83],[55,20,47,85,"initial"],[55,27,47,92],[55,29,47,94],[56,18,47,99],[56,19,47,100],[56,20,47,101],[57,16,48,28],[58,16,49,28],[58,23,49,35,"url"],[58,26,49,38],[59,14,50,24],[59,15,50,25],[59,16,50,26],[60,12,51,20],[61,10,52,16],[62,10,53,16,"hasCachedInitialUrl"],[62,29,53,35],[62,32,53,38],[62,36,53,42],[63,8,54,12],[64,8,55,12],[64,15,55,19,"initialUrl"],[64,25,55,29],[65,6,56,8],[65,7,56,9],[66,6,57,8,"subscribe"],[66,15,57,17],[66,17,57,19],[66,18,57,20],[66,19,57,21],[66,21,57,23,"linking_1"],[66,30,57,32],[66,31,57,33,"addEventListener"],[66,47,57,49],[66,49,57,51,"nativeLinking"],[66,62,57,64],[66,63,57,65],[67,6,58,8,"getStateFromPath"],[67,22,58,24],[67,24,58,26,"linking_1"],[67,33,58,35],[67,34,58,36,"getStateFromPath"],[67,50,58,52],[67,51,58,53,"bind"],[67,55,58,57],[67,56,58,58,"store"],[67,61,58,63],[67,62,58,64],[68,6,59,8,"getPathFromState"],[68,22,59,24,"getPathFromState"],[68,23,59,25,"state"],[68,28,59,30],[68,30,59,32,"options"],[68,37,59,39],[68,39,59,41],[69,8,60,12],[69,15,60,20],[69,16,60,21],[69,17,60,22],[69,19,60,24,"linking_1"],[69,28,60,33],[69,29,60,34,"getPathFromState"],[69,45,60,50],[69,47,60,52,"state"],[69,52,60,57],[69,54,60,59],[70,10,61,16,"screens"],[70,17,61,23],[70,19,61,25],[70,20,61,26],[70,21,61,27],[71,10,62,16],[71,13,62,19],[71,17,62,23],[71,18,62,24,"config"],[71,24,62,30],[72,10,63,16],[72,13,63,19,"options"],[73,8,64,12],[73,9,64,13],[73,10,64,14],[73,14,64,18],[73,17,64,21],[74,6,65,8],[74,7,65,9],[75,6,66,8],[76,6,67,8],[77,6,68,8,"getActionFromState"],[77,24,68,26],[77,26,68,28,"native_1"],[77,34,68,36],[77,35,68,37,"getActionFromState"],[78,4,69,4],[78,5,69,5],[79,2,70,0],[80,2,71,0,"exports"],[80,9,71,7],[80,10,71,8,"getLinkingConfig"],[80,26,71,24],[80,29,71,27,"getLinkingConfig"],[80,45,71,43],[81,0,71,44],[81,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getPathFromState"],"mappings":"AAA;ACO;CDE;AEE;cCM,oDD;QEY;qDCe;yBDK;SFM;QIG;SJM;CFK"}},"type":"js/module"}]}