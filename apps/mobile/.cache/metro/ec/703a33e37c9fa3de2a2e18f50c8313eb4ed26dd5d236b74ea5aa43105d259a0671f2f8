{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":485,"column":48,"index":20806}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":485,"column":48,"index":20806}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":485,"column":48,"index":20806}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-is","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"Kh8377WtECxkHj9j3Lmfo9R8et4="}},{"name":"use-latest-callback","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"Y37UDlHqFWGsIoaqIV2lsupH1AM="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"gUWwtN3cGtPFA39/AfK87dLMoDw="}},{"name":"./Group.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"MJzpBsNh6Xmuq5gZYt5R0gjFCC0="}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"Vb50P4WVkAnizz+ENIDrg6CJX4g="}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"r92Pd29+9uUvlHu+K/XAzxqzFrQ="}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"fvb0BcCeN3mgZOO7XIAQIk1mles="}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"jk0qVIUl5f0mZv0RFSM44Eb40Bo="}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"s3tKImF4x81CxrhRnhZSIjHl48M="}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"45SPQoFjK3sUjTZFqk2Y4agFvFk="}},{"name":"./Screen.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"4AmuaFUSUGP0K1dvEZyRNAwexKU="}},{"name":"./types.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"60uxQGokIVE04vR1RPOTA2bTDdM="}},{"name":"./useChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"FO+VwKTKNPUgOVmAfSG+UGPnET0="}},{"name":"./useComponent.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":49,"index":867}}],"key":"Y5xAZFHu0jypGToZbfmlrWy1SgE="}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":868},"end":{"line":19,"column":57,"index":925}}],"key":"tzY2bQtMnt7XLhuL/OlR4pmmhZc="}},{"name":"./useDescriptors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":926},"end":{"line":20,"column":53,"index":979}}],"key":"HhfvEZqKuY9HOwhIIOTEjGttH8Y="}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":980},"end":{"line":21,"column":55,"index":1035}}],"key":"BYS1cAgkQBqwT1M7oWxnCjlR/wY="}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":1036},"end":{"line":22,"column":93,"index":1129}}],"key":"weYmoyL/DEblcXDY3zs7Q5CbgHE="}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":1130},"end":{"line":23,"column":53,"index":1183}}],"key":"5Oyhm1kG2EgqR0gx2Pklgk5oawE="}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":1184},"end":{"line":24,"column":72,"index":1256}}],"key":"W03y7JxvNp1uZoBb1c7L4Qdz13U="}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":1257},"end":{"line":25,"column":69,"index":1326}}],"key":"Utbfur1yyRTHmnJD8IptXCXqfxA="}},{"name":"./useLazyValue.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":1327},"end":{"line":26,"column":49,"index":1376}}],"key":"Ke63sDSZ+3As+jICPBrawHNhIeA="}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":1377},"end":{"line":27,"column":65,"index":1442}}],"key":"6Rst5U3d9V6eo+ZGxpcNX0Xdx2M="}},{"name":"./useOnAction.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":28,"column":0,"index":1443},"end":{"line":28,"column":47,"index":1490}}],"key":"L5EcEtqvsTSR0oSKNg1D3Svf9ok="}},{"name":"./useOnGetState.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":29,"column":0,"index":1491},"end":{"line":29,"column":51,"index":1542}}],"key":"22cB4vxphxCAhpwncmrKt+jDClM="}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":1543},"end":{"line":30,"column":55,"index":1598}}],"key":"eHoDHZjOg6CrFEKf6JDIwwFuGY0="}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":0,"index":1599},"end":{"line":31,"column":65,"index":1664}}],"key":"KvruacEZ7pRoYaD+bHWqoQIxwuo="}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":32,"column":0,"index":1665},"end":{"line":32,"column":59,"index":1724}}],"key":"loWFvvlxo4F+3fT6U1iOJcrLX8M="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":35,"column":0,"index":1771},"end":{"line":35,"column":48,"index":1819}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _routers = require(_dependencyMap[3], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[4], \"react\"));\n  var _reactIs = require(_dependencyMap[5], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[6], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[7], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[8], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[9], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[10], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[11], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[12], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[13], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[14], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[15], \"./Screen.js\");\n  var _types = require(_dependencyMap[16], \"./types.js\");\n  var _useChildListeners2 = require(_dependencyMap[17], \"./useChildListeners.js\");\n  var _useComponent = require(_dependencyMap[18], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[19], \"./useCurrentRender.js\");\n  var _useDescriptors2 = require(_dependencyMap[20], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[21], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[22], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[23], \"./useFocusEvents.js\");\n  var _useIsomorphicLayoutEffect = require(_dependencyMap[24], \"./useIsomorphicLayoutEffect\");\n  var _useKeyedChildListeners = require(_dependencyMap[25], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[26], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[27], \"./useNavigationHelpers.js\");\n  var _useOnAction = require(_dependencyMap[28], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[29], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[30], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[31], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[32], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[33], \"react/jsx-runtime\");\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\"]; // This is to make TypeScript compiler happy\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  _types.PrivateValueStore;\n  var isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    var configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === _Screen.Screen) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (child.type === React.Fragment || child.type === _Group.Group) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        var _config$props = config.props,\n          name = _config$props.name,\n          children = _config$props.children,\n          component = _config$props.component,\n          getComponent = _config$props.getComponent;\n        if (typeof name !== 'string' || !name) {\n          throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n        }\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    var route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      rest = (0, _objectWithoutProperties2.default)(options, _excluded);\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      return createRouter(rest);\n    });\n    var screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(config => config.props.name);\n    var routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce((acc, curr) => {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    var isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    var _React$useContext = React.useContext(_NavigationStateContext.NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(() => {\n        var initialRouteParamList = routeNames.reduce((acc, curr) => {\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n            ...initialParams,\n            ...initialParamsFromParams\n          } : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n          return [router.getInitialState({\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), true];\n        } else {\n          var stateFromParams;\n          if (route?.params?.state != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams ?? currentState, {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      var navigatorStateForNextRouteNamesChange = options.UNSTABLE_getStateForRouteNamesChange?.(state);\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = navigatorStateForNextRouteNamesChange ?\n      // @ts-expect-error this is ok\n      router.getRehydratedState(navigatorStateForNextRouteNamesChange, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(() => {\n      var currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      })].map(listeners => {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    var _useChildListeners = (0, _useChildListeners2.useChildListeners)(),\n      childListeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n    var _useKeyedChildListene = (0, _useKeyedChildListeners.useKeyedChildListeners)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n    var onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    var navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _useDescriptors = (0, _useDescriptors2.useDescriptors)({\n        state,\n        screens,\n        navigation,\n        screenOptions,\n        screenLayout,\n        onAction,\n        getState,\n        setState,\n        onRouteFocus,\n        addListener,\n        addKeyedListener,\n        router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter\n      }),\n      describe = _useDescriptors.describe,\n      descriptors = _useDescriptors.descriptors;\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    var NavigationContent = (0, _useComponent.useComponent)(children => {\n      var element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":484,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutProperties2"],[10,31,1,13],[10,34,1,13,"_interopRequireDefault"],[10,56,1,13],[10,57,1,13,"require"],[10,64,1,13],[10,65,1,13,"_dependencyMap"],[10,79,1,13],[11,2,3,0],[11,6,3,0,"_routers"],[11,14,3,0],[11,17,3,0,"require"],[11,24,3,0],[11,25,3,0,"_dependencyMap"],[11,39,3,0],[12,2,4,0],[12,6,4,0,"React"],[12,11,4,0],[12,14,4,0,"_interopRequireWildcard"],[12,37,4,0],[12,38,4,0,"require"],[12,45,4,0],[12,46,4,0,"_dependencyMap"],[12,60,4,0],[13,2,5,0],[13,6,5,0,"_reactIs"],[13,14,5,0],[13,17,5,0,"require"],[13,24,5,0],[13,25,5,0,"_dependencyMap"],[13,39,5,0],[14,2,6,0],[14,6,6,0,"_useLatestCallback"],[14,24,6,0],[14,27,6,0,"_interopRequireDefault"],[14,49,6,0],[14,50,6,0,"require"],[14,57,6,0],[14,58,6,0,"_dependencyMap"],[14,72,6,0],[15,2,7,0],[15,6,7,0,"_deepFreeze"],[15,17,7,0],[15,20,7,0,"require"],[15,27,7,0],[15,28,7,0,"_dependencyMap"],[15,42,7,0],[16,2,8,0],[16,6,8,0,"_Group"],[16,12,8,0],[16,15,8,0,"require"],[16,22,8,0],[16,23,8,0,"_dependencyMap"],[16,37,8,0],[17,2,9,0],[17,6,9,0,"_isArrayEqual"],[17,19,9,0],[17,22,9,0,"require"],[17,29,9,0],[17,30,9,0,"_dependencyMap"],[17,44,9,0],[18,2,10,0],[18,6,10,0,"_isRecordEqual"],[18,20,10,0],[18,23,10,0,"require"],[18,30,10,0],[18,31,10,0,"_dependencyMap"],[18,45,10,0],[19,2,11,0],[19,6,11,0,"_NavigationHelpersContext"],[19,31,11,0],[19,34,11,0,"require"],[19,41,11,0],[19,42,11,0,"_dependencyMap"],[19,56,11,0],[20,2,12,0],[20,6,12,0,"_NavigationRouteContext"],[20,29,12,0],[20,32,12,0,"require"],[20,39,12,0],[20,40,12,0,"_dependencyMap"],[20,54,12,0],[21,2,13,0],[21,6,13,0,"_NavigationStateContext"],[21,29,13,0],[21,32,13,0,"require"],[21,39,13,0],[21,40,13,0,"_dependencyMap"],[21,54,13,0],[22,2,14,0],[22,6,14,0,"_PreventRemoveProvider"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_Screen"],[23,13,15,0],[23,16,15,0,"require"],[23,23,15,0],[23,24,15,0,"_dependencyMap"],[23,38,15,0],[24,2,16,0],[24,6,16,0,"_types"],[24,12,16,0],[24,15,16,0,"require"],[24,22,16,0],[24,23,16,0,"_dependencyMap"],[24,37,16,0],[25,2,17,0],[25,6,17,0,"_useChildListeners2"],[25,25,17,0],[25,28,17,0,"require"],[25,35,17,0],[25,36,17,0,"_dependencyMap"],[25,50,17,0],[26,2,18,0],[26,6,18,0,"_useComponent"],[26,19,18,0],[26,22,18,0,"require"],[26,29,18,0],[26,30,18,0,"_dependencyMap"],[26,44,18,0],[27,2,19,0],[27,6,19,0,"_useCurrentRender"],[27,23,19,0],[27,26,19,0,"require"],[27,33,19,0],[27,34,19,0,"_dependencyMap"],[27,48,19,0],[28,2,20,0],[28,6,20,0,"_useDescriptors2"],[28,22,20,0],[28,25,20,0,"require"],[28,32,20,0],[28,33,20,0,"_dependencyMap"],[28,47,20,0],[29,2,21,0],[29,6,21,0,"_useEventEmitter"],[29,22,21,0],[29,25,21,0,"require"],[29,32,21,0],[29,33,21,0,"_dependencyMap"],[29,47,21,0],[30,2,22,0],[30,6,22,0,"_useFocusedListenersChildrenAdapter"],[30,41,22,0],[30,44,22,0,"require"],[30,51,22,0],[30,52,22,0,"_dependencyMap"],[30,66,22,0],[31,2,23,0],[31,6,23,0,"_useFocusEvents"],[31,21,23,0],[31,24,23,0,"require"],[31,31,23,0],[31,32,23,0,"_dependencyMap"],[31,46,23,0],[32,2,24,0],[32,6,24,0,"_useIsomorphicLayoutEffect"],[32,32,24,0],[32,35,24,0,"require"],[32,42,24,0],[32,43,24,0,"_dependencyMap"],[32,57,24,0],[33,2,25,0],[33,6,25,0,"_useKeyedChildListeners"],[33,29,25,0],[33,32,25,0,"require"],[33,39,25,0],[33,40,25,0,"_dependencyMap"],[33,54,25,0],[34,2,26,0],[34,6,26,0,"_useLazyValue"],[34,19,26,0],[34,22,26,0,"require"],[34,29,26,0],[34,30,26,0,"_dependencyMap"],[34,44,26,0],[35,2,27,0],[35,6,27,0,"_useNavigationHelpers"],[35,27,27,0],[35,30,27,0,"require"],[35,37,27,0],[35,38,27,0,"_dependencyMap"],[35,52,27,0],[36,2,28,0],[36,6,28,0,"_useOnAction"],[36,18,28,0],[36,21,28,0,"require"],[36,28,28,0],[36,29,28,0,"_dependencyMap"],[36,43,28,0],[37,2,29,0],[37,6,29,0,"_useOnGetState"],[37,20,29,0],[37,23,29,0,"require"],[37,30,29,0],[37,31,29,0,"_dependencyMap"],[37,45,29,0],[38,2,30,0],[38,6,30,0,"_useOnRouteFocus"],[38,22,30,0],[38,25,30,0,"require"],[38,32,30,0],[38,33,30,0,"_dependencyMap"],[38,47,30,0],[39,2,31,0],[39,6,31,0,"_useRegisterNavigator"],[39,27,31,0],[39,30,31,0,"require"],[39,37,31,0],[39,38,31,0,"_dependencyMap"],[39,52,31,0],[40,2,32,0],[40,6,32,0,"_useScheduleUpdate"],[40,24,32,0],[40,27,32,0,"require"],[40,34,32,0],[40,35,32,0,"_dependencyMap"],[40,49,32,0],[41,2,35,0],[41,6,35,0,"_jsxRuntime"],[41,17,35,0],[41,20,35,0,"require"],[41,27,35,0],[41,28,35,0,"_dependencyMap"],[41,42,35,0],[42,2,35,48],[42,6,35,48,"_excluded"],[42,15,35,48],[42,94,34,0],[43,2,34,0],[43,11,34,0,"_getRequireWildcardCache"],[43,36,34,0,"e"],[43,37,34,0],[43,66,34,0,"WeakMap"],[43,73,34,0],[43,92,34,0,"r"],[43,93,34,0],[43,100,34,0,"WeakMap"],[43,107,34,0],[43,111,34,0,"t"],[43,112,34,0],[43,119,34,0,"WeakMap"],[43,126,34,0],[43,138,34,0,"_getRequireWildcardCache"],[43,162,34,0],[43,174,34,0,"_getRequireWildcardCache"],[43,175,34,0,"e"],[43,176,34,0],[43,187,34,0,"e"],[43,188,34,0],[43,191,34,0,"t"],[43,192,34,0],[43,195,34,0,"r"],[43,196,34,0],[43,201,34,0,"e"],[43,202,34,0],[44,2,34,0],[44,11,34,0,"_interopRequireWildcard"],[44,35,34,0,"e"],[44,36,34,0],[44,38,34,0,"r"],[44,39,34,0],[44,48,34,0,"r"],[44,49,34,0],[44,53,34,0,"e"],[44,54,34,0],[44,58,34,0,"e"],[44,59,34,0],[44,60,34,0,"__esModule"],[44,70,34,0],[44,79,34,0,"e"],[44,80,34,0],[44,95,34,0,"e"],[44,96,34,0],[44,119,34,0,"e"],[44,120,34,0],[44,145,34,0,"e"],[44,146,34,0],[44,157,34,0,"default"],[44,164,34,0],[44,166,34,0,"e"],[44,167,34,0],[44,175,34,0,"t"],[44,176,34,0],[44,179,34,0,"_getRequireWildcardCache"],[44,203,34,0],[44,204,34,0,"r"],[44,205,34,0],[44,212,34,0,"t"],[44,213,34,0],[44,217,34,0,"t"],[44,218,34,0],[44,219,34,0,"has"],[44,222,34,0],[44,223,34,0,"e"],[44,224,34,0],[44,234,34,0,"t"],[44,235,34,0],[44,236,34,0,"get"],[44,239,34,0],[44,240,34,0,"e"],[44,241,34,0],[44,248,34,0,"n"],[44,249,34,0],[44,254,34,0,"__proto__"],[44,263,34,0],[44,273,34,0,"a"],[44,274,34,0],[44,277,34,0,"Object"],[44,283,34,0],[44,284,34,0,"defineProperty"],[44,298,34,0],[44,302,34,0,"Object"],[44,308,34,0],[44,309,34,0,"getOwnPropertyDescriptor"],[44,333,34,0],[44,344,34,0,"u"],[44,345,34,0],[44,349,34,0,"e"],[44,350,34,0],[44,370,34,0,"u"],[44,371,34,0],[44,378,34,0,"hasOwnProperty"],[44,392,34,0],[44,393,34,0,"call"],[44,397,34,0],[44,398,34,0,"e"],[44,399,34,0],[44,401,34,0,"u"],[44,402,34,0],[44,411,34,0,"i"],[44,412,34,0],[44,415,34,0,"a"],[44,416,34,0],[44,419,34,0,"Object"],[44,425,34,0],[44,426,34,0,"getOwnPropertyDescriptor"],[44,450,34,0],[44,451,34,0,"e"],[44,452,34,0],[44,454,34,0,"u"],[44,455,34,0],[44,465,34,0,"i"],[44,466,34,0],[44,471,34,0,"i"],[44,472,34,0],[44,473,34,0,"get"],[44,476,34,0],[44,480,34,0,"i"],[44,481,34,0],[44,482,34,0,"set"],[44,485,34,0],[44,489,34,0,"Object"],[44,495,34,0],[44,496,34,0,"defineProperty"],[44,510,34,0],[44,511,34,0,"n"],[44,512,34,0],[44,514,34,0,"u"],[44,515,34,0],[44,517,34,0,"i"],[44,518,34,0],[44,522,34,0,"n"],[44,523,34,0],[44,524,34,0,"u"],[44,525,34,0],[44,529,34,0,"e"],[44,530,34,0],[44,531,34,0,"u"],[44,532,34,0],[44,544,34,0,"n"],[44,545,34,0],[44,546,34,0,"default"],[44,553,34,0],[44,556,34,0,"e"],[44,557,34,0],[44,559,34,0,"t"],[44,560,34,0],[44,564,34,0,"t"],[44,565,34,0],[44,566,34,0,"set"],[44,569,34,0],[44,570,34,0,"e"],[44,571,34,0],[44,573,34,0,"n"],[44,574,34,0],[44,577,34,0,"n"],[44,578,34,0],[45,2,36,0,"PrivateValueStore"],[45,26,36,17],[46,2,37,0],[46,6,37,6,"isValidKey"],[46,16,37,16],[46,19,37,19,"key"],[46,22,37,22],[46,26,37,26,"key"],[46,29,37,29],[46,34,37,34,"undefined"],[46,43,37,43],[46,47,37,47],[46,54,37,54,"key"],[46,57,37,57],[46,62,37,62],[46,70,37,70],[46,74,37,74,"key"],[46,77,37,77],[46,82,37,82],[46,84,37,84],[48,2,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,2,44,0],[53,6,44,6,"getRouteConfigsFromChildren"],[53,33,44,33],[53,36,44,36,"getRouteConfigsFromChildren"],[53,37,44,37,"children"],[53,45,44,45],[53,47,44,47,"groupKey"],[53,55,44,55],[53,57,44,57,"groupOptions"],[53,69,44,69],[53,71,44,71,"groupLayout"],[53,82,44,82],[53,87,44,87],[54,4,45,2],[54,8,45,8,"configs"],[54,15,45,15],[54,18,45,18,"React"],[54,23,45,23],[54,24,45,24,"Children"],[54,32,45,32],[54,33,45,33,"toArray"],[54,40,45,40],[54,41,45,41,"children"],[54,49,45,49],[54,50,45,50],[54,51,45,51,"reduce"],[54,57,45,57],[54,58,45,58],[54,59,45,59,"acc"],[54,62,45,62],[54,64,45,64,"child"],[54,69,45,69],[54,74,45,74],[55,6,46,4],[55,10,46,8],[55,23,46,21,"React"],[55,28,46,26],[55,29,46,27,"isValidElement"],[55,43,46,41],[55,44,46,42,"child"],[55,49,46,47],[55,50,46,48],[55,52,46,50],[56,8,47,6],[56,12,47,10,"child"],[56,17,47,15],[56,18,47,16,"type"],[56,22,47,20],[56,27,47,25,"Screen"],[56,41,47,31],[56,43,47,33],[57,10,48,8],[58,10,49,8],[60,10,51,8],[60,14,51,12],[60,15,51,13,"isValidKey"],[60,25,51,23],[60,26,51,24,"child"],[60,31,51,29],[60,32,51,30,"props"],[60,37,51,35],[60,38,51,36,"navigationKey"],[60,51,51,49],[60,52,51,50],[60,54,51,52],[61,12,52,10],[61,18,52,16],[61,22,52,20,"Error"],[61,27,52,25],[61,28,52,26],[61,68,52,66,"JSON"],[61,72,52,70],[61,73,52,71,"stringify"],[61,82,52,80],[61,83,52,81,"child"],[61,88,52,86],[61,89,52,87,"props"],[61,94,52,92],[61,95,52,93,"navigationKey"],[61,108,52,106],[61,109,52,107],[61,130,52,128,"child"],[61,135,52,133],[61,136,52,134,"props"],[61,141,52,139],[61,142,52,140,"name"],[61,146,52,144],[61,196,52,194],[61,197,52,195],[62,10,53,8],[63,10,54,8,"acc"],[63,13,54,11],[63,14,54,12,"push"],[63,18,54,16],[63,19,54,17],[64,12,55,10,"keys"],[64,16,55,14],[64,18,55,16],[64,19,55,17,"groupKey"],[64,27,55,25],[64,29,55,27,"child"],[64,34,55,32],[64,35,55,33,"props"],[64,40,55,38],[64,41,55,39,"navigationKey"],[64,54,55,52],[64,55,55,53],[65,12,56,10,"options"],[65,19,56,17],[65,21,56,19,"groupOptions"],[65,33,56,31],[66,12,57,10,"layout"],[66,18,57,16],[66,20,57,18,"groupLayout"],[66,31,57,29],[67,12,58,10,"props"],[67,17,58,15],[67,19,58,17,"child"],[67,24,58,22],[67,25,58,23,"props"],[68,10,59,8],[68,11,59,9],[68,12,59,10],[69,10,60,8],[69,17,60,15,"acc"],[69,20,60,18],[70,8,61,6],[71,8,62,6],[71,12,62,10,"child"],[71,17,62,15],[71,18,62,16,"type"],[71,22,62,20],[71,27,62,25,"React"],[71,32,62,30],[71,33,62,31,"Fragment"],[71,41,62,39],[71,45,62,43,"child"],[71,50,62,48],[71,51,62,49,"type"],[71,55,62,53],[71,60,62,58,"Group"],[71,72,62,63],[71,74,62,65],[72,10,63,8],[72,14,63,12],[72,15,63,13,"isValidKey"],[72,25,63,23],[72,26,63,24,"child"],[72,31,63,29],[72,32,63,30,"props"],[72,37,63,35],[72,38,63,36,"navigationKey"],[72,51,63,49],[72,52,63,50],[72,54,63,52],[73,12,64,10],[73,18,64,16],[73,22,64,20,"Error"],[73,27,64,25],[73,28,64,26],[73,68,64,66,"JSON"],[73,72,64,70],[73,73,64,71,"stringify"],[73,82,64,80],[73,83,64,81,"child"],[73,88,64,86],[73,89,64,87,"props"],[73,94,64,92],[73,95,64,93,"navigationKey"],[73,108,64,106],[73,109,64,107],[73,173,64,171],[73,174,64,172],[74,10,65,8],[76,10,67,8],[77,10,68,8],[78,10,69,8,"acc"],[78,13,69,11],[78,14,69,12,"push"],[78,18,69,16],[78,19,69,17],[78,22,69,20,"getRouteConfigsFromChildren"],[78,49,69,47],[78,50,69,48,"child"],[78,55,69,53],[78,56,69,54,"props"],[78,61,69,59],[78,62,69,60,"children"],[78,70,69,68],[78,72,69,70,"child"],[78,77,69,75],[78,78,69,76,"props"],[78,83,69,81],[78,84,69,82,"navigationKey"],[78,97,69,95],[78,99,69,97,"child"],[78,104,69,102],[78,105,69,103,"type"],[78,109,69,107],[78,114,69,112,"Group"],[78,126,69,117],[78,129,69,120,"groupOptions"],[78,141,69,132],[78,144,69,135,"groupOptions"],[78,156,69,147],[78,160,69,151],[78,164,69,155],[78,167,69,158],[78,168,69,159],[78,171,69,162,"groupOptions"],[78,183,69,174],[78,185,69,176,"child"],[78,190,69,181],[78,191,69,182,"props"],[78,196,69,187],[78,197,69,188,"screenOptions"],[78,210,69,201],[78,211,69,202],[78,214,69,205],[78,215,69,206,"child"],[78,220,69,211],[78,221,69,212,"props"],[78,226,69,217],[78,227,69,218,"screenOptions"],[78,240,69,231],[78,241,69,232],[78,243,69,234],[78,250,69,241,"child"],[78,255,69,246],[78,256,69,247,"props"],[78,261,69,252],[78,262,69,253,"screenLayout"],[78,274,69,265],[78,279,69,270],[78,289,69,280],[78,292,69,283,"child"],[78,297,69,288],[78,298,69,289,"props"],[78,303,69,294],[78,304,69,295,"screenLayout"],[78,316,69,307],[78,319,69,310,"groupLayout"],[78,330,69,321],[78,331,69,322],[78,332,69,323],[79,10,70,8],[79,17,70,15,"acc"],[79,20,70,18],[80,8,71,6],[81,6,72,4],[82,6,73,4],[82,12,73,10],[82,16,73,14,"Error"],[82,21,73,19],[82,22,73,20],[82,122,73,120],[82,135,73,133],[82,149,73,133,"React"],[82,154,73,138],[82,155,73,139,"isValidElement"],[82,169,73,153],[82,170,73,154,"child"],[82,175,73,159],[82,176,73,160],[82,179,73,163],[82,183,73,167],[82,190,73,174,"child"],[82,195,73,179],[82,196,73,180,"type"],[82,200,73,184],[82,205,73,189],[82,213,73,197],[82,216,73,200,"child"],[82,221,73,205],[82,222,73,206,"type"],[82,226,73,210],[82,229,73,213,"child"],[82,234,73,218],[82,235,73,219,"type"],[82,239,73,223],[82,241,73,225,"name"],[82,245,73,229],[82,249,73,233,"child"],[82,254,73,238],[82,255,73,239,"props"],[82,260,73,244],[82,264,73,248],[82,268,73,252],[82,272,73,256],[82,279,73,263,"child"],[82,284,73,268],[82,285,73,269,"props"],[82,290,73,274],[82,295,73,279],[82,303,73,287],[82,307,73,291],[82,313,73,297],[82,317,73,301,"child"],[82,322,73,306],[82,323,73,307,"props"],[82,328,73,312],[82,332,73,316,"child"],[82,337,73,321],[82,338,73,322,"props"],[82,343,73,327],[82,345,73,329,"name"],[82,349,73,333],[82,352,73,336],[82,372,73,356,"child"],[82,377,73,361],[82,378,73,362,"props"],[82,383,73,367],[82,384,73,368,"name"],[82,388,73,372],[82,391,73,375],[82,394,73,378],[82,396,73,380],[82,398,73,382],[82,401,73,385],[82,408,73,392,"child"],[82,413,73,397],[82,418,73,402],[82,426,73,410],[82,429,73,413,"JSON"],[82,433,73,417],[82,434,73,418,"stringify"],[82,443,73,427],[82,444,73,428,"child"],[82,449,73,433],[82,450,73,434],[82,453,73,437],[82,457,73,441,"String"],[82,463,73,447],[82,464,73,448,"child"],[82,469,73,453],[82,470,73,454],[82,473,73,457],[82,565,73,549],[82,566,73,550],[83,4,74,2],[83,5,74,3],[83,7,74,5],[83,9,74,7],[83,10,74,8],[84,4,75,2],[84,8,75,6,"process"],[84,15,75,13],[84,16,75,14,"env"],[84,19,75,17],[84,20,75,18,"NODE_ENV"],[84,28,75,26],[84,33,75,31],[84,45,75,43],[84,47,75,45],[85,6,76,4,"configs"],[85,13,76,11],[85,14,76,12,"forEach"],[85,21,76,19],[85,22,76,20,"config"],[85,28,76,26],[85,32,76,30],[86,8,77,6],[86,12,77,6,"_config$props"],[86,25,77,6],[86,28,82,10,"config"],[86,34,82,16],[86,35,82,17,"props"],[86,40,82,22],[87,10,78,8,"name"],[87,14,78,12],[87,17,78,12,"_config$props"],[87,30,78,12],[87,31,78,8,"name"],[87,35,78,12],[88,10,79,8,"children"],[88,18,79,16],[88,21,79,16,"_config$props"],[88,34,79,16],[88,35,79,8,"children"],[88,43,79,16],[89,10,80,8,"component"],[89,19,80,17],[89,22,80,17,"_config$props"],[89,35,80,17],[89,36,80,8,"component"],[89,45,80,17],[90,10,81,8,"getComponent"],[90,22,81,20],[90,25,81,20,"_config$props"],[90,38,81,20],[90,39,81,8,"getComponent"],[90,51,81,20],[91,8,83,6],[91,12,83,10],[91,19,83,17,"name"],[91,23,83,21],[91,28,83,26],[91,36,83,34],[91,40,83,38],[91,41,83,39,"name"],[91,45,83,43],[91,47,83,45],[92,10,84,8],[92,16,84,14],[92,20,84,18,"Error"],[92,25,84,23],[92,26,84,24],[92,50,84,48,"JSON"],[92,54,84,52],[92,55,84,53,"stringify"],[92,64,84,62],[92,65,84,63,"name"],[92,69,84,67],[92,70,84,68],[92,120,84,118],[92,121,84,119],[93,8,85,6],[94,8,86,6],[94,12,86,10,"children"],[94,20,86,18],[94,24,86,22],[94,28,86,26],[94,32,86,30,"component"],[94,41,86,39],[94,46,86,44,"undefined"],[94,55,86,53],[94,59,86,57,"getComponent"],[94,71,86,69],[94,76,86,74,"undefined"],[94,85,86,83],[94,87,86,85],[95,10,87,8],[95,14,87,12,"children"],[95,22,87,20],[95,26,87,24],[95,30,87,28],[95,34,87,32,"component"],[95,43,87,41],[95,48,87,46,"undefined"],[95,57,87,55],[95,59,87,57],[96,12,88,10],[96,18,88,16],[96,22,88,20,"Error"],[96,27,88,25],[96,28,88,26],[96,89,88,87,"name"],[96,93,88,91],[96,129,88,127],[96,130,88,128],[97,10,89,8],[98,10,90,8],[98,14,90,12,"children"],[98,22,90,20],[98,26,90,24],[98,30,90,28],[98,34,90,32,"getComponent"],[98,46,90,44],[98,51,90,49,"undefined"],[98,60,90,58],[98,62,90,60],[99,12,91,10],[99,18,91,16],[99,22,91,20,"Error"],[99,27,91,25],[99,28,91,26],[99,92,91,90,"name"],[99,96,91,94],[99,132,91,130],[99,133,91,131],[100,10,92,8],[101,10,93,8],[101,14,93,12,"component"],[101,23,93,21],[101,28,93,26,"undefined"],[101,37,93,35],[101,41,93,39,"getComponent"],[101,53,93,51],[101,58,93,56,"undefined"],[101,67,93,65],[101,69,93,67],[102,12,94,10],[102,18,94,16],[102,22,94,20,"Error"],[102,27,94,25],[102,28,94,26],[102,93,94,91,"name"],[102,97,94,95],[102,133,94,131],[102,134,94,132],[103,10,95,8],[104,10,96,8],[104,14,96,12,"children"],[104,22,96,20],[104,26,96,24],[104,30,96,28],[104,34,96,32],[104,41,96,39,"children"],[104,49,96,47],[104,54,96,52],[104,64,96,62],[104,66,96,64],[105,12,97,10],[105,18,97,16],[105,22,97,20,"Error"],[105,27,97,25],[105,28,97,26],[105,88,97,86,"name"],[105,92,97,90],[105,145,97,143],[105,146,97,144],[106,10,98,8],[107,10,99,8],[107,14,99,12,"component"],[107,23,99,21],[107,28,99,26,"undefined"],[107,37,99,35],[107,41,99,39],[107,42,99,40],[107,46,99,40,"isValidElementType"],[107,73,99,58],[107,75,99,59,"component"],[107,84,99,68],[107,85,99,69],[107,87,99,71],[108,12,100,10],[108,18,100,16],[108,22,100,20,"Error"],[108,27,100,25],[108,28,100,26],[108,89,100,87,"name"],[108,93,100,91],[108,133,100,131],[108,134,100,132],[109,10,101,8],[110,10,102,8],[110,14,102,12,"getComponent"],[110,26,102,24],[110,31,102,29,"undefined"],[110,40,102,38],[110,44,102,42],[110,51,102,49,"getComponent"],[110,63,102,61],[110,68,102,66],[110,78,102,76],[110,80,102,78],[111,12,103,10],[111,18,103,16],[111,22,103,20,"Error"],[111,27,103,25],[111,28,103,26],[111,92,103,90,"name"],[111,96,103,94],[111,151,103,149],[111,152,103,150],[112,10,104,8],[113,10,105,8],[113,14,105,12],[113,21,105,19,"component"],[113,30,105,28],[113,35,105,33],[113,45,105,43],[113,47,105,45],[114,12,106,10],[114,16,106,14,"component"],[114,25,106,23],[114,26,106,24,"name"],[114,30,106,28],[114,35,106,33],[114,46,106,44],[114,48,106,46],[115,14,107,12],[116,14,108,12],[117,14,109,12],[118,14,110,12,"console"],[118,21,110,19],[118,22,110,20,"warn"],[118,26,110,24],[118,27,110,25],[118,112,110,110,"name"],[118,116,110,114],[118,395,110,393],[118,396,110,394],[119,12,111,10],[119,13,111,11],[119,19,111,17],[119,23,111,21],[119,31,111,29],[119,32,111,30,"test"],[119,36,111,34],[119,37,111,35,"component"],[119,46,111,44],[119,47,111,45,"name"],[119,51,111,49],[119,52,111,50],[119,54,111,52],[120,14,112,12,"console"],[120,21,112,19],[120,22,112,20,"warn"],[120,26,112,24],[120,27,112,25],[120,61,112,59,"component"],[120,70,112,68],[120,71,112,69,"name"],[120,75,112,73],[120,96,112,94,"name"],[120,100,112,98],[120,301,112,299],[120,302,112,300],[121,12,113,10],[122,10,114,8],[123,8,115,6],[123,9,115,7],[123,15,115,13],[124,10,116,8],[124,16,116,14],[124,20,116,18,"Error"],[124,25,116,23],[124,26,116,24],[124,108,116,106,"name"],[124,112,116,110],[124,293,116,291],[124,294,116,292],[125,8,117,6],[126,6,118,4],[126,7,118,5],[126,8,118,6],[127,4,119,2],[128,4,120,2],[128,11,120,9,"configs"],[128,18,120,16],[129,2,121,0],[129,3,121,1],[131,2,123,0],[132,0,124,0],[133,0,125,0],[134,0,126,0],[135,0,127,0],[136,0,128,0],[137,0,129,0],[138,2,130,7],[138,11,130,16,"useNavigationBuilder"],[138,31,130,36,"useNavigationBuilder"],[138,32,130,37,"createRouter"],[138,44,130,49],[138,46,130,51,"options"],[138,53,130,58],[138,55,130,60],[139,4,131,2],[139,8,131,8,"navigatorKey"],[139,20,131,20],[139,23,131,23],[139,27,131,23,"useRegisterNavigator"],[139,69,131,43],[139,71,131,44],[139,72,131,45],[140,4,132,2],[140,8,132,8,"route"],[140,13,132,13],[140,16,132,16,"React"],[140,21,132,21],[140,22,132,22,"useContext"],[140,32,132,32],[140,33,132,33,"NavigationRouteContext"],[140,79,132,55],[140,80,132,56],[141,4,133,2],[141,8,134,4,"children"],[141,16,134,12],[141,19,140,6,"options"],[141,26,140,13],[141,27,134,4,"children"],[141,35,134,12],[142,6,135,4,"layout"],[142,12,135,10],[142,15,140,6,"options"],[142,22,140,13],[142,23,135,4,"layout"],[142,29,135,10],[143,6,136,4,"screenOptions"],[143,19,136,17],[143,22,140,6,"options"],[143,29,140,13],[143,30,136,4,"screenOptions"],[143,43,136,17],[144,6,137,4,"screenLayout"],[144,18,137,16],[144,21,140,6,"options"],[144,28,140,13],[144,29,137,4,"screenLayout"],[144,41,137,16],[145,6,138,4,"screenListeners"],[145,21,138,19],[145,24,140,6,"options"],[145,31,140,13],[145,32,138,4,"screenListeners"],[145,47,138,19],[146,6,139,7,"rest"],[146,10,139,11],[146,17,139,11,"_objectWithoutProperties2"],[146,42,139,11],[146,43,139,11,"default"],[146,50,139,11],[146,52,140,6,"options"],[146,59,140,13],[146,61,140,13,"_excluded"],[146,70,140,13],[147,4,141,2],[147,8,141,8,"routeConfigs"],[147,20,141,20],[147,23,141,23,"getRouteConfigsFromChildren"],[147,50,141,50],[147,51,141,51,"children"],[147,59,141,59],[147,60,141,60],[148,4,142,2],[148,8,142,8,"router"],[148,14,142,14],[148,17,142,17],[148,21,142,17,"useLazyValue"],[148,47,142,29],[148,49,142,30],[148,55,142,36],[149,6,143,4],[149,10,143,8,"rest"],[149,14,143,12],[149,15,143,13,"initialRouteName"],[149,31,143,29],[149,35,143,33],[149,39,143,37],[149,43,143,41,"routeConfigs"],[149,55,143,53],[149,56,143,54,"every"],[149,61,143,59],[149,62,143,60,"config"],[149,68,143,66],[149,72,143,70,"config"],[149,78,143,76],[149,79,143,77,"props"],[149,84,143,82],[149,85,143,83,"name"],[149,89,143,87],[149,94,143,92,"rest"],[149,98,143,96],[149,99,143,97,"initialRouteName"],[149,115,143,113],[149,116,143,114],[149,118,143,116],[150,8,144,6],[150,14,144,12],[150,18,144,16,"Error"],[150,23,144,21],[150,24,144,22],[150,57,144,55,"rest"],[150,61,144,59],[150,62,144,60,"initialRouteName"],[150,78,144,76],[150,111,144,109],[150,112,144,110],[151,6,145,4],[152,6,146,4],[152,13,146,11,"createRouter"],[152,25,146,23],[152,26,146,24,"rest"],[152,30,146,28],[152,31,146,29],[153,4,147,2],[153,5,147,3],[153,6,147,4],[154,4,148,2],[154,8,148,8,"screens"],[154,15,148,15],[154,18,148,18,"routeConfigs"],[154,30,148,30],[154,31,148,31,"reduce"],[154,37,148,37],[154,38,148,38],[154,39,148,39,"acc"],[154,42,148,42],[154,44,148,44,"config"],[154,50,148,50],[154,55,148,55],[155,6,149,4],[155,10,149,8,"config"],[155,16,149,14],[155,17,149,15,"props"],[155,22,149,20],[155,23,149,21,"name"],[155,27,149,25],[155,31,149,29,"acc"],[155,34,149,32],[155,36,149,34],[156,8,150,6],[156,14,150,12],[156,18,150,16,"Error"],[156,23,150,21],[156,24,150,22],[156,133,150,131,"config"],[156,139,150,137],[156,140,150,138,"props"],[156,145,150,143],[156,146,150,144,"name"],[156,150,150,148],[156,154,150,152],[156,155,150,153],[157,6,151,4],[158,6,152,4,"acc"],[158,9,152,7],[158,10,152,8,"config"],[158,16,152,14],[158,17,152,15,"props"],[158,22,152,20],[158,23,152,21,"name"],[158,27,152,25],[158,28,152,26],[158,31,152,29,"config"],[158,37,152,35],[159,6,153,4],[159,13,153,11,"acc"],[159,16,153,14],[160,4,154,2],[160,5,154,3],[160,7,154,5],[160,8,154,6],[160,9,154,7],[160,10,154,8],[161,4,155,2],[161,8,155,8,"routeNames"],[161,18,155,18],[161,21,155,21,"routeConfigs"],[161,33,155,33],[161,34,155,34,"map"],[161,37,155,37],[161,38,155,38,"config"],[161,44,155,44],[161,48,155,48,"config"],[161,54,155,54],[161,55,155,55,"props"],[161,60,155,60],[161,61,155,61,"name"],[161,65,155,65],[161,66,155,66],[162,4,156,2],[162,8,156,8,"routeKeyList"],[162,20,156,20],[162,23,156,23,"routeNames"],[162,33,156,33],[162,34,156,34,"reduce"],[162,40,156,40],[162,41,156,41],[162,42,156,42,"acc"],[162,45,156,45],[162,47,156,47,"curr"],[162,51,156,51],[162,56,156,56],[163,6,157,4,"acc"],[163,9,157,7],[163,10,157,8,"curr"],[163,14,157,12],[163,15,157,13],[163,18,157,16,"screens"],[163,25,157,23],[163,26,157,24,"curr"],[163,30,157,28],[163,31,157,29],[163,32,157,30,"keys"],[163,36,157,34],[163,37,157,35,"map"],[163,40,157,38],[163,41,157,39,"key"],[163,44,157,42],[163,48,157,46,"key"],[163,51,157,49],[163,55,157,53],[163,57,157,55],[163,58,157,56],[163,59,157,57,"join"],[163,63,157,61],[163,64,157,62],[163,67,157,65],[163,68,157,66],[164,6,158,4],[164,13,158,11,"acc"],[164,16,158,14],[165,4,159,2],[165,5,159,3],[165,7,159,5],[165,8,159,6],[165,9,159,7],[165,10,159,8],[166,4,160,2],[166,8,160,8,"routeParamList"],[166,22,160,22],[166,25,160,25,"routeNames"],[166,35,160,35],[166,36,160,36,"reduce"],[166,42,160,42],[166,43,160,43],[166,44,160,44,"acc"],[166,47,160,47],[166,49,160,49,"curr"],[166,53,160,53],[166,58,160,58],[167,6,161,4],[167,10,162,6,"initialParams"],[167,23,162,19],[167,26,163,8,"screens"],[167,33,163,15],[167,34,163,16,"curr"],[167,38,163,20],[167,39,163,21],[167,40,163,22,"props"],[167,45,163,27],[167,46,162,6,"initialParams"],[167,59,162,19],[168,6,164,4,"acc"],[168,9,164,7],[168,10,164,8,"curr"],[168,14,164,12],[168,15,164,13],[168,18,164,16,"initialParams"],[168,31,164,29],[169,6,165,4],[169,13,165,11,"acc"],[169,16,165,14],[170,4,166,2],[170,5,166,3],[170,7,166,5],[170,8,166,6],[170,9,166,7],[170,10,166,8],[171,4,167,2],[171,8,167,8,"routeGetIdList"],[171,22,167,22],[171,25,167,25,"routeNames"],[171,35,167,35],[171,36,167,36,"reduce"],[171,42,167,42],[171,43,167,43],[171,44,167,44,"acc"],[171,47,167,47],[171,49,167,49,"curr"],[171,53,167,53],[171,58,167,58,"Object"],[171,64,167,64],[171,65,167,65,"assign"],[171,71,167,71],[171,72,167,72,"acc"],[171,75,167,75],[171,77,167,77],[172,6,168,4],[172,7,168,5,"curr"],[172,11,168,9],[172,14,168,12,"screens"],[172,21,168,19],[172,22,168,20,"curr"],[172,26,168,24],[172,27,168,25],[172,28,168,26,"props"],[172,33,168,31],[172,34,168,32,"getId"],[173,4,169,2],[173,5,169,3],[173,6,169,4],[173,8,169,6],[173,9,169,7],[173,10,169,8],[173,11,169,9],[174,4,170,2],[174,8,170,6],[174,9,170,7,"routeNames"],[174,19,170,17],[174,20,170,18,"length"],[174,26,170,24],[174,28,170,26],[175,6,171,4],[175,12,171,10],[175,16,171,14,"Error"],[175,21,171,19],[175,22,171,20],[175,114,171,112],[175,115,171,113],[176,4,172,2],[177,4,173,2],[177,8,173,8,"isStateValid"],[177,20,173,20],[177,23,173,23,"React"],[177,28,173,28],[177,29,173,29,"useCallback"],[177,40,173,40],[177,41,173,41,"state"],[177,46,173,46],[177,50,173,50,"state"],[177,55,173,55],[177,56,173,56,"type"],[177,60,173,60],[177,65,173,65,"undefined"],[177,74,173,74],[177,78,173,78,"state"],[177,83,173,83],[177,84,173,84,"type"],[177,88,173,88],[177,93,173,93,"router"],[177,99,173,99],[177,100,173,100,"type"],[177,104,173,104],[177,106,173,106],[177,107,173,107,"router"],[177,113,173,113],[177,114,173,114,"type"],[177,118,173,118],[177,119,173,119],[177,120,173,120],[178,4,174,2],[178,8,174,8,"isStateInitialized"],[178,26,174,26],[178,29,174,29,"React"],[178,34,174,34],[178,35,174,35,"useCallback"],[178,46,174,46],[178,47,174,47,"state"],[178,52,174,52],[178,56,174,56,"state"],[178,61,174,61],[178,66,174,66,"undefined"],[178,75,174,75],[178,79,174,79,"state"],[178,84,174,84],[178,85,174,85,"stale"],[178,90,174,90],[178,95,174,95],[178,100,174,100],[178,104,174,104,"isStateValid"],[178,116,174,116],[178,117,174,117,"state"],[178,122,174,122],[178,123,174,123],[178,125,174,125],[178,126,174,126,"isStateValid"],[178,138,174,138],[178,139,174,139],[178,140,174,140],[179,4,175,2],[179,8,175,2,"_React$useContext"],[179,25,175,2],[179,28,182,6,"React"],[179,33,182,11],[179,34,182,12,"useContext"],[179,44,182,22],[179,45,182,23,"NavigationStateContext"],[179,91,182,45],[179,92,182,46],[180,6,176,11,"currentState"],[180,18,176,23],[180,21,176,23,"_React$useContext"],[180,38,176,23],[180,39,176,4,"state"],[180,44,176,9],[181,6,177,14,"getCurrentState"],[181,21,177,29],[181,24,177,29,"_React$useContext"],[181,41,177,29],[181,42,177,4,"getState"],[181,50,177,12],[182,6,178,14,"setCurrentState"],[182,21,178,29],[182,24,178,29,"_React$useContext"],[182,41,178,29],[182,42,178,4,"setState"],[182,50,178,12],[183,6,179,4,"setKey"],[183,12,179,10],[183,15,179,10,"_React$useContext"],[183,32,179,10],[183,33,179,4,"setKey"],[183,39,179,10],[184,6,180,4,"getKey"],[184,12,180,10],[184,15,180,10,"_React$useContext"],[184,32,180,10],[184,33,180,4,"getKey"],[184,39,180,10],[185,6,181,4,"getIsInitial"],[185,18,181,16],[185,21,181,16,"_React$useContext"],[185,38,181,16],[185,39,181,4,"getIsInitial"],[185,51,181,16],[186,4,183,2],[186,8,183,8,"stateCleanedUp"],[186,22,183,22],[186,25,183,25,"React"],[186,30,183,30],[186,31,183,31,"useRef"],[186,37,183,37],[186,38,183,38],[186,43,183,43],[186,44,183,44],[187,4,184,2],[187,8,184,8,"setState"],[187,16,184,16],[187,19,184,19],[187,23,184,19,"useLatestCallback"],[187,49,184,36],[187,51,184,37,"state"],[187,56,184,42],[187,60,184,46],[188,6,185,4],[188,10,185,8,"stateCleanedUp"],[188,24,185,22],[188,25,185,23,"current"],[188,32,185,30],[188,34,185,32],[189,8,186,6],[190,8,187,6],[191,8,188,6],[192,8,189,6],[193,6,190,4],[194,6,191,4,"setCurrentState"],[194,21,191,19],[194,22,191,20,"state"],[194,27,191,25],[194,28,191,26],[195,4,192,2],[195,5,192,3],[195,6,192,4],[196,4,193,2],[196,8,193,2,"_React$useMemo"],[196,22,193,2],[196,25,193,57,"React"],[196,30,193,62],[196,31,193,63,"useMemo"],[196,38,193,70],[196,39,193,71],[196,45,193,77],[197,8,194,4],[197,12,194,10,"initialRouteParamList"],[197,33,194,31],[197,36,194,34,"routeNames"],[197,46,194,44],[197,47,194,45,"reduce"],[197,53,194,51],[197,54,194,52],[197,55,194,53,"acc"],[197,58,194,56],[197,60,194,58,"curr"],[197,64,194,62],[197,69,194,67],[198,10,195,6],[198,14,196,8,"initialParams"],[198,27,196,21],[198,30,197,10,"screens"],[198,37,197,17],[198,38,197,18,"curr"],[198,42,197,22],[198,43,197,23],[198,44,197,24,"props"],[198,49,197,29],[198,50,196,8,"initialParams"],[198,63,196,21],[199,10,198,6],[199,14,198,12,"initialParamsFromParams"],[199,37,198,35],[199,40,198,38,"route"],[199,45,198,43],[199,47,198,45,"params"],[199,53,198,51],[199,55,198,53,"state"],[199,60,198,58],[199,64,198,62],[199,68,198,66],[199,72,198,70,"route"],[199,77,198,75],[199,79,198,77,"params"],[199,85,198,83],[199,87,198,85,"initial"],[199,94,198,92],[199,99,198,97],[199,104,198,102],[199,108,198,106,"route"],[199,113,198,111],[199,115,198,113,"params"],[199,121,198,119],[199,123,198,121,"screen"],[199,129,198,127],[199,134,198,132,"curr"],[199,138,198,136],[199,141,198,139,"route"],[199,146,198,144],[199,147,198,145,"params"],[199,153,198,151],[199,154,198,152,"params"],[199,160,198,158],[199,163,198,161,"undefined"],[199,172,198,170],[200,10,199,6,"acc"],[200,13,199,9],[200,14,199,10,"curr"],[200,18,199,14],[200,19,199,15],[200,22,199,18,"initialParams"],[200,35,199,31],[200,40,199,36,"undefined"],[200,49,199,45],[200,53,199,49,"initialParamsFromParams"],[200,76,199,72],[200,81,199,77,"undefined"],[200,90,199,86],[200,93,199,89],[201,12,200,8],[201,15,200,11,"initialParams"],[201,28,200,24],[202,12,201,8],[202,15,201,11,"initialParamsFromParams"],[203,10,202,6],[203,11,202,7],[203,14,202,10,"undefined"],[203,23,202,19],[204,10,203,6],[204,17,203,13,"acc"],[204,20,203,16],[205,8,204,4],[205,9,204,5],[205,11,204,7],[205,12,204,8],[205,13,204,9],[205,14,204,10],[207,8,206,4],[208,8,207,4],[209,8,208,4],[210,8,209,4],[211,8,210,4],[211,12,210,8],[211,13,210,9,"currentState"],[211,25,210,21],[211,30,210,26,"undefined"],[211,39,210,35],[211,43,210,39],[211,44,210,40,"isStateValid"],[211,56,210,52],[211,57,210,53,"currentState"],[211,69,210,65],[211,70,210,66],[211,75,210,71,"route"],[211,80,210,76],[211,82,210,78,"params"],[211,88,210,84],[211,90,210,86,"state"],[211,95,210,91],[211,99,210,95],[211,103,210,99],[211,107,210,103],[211,109,210,105],[211,116,210,112,"route"],[211,121,210,117],[211,123,210,119,"params"],[211,129,210,125],[211,131,210,127,"screen"],[211,137,210,133],[211,142,210,138],[211,150,210,146],[211,154,210,150,"route"],[211,159,210,155],[211,161,210,157,"params"],[211,167,210,163],[211,169,210,165,"initial"],[211,176,210,172],[211,181,210,177],[211,186,210,182],[211,187,210,183],[211,189,210,185],[212,10,211,6],[212,17,211,13],[212,18,211,14,"router"],[212,24,211,20],[212,25,211,21,"getInitialState"],[212,40,211,36],[212,41,211,37],[213,12,212,8,"routeNames"],[213,22,212,18],[214,12,213,8,"routeParamList"],[214,26,213,22],[214,28,213,24,"initialRouteParamList"],[214,49,213,45],[215,12,214,8,"routeGetIdList"],[216,10,215,6],[216,11,215,7],[216,12,215,8],[216,14,215,10],[216,18,215,14],[216,19,215,15],[217,8,216,4],[217,9,216,5],[217,15,216,11],[218,10,217,6],[218,14,217,10,"stateFromParams"],[218,29,217,25],[219,10,218,6],[219,14,218,10,"route"],[219,19,218,15],[219,21,218,17,"params"],[219,27,218,23],[219,29,218,25,"state"],[219,34,218,30],[219,38,218,34],[219,42,218,38],[219,44,218,40],[220,12,219,8,"stateFromParams"],[220,27,219,23],[220,30,219,26,"route"],[220,35,219,31],[220,36,219,32,"params"],[220,42,219,38],[220,43,219,39,"state"],[220,48,219,44],[221,10,220,6],[221,11,220,7],[221,17,220,13],[221,21,220,17],[221,28,220,24,"route"],[221,33,220,29],[221,35,220,31,"params"],[221,41,220,37],[221,43,220,39,"screen"],[221,49,220,45],[221,54,220,50],[221,62,220,58],[221,66,220,62,"route"],[221,71,220,67],[221,73,220,69,"params"],[221,79,220,75],[221,81,220,77,"initial"],[221,88,220,84],[221,93,220,89],[221,98,220,94],[221,100,220,96],[222,12,221,8,"stateFromParams"],[222,27,221,23],[222,30,221,26],[223,14,222,10,"index"],[223,19,222,15],[223,21,222,17],[223,22,222,18],[224,14,223,10,"routes"],[224,20,223,16],[224,22,223,18],[224,23,223,19],[225,16,224,12,"name"],[225,20,224,16],[225,22,224,18,"route"],[225,27,224,23],[225,28,224,24,"params"],[225,34,224,30],[225,35,224,31,"screen"],[225,41,224,37],[226,16,225,12,"params"],[226,22,225,18],[226,24,225,20,"route"],[226,29,225,25],[226,30,225,26,"params"],[226,36,225,32],[226,37,225,33,"params"],[226,43,225,39],[227,16,226,12,"path"],[227,20,226,16],[227,22,226,18,"route"],[227,27,226,23],[227,28,226,24,"params"],[227,34,226,30],[227,35,226,31,"path"],[228,14,227,10],[228,15,227,11],[229,12,228,8],[229,13,228,9],[230,10,229,6],[231,10,230,6],[231,17,230,13],[231,18,230,14,"router"],[231,24,230,20],[231,25,230,21,"getRehydratedState"],[231,43,230,39],[231,44,230,40,"stateFromParams"],[231,59,230,55],[231,63,230,59,"currentState"],[231,75,230,71],[231,77,230,73],[232,12,231,8,"routeNames"],[232,22,231,18],[233,12,232,8,"routeParamList"],[233,26,232,22],[233,28,232,24,"initialRouteParamList"],[233,49,232,45],[234,12,233,8,"routeGetIdList"],[235,10,234,6],[235,11,234,7],[235,12,234,8],[235,14,234,10],[235,19,234,15],[235,20,234,16],[236,8,235,4],[237,8,236,4],[238,8,237,4],[239,8,238,4],[240,8,239,4],[241,8,240,4],[242,8,241,4],[243,6,242,2],[243,7,242,3],[243,9,242,5],[243,10,242,6,"currentState"],[243,22,242,18],[243,24,242,20,"router"],[243,30,242,26],[243,32,242,28,"isStateValid"],[243,44,242,40],[243,45,242,41],[243,46,242,42],[244,6,242,42,"_React$useMemo2"],[244,21,242,42],[244,28,242,42,"_slicedToArray2"],[244,43,242,42],[244,44,242,42,"default"],[244,51,242,42],[244,53,242,42,"_React$useMemo"],[244,67,242,42],[245,6,193,9,"initializedState"],[245,22,193,25],[245,25,193,25,"_React$useMemo2"],[245,40,193,25],[246,6,193,27,"isFirstStateInitialization"],[246,32,193,53],[246,35,193,53,"_React$useMemo2"],[246,50,193,53],[247,4,243,2],[247,8,243,8,"previousRouteKeyListRef"],[247,31,243,31],[247,34,243,34,"React"],[247,39,243,39],[247,40,243,40,"useRef"],[247,46,243,46],[247,47,243,47,"routeKeyList"],[247,59,243,59],[247,60,243,60],[248,4,244,2,"React"],[248,9,244,7],[248,10,244,8,"useEffect"],[248,19,244,17],[248,20,244,18],[248,26,244,24],[249,6,245,4,"previousRouteKeyListRef"],[249,29,245,27],[249,30,245,28,"current"],[249,37,245,35],[249,40,245,38,"routeKeyList"],[249,52,245,50],[250,4,246,2],[250,5,246,3],[250,6,246,4],[251,4,247,2],[251,8,247,8,"previousRouteKeyList"],[251,28,247,28],[251,31,247,31,"previousRouteKeyListRef"],[251,54,247,54],[251,55,247,55,"current"],[251,62,247,62],[252,4,248,2],[252,8,248,6,"state"],[252,13,248,11],[253,4,249,2],[254,4,250,2],[255,4,251,2],[256,4,252,2,"isStateInitialized"],[256,22,252,20],[256,23,252,21,"currentState"],[256,35,252,33],[256,36,252,34],[256,39,252,37,"currentState"],[256,51,252,49],[256,54,252,52,"initializedState"],[256,70,252,68],[257,4,253,2],[257,8,253,6,"nextState"],[257,17,253,15],[257,20,253,18,"state"],[257,25,253,23],[258,4,254,2],[258,8,254,6],[258,9,254,7],[258,13,254,7,"isArrayEqual"],[258,39,254,19],[258,41,254,20,"state"],[258,46,254,25],[258,47,254,26,"routeNames"],[258,57,254,36],[258,59,254,38,"routeNames"],[258,69,254,48],[258,70,254,49],[258,74,254,53],[258,75,254,54],[258,79,254,54,"isRecordEqual"],[258,107,254,67],[258,109,254,68,"routeKeyList"],[258,121,254,80],[258,123,254,82,"previousRouteKeyList"],[258,143,254,102],[258,144,254,103],[258,146,254,105],[259,6,255,4],[259,10,255,10,"navigatorStateForNextRouteNamesChange"],[259,47,255,47],[259,50,255,50,"options"],[259,57,255,57],[259,58,255,58,"UNSTABLE_getStateForRouteNamesChange"],[259,94,255,94],[259,97,255,97,"state"],[259,102,255,102],[259,103,255,103],[260,6,256,4],[261,6,257,4,"nextState"],[261,15,257,13],[261,18,257,16,"navigatorStateForNextRouteNamesChange"],[261,55,257,53],[262,6,258,4],[263,6,259,4,"router"],[263,12,259,10],[263,13,259,11,"getRehydratedState"],[263,31,259,29],[263,32,259,30,"navigatorStateForNextRouteNamesChange"],[263,69,259,67],[263,71,259,69],[264,8,260,6,"routeNames"],[264,18,260,16],[265,8,261,6,"routeParamList"],[265,22,261,20],[266,8,262,6,"routeGetIdList"],[267,6,263,4],[267,7,263,5],[267,8,263,6],[267,11,263,9,"router"],[267,17,263,15],[267,18,263,16,"getStateForRouteNamesChange"],[267,45,263,43],[267,46,263,44,"state"],[267,51,263,49],[267,53,263,51],[268,8,264,6,"routeNames"],[268,18,264,16],[269,8,265,6,"routeParamList"],[269,22,265,20],[270,8,266,6,"routeGetIdList"],[270,22,266,20],[271,8,267,6,"routeKeyChanges"],[271,23,267,21],[271,25,267,23,"Object"],[271,31,267,29],[271,32,267,30,"keys"],[271,36,267,34],[271,37,267,35,"routeKeyList"],[271,49,267,47],[271,50,267,48],[271,51,267,49,"filter"],[271,57,267,55],[271,58,267,56,"name"],[271,62,267,60],[271,66,267,64,"name"],[271,70,267,68],[271,74,267,72,"previousRouteKeyList"],[271,94,267,92],[271,98,267,96,"routeKeyList"],[271,110,267,108],[271,111,267,109,"name"],[271,115,267,113],[271,116,267,114],[271,121,267,119,"previousRouteKeyList"],[271,141,267,139],[271,142,267,140,"name"],[271,146,267,144],[271,147,267,145],[272,6,268,4],[272,7,268,5],[272,8,268,6],[273,4,269,2],[274,4,270,2],[274,8,270,8,"previousNestedParamsRef"],[274,31,270,31],[274,34,270,34,"React"],[274,39,270,39],[274,40,270,40,"useRef"],[274,46,270,46],[274,47,270,47,"route"],[274,52,270,52],[274,54,270,54,"params"],[274,60,270,60],[274,61,270,61],[275,4,271,2,"React"],[275,9,271,7],[275,10,271,8,"useEffect"],[275,19,271,17],[275,20,271,18],[275,26,271,24],[276,6,272,4,"previousNestedParamsRef"],[276,29,272,27],[276,30,272,28,"current"],[276,37,272,35],[276,40,272,38,"route"],[276,45,272,43],[276,47,272,45,"params"],[276,53,272,51],[277,4,273,2],[277,5,273,3],[277,7,273,5],[277,8,273,6,"route"],[277,13,273,11],[277,15,273,13,"params"],[277,21,273,19],[277,22,273,20],[277,23,273,21],[278,4,274,2],[278,8,274,6,"route"],[278,13,274,11],[278,15,274,13,"params"],[278,21,274,19],[278,23,274,21],[279,6,275,4],[279,10,275,10,"previousParams"],[279,24,275,24],[279,27,275,27,"previousNestedParamsRef"],[279,50,275,50],[279,51,275,51,"current"],[279,58,275,58],[280,6,276,4],[280,10,276,8,"action"],[280,16,276,14],[281,6,277,4],[281,10,277,8],[281,17,277,15,"route"],[281,22,277,20],[281,23,277,21,"params"],[281,29,277,27],[281,30,277,28,"state"],[281,35,277,33],[281,40,277,38],[281,48,277,46],[281,52,277,50,"route"],[281,57,277,55],[281,58,277,56,"params"],[281,64,277,62],[281,65,277,63,"state"],[281,70,277,68],[281,74,277,72],[281,78,277,76],[281,82,277,80,"route"],[281,87,277,85],[281,88,277,86,"params"],[281,94,277,92],[281,99,277,97,"previousParams"],[281,113,277,111],[281,115,277,113],[282,8,278,6],[283,8,279,6,"action"],[283,14,279,12],[283,17,279,15,"CommonActions"],[283,39,279,28],[283,40,279,29,"reset"],[283,45,279,34],[283,46,279,35,"route"],[283,51,279,40],[283,52,279,41,"params"],[283,58,279,47],[283,59,279,48,"state"],[283,64,279,53],[283,65,279,54],[284,6,280,4],[284,7,280,5],[284,13,280,11],[284,17,280,15],[284,24,280,22,"route"],[284,29,280,27],[284,30,280,28,"params"],[284,36,280,34],[284,37,280,35,"screen"],[284,43,280,41],[284,48,280,46],[284,56,280,54],[284,61,280,59,"route"],[284,66,280,64],[284,67,280,65,"params"],[284,73,280,71],[284,74,280,72,"initial"],[284,81,280,79],[284,86,280,84],[284,91,280,89],[284,95,280,93,"isFirstStateInitialization"],[284,121,280,119],[284,125,280,123,"route"],[284,130,280,128],[284,131,280,129,"params"],[284,137,280,135],[284,142,280,140,"previousParams"],[284,156,280,154],[284,157,280,155],[284,159,280,157],[285,8,281,6],[286,8,282,6,"action"],[286,14,282,12],[286,17,282,15,"CommonActions"],[286,39,282,28],[286,40,282,29,"navigate"],[286,48,282,37],[286,49,282,38],[287,10,283,8,"name"],[287,14,283,12],[287,16,283,14,"route"],[287,21,283,19],[287,22,283,20,"params"],[287,28,283,26],[287,29,283,27,"screen"],[287,35,283,33],[288,10,284,8,"params"],[288,16,284,14],[288,18,284,16,"route"],[288,23,284,21],[288,24,284,22,"params"],[288,30,284,28],[288,31,284,29,"params"],[288,37,284,35],[289,10,285,8,"path"],[289,14,285,12],[289,16,285,14,"route"],[289,21,285,19],[289,22,285,20,"params"],[289,28,285,26],[289,29,285,27,"path"],[290,8,286,6],[290,9,286,7],[290,10,286,8],[291,6,287,4],[293,6,289,4],[294,6,290,4],[294,10,290,10,"updatedState"],[294,22,290,22],[294,25,290,25,"action"],[294,31,290,31],[294,34,290,34,"router"],[294,40,290,40],[294,41,290,41,"getStateForAction"],[294,58,290,58],[294,59,290,59,"nextState"],[294,68,290,68],[294,70,290,70,"action"],[294,76,290,76],[294,78,290,78],[295,8,291,6,"routeNames"],[295,18,291,16],[296,8,292,6,"routeParamList"],[296,22,292,20],[297,8,293,6,"routeGetIdList"],[298,6,294,4],[298,7,294,5],[298,8,294,6],[298,11,294,9],[298,15,294,13],[299,6,295,4,"nextState"],[299,15,295,13],[299,18,295,16,"updatedState"],[299,30,295,28],[299,35,295,33],[299,39,295,37],[299,42,295,40,"router"],[299,48,295,46],[299,49,295,47,"getRehydratedState"],[299,67,295,65],[299,68,295,66,"updatedState"],[299,80,295,78],[299,82,295,80],[300,8,296,6,"routeNames"],[300,18,296,16],[301,8,297,6,"routeParamList"],[301,22,297,20],[302,8,298,6,"routeGetIdList"],[303,6,299,4],[303,7,299,5],[303,8,299,6],[303,11,299,9,"nextState"],[303,20,299,18],[304,4,300,2],[305,4,301,2],[305,8,301,8,"shouldUpdate"],[305,20,301,20],[305,23,301,23,"state"],[305,28,301,28],[305,33,301,33,"nextState"],[305,42,301,42],[306,4,302,2],[306,8,302,2,"useScheduleUpdate"],[306,44,302,19],[306,46,302,20],[306,52,302,26],[307,6,303,4],[307,10,303,8,"shouldUpdate"],[307,22,303,20],[307,24,303,22],[308,8,304,6],[309,8,305,6,"setState"],[309,16,305,14],[309,17,305,15,"nextState"],[309,26,305,24],[309,27,305,25],[310,6,306,4],[311,4,307,2],[311,5,307,3],[311,6,307,4],[313,4,309,2],[314,4,310,2],[315,4,311,2],[316,4,312,2,"state"],[316,9,312,7],[316,12,312,10,"nextState"],[316,21,312,19],[317,4,313,2,"React"],[317,9,313,7],[317,10,313,8,"useEffect"],[317,19,313,17],[317,20,313,18],[317,26,313,24],[318,6,314,4],[319,6,315,4],[320,6,316,4,"stateCleanedUp"],[320,20,316,18],[320,21,316,19,"current"],[320,28,316,26],[320,31,316,29],[320,36,316,34],[321,6,317,4,"setKey"],[321,12,317,10],[321,13,317,11,"navigatorKey"],[321,25,317,23],[321,26,317,24],[322,6,318,4],[322,10,318,8],[322,11,318,9,"getIsInitial"],[322,23,318,21],[322,24,318,22],[322,25,318,23],[322,27,318,25],[323,8,319,6],[324,8,320,6],[325,8,321,6],[326,8,322,6,"setState"],[326,16,322,14],[326,17,322,15,"nextState"],[326,26,322,24],[326,27,322,25],[327,6,323,4],[328,6,324,4],[328,13,324,11],[328,19,324,17],[329,8,325,6],[330,8,326,6],[330,12,326,10,"getCurrentState"],[330,27,326,25],[330,28,326,26],[330,29,326,27],[330,34,326,32,"undefined"],[330,43,326,41],[330,47,326,45,"getKey"],[330,53,326,51],[330,54,326,52],[330,55,326,53],[330,60,326,58,"navigatorKey"],[330,72,326,70],[330,74,326,72],[331,10,327,8,"setCurrentState"],[331,25,327,23],[331,26,327,24,"undefined"],[331,35,327,33],[331,36,327,34],[332,10,328,8,"stateCleanedUp"],[332,24,328,22],[332,25,328,23,"current"],[332,32,328,30],[332,35,328,33],[332,39,328,37],[333,8,329,6],[334,6,330,4],[334,7,330,5],[335,6,331,4],[336,4,332,2],[336,5,332,3],[336,7,332,5],[336,9,332,7],[336,10,332,8],[338,4,334,2],[339,4,335,2],[340,4,336,2],[341,4,337,2],[342,4,338,2],[343,4,339,2],[343,8,339,8,"stateRef"],[343,16,339,16],[343,19,339,19,"React"],[343,24,339,24],[343,25,339,25,"useRef"],[343,31,339,31],[343,32,339,32,"state"],[343,37,339,37],[343,38,339,38],[344,4,340,2,"stateRef"],[344,12,340,10],[344,13,340,11,"current"],[344,20,340,18],[344,23,340,21,"state"],[344,28,340,26],[345,4,341,2],[345,8,341,2,"useIsomorphicLayoutEffect"],[345,60,341,27],[345,62,341,28],[345,68,341,34],[346,6,342,4,"stateRef"],[346,14,342,12],[346,15,342,13,"current"],[346,22,342,20],[346,25,342,23],[346,29,342,27],[347,4,343,2],[347,5,343,3],[347,6,343,4],[348,4,344,2],[348,8,344,8,"getState"],[348,16,344,16],[348,19,344,19],[348,23,344,19,"useLatestCallback"],[348,49,344,36],[348,51,344,37],[348,57,344,43],[349,6,345,4],[349,10,345,10,"currentState"],[349,22,345,22],[349,25,345,25,"getCurrentState"],[349,40,345,40],[349,41,345,41],[349,42,345,42],[350,6,346,4],[350,13,346,11],[350,17,346,11,"deepFreeze"],[350,39,346,21],[350,41,346,22,"isStateInitialized"],[350,59,346,40],[350,60,346,41,"currentState"],[350,72,346,53],[350,73,346,54],[350,76,346,57,"currentState"],[350,88,346,69],[350,91,346,72,"initializedState"],[350,107,346,88],[350,108,346,89],[351,4,347,2],[351,5,347,3],[351,6,347,4],[352,4,348,2],[352,8,348,8,"emitter"],[352,15,348,15],[352,18,348,18],[352,22,348,18,"useEventEmitter"],[352,54,348,33],[352,56,348,34,"e"],[352,57,348,35],[352,61,348,39],[353,6,349,4],[353,10,349,10,"routeNames"],[353,20,349,20],[353,23,349,23],[353,25,349,25],[354,6,350,4],[354,10,350,8,"route"],[354,15,350,13],[355,6,351,4],[355,10,351,8,"e"],[355,11,351,9],[355,12,351,10,"target"],[355,18,351,16],[355,20,351,18],[356,8,352,6,"route"],[356,13,352,11],[356,16,352,14,"state"],[356,21,352,19],[356,22,352,20,"routes"],[356,28,352,26],[356,29,352,27,"find"],[356,33,352,31],[356,34,352,32,"route"],[356,39,352,37],[356,43,352,41,"route"],[356,48,352,46],[356,49,352,47,"key"],[356,52,352,50],[356,57,352,55,"e"],[356,58,352,56],[356,59,352,57,"target"],[356,65,352,63],[356,66,352,64],[357,8,353,6],[357,12,353,10,"route"],[357,17,353,15],[357,19,353,17,"name"],[357,23,353,21],[357,25,353,23],[358,10,354,8,"routeNames"],[358,20,354,18],[358,21,354,19,"push"],[358,25,354,23],[358,26,354,24,"route"],[358,31,354,29],[358,32,354,30,"name"],[358,36,354,34],[358,37,354,35],[359,8,355,6],[360,6,356,4],[360,7,356,5],[360,13,356,11],[361,8,357,6,"route"],[361,13,357,11],[361,16,357,14,"state"],[361,21,357,19],[361,22,357,20,"routes"],[361,28,357,26],[361,29,357,27,"state"],[361,34,357,32],[361,35,357,33,"index"],[361,40,357,38],[361,41,357,39],[362,8,358,6,"routeNames"],[362,18,358,16],[362,19,358,17,"push"],[362,23,358,21],[362,24,358,22],[362,27,358,25,"Object"],[362,33,358,31],[362,34,358,32,"keys"],[362,38,358,36],[362,39,358,37,"screens"],[362,46,358,44],[362,47,358,45],[362,48,358,46,"filter"],[362,54,358,52],[362,55,358,53,"name"],[362,59,358,57],[362,63,358,61,"route"],[362,68,358,66],[362,70,358,68,"name"],[362,74,358,72],[362,79,358,77,"name"],[362,83,358,81],[362,84,358,82],[362,85,358,83],[363,6,359,4],[364,6,360,4],[364,10,360,8,"route"],[364,15,360,13],[364,19,360,17],[364,23,360,21],[364,25,360,23],[365,8,361,6],[366,6,362,4],[367,6,363,4],[367,10,363,10,"navigation"],[367,20,363,20],[367,23,363,23,"descriptors"],[367,34,363,34],[367,35,363,35,"route"],[367,40,363,40],[367,41,363,41,"key"],[367,44,363,44],[367,45,363,45],[367,46,363,46,"navigation"],[367,56,363,56],[368,6,364,4],[368,10,364,10,"listeners"],[368,19,364,19],[368,22,364,22],[368,24,364,24],[368,25,364,25,"concat"],[368,31,364,31],[369,6,365,4],[370,6,366,4],[370,9,366,7],[370,10,366,8,"screenListeners"],[370,25,366,23],[370,27,366,25],[370,30,366,28,"routeNames"],[370,40,366,38],[370,41,366,39,"map"],[370,44,366,42],[370,45,366,43,"name"],[370,49,366,47],[370,53,366,51],[371,8,367,6],[371,12,368,8,"listeners"],[371,21,368,17],[371,24,369,10,"screens"],[371,31,369,17],[371,32,369,18,"name"],[371,36,369,22],[371,37,369,23],[371,38,369,24,"props"],[371,43,369,29],[371,44,368,8,"listeners"],[371,53,368,17],[372,8,370,6],[372,15,370,13,"listeners"],[372,24,370,22],[373,6,371,4],[373,7,371,5],[373,8,371,6],[373,9,371,7],[373,10,371,8,"map"],[373,13,371,11],[373,14,371,12,"listeners"],[373,23,371,21],[373,27,371,25],[374,8,372,6],[374,12,372,12,"map"],[374,15,372,15],[374,18,372,18],[374,25,372,25,"listeners"],[374,34,372,34],[374,39,372,39],[374,49,372,49],[374,52,372,52,"listeners"],[374,61,372,61],[374,62,372,62],[375,10,373,8,"route"],[375,15,373,13],[375,17,373,15,"route"],[375,22,373,20],[376,10,374,8,"navigation"],[377,8,375,6],[377,9,375,7],[377,10,375,8],[377,13,375,11,"listeners"],[377,22,375,20],[378,8,376,6],[378,15,376,13,"map"],[378,18,376,16],[378,21,376,19,"Object"],[378,27,376,25],[378,28,376,26,"keys"],[378,32,376,30],[378,33,376,31,"map"],[378,36,376,34],[378,37,376,35],[378,38,376,36,"filter"],[378,44,376,42],[378,45,376,43,"type"],[378,49,376,47],[378,53,376,51,"type"],[378,57,376,55],[378,62,376,60,"e"],[378,63,376,61],[378,64,376,62,"type"],[378,68,376,66],[378,69,376,67],[378,70,376,68,"map"],[378,73,376,71],[378,74,376,72,"type"],[378,78,376,76],[378,82,376,80,"map"],[378,85,376,83],[378,88,376,86,"type"],[378,92,376,90],[378,93,376,91],[378,94,376,92],[378,97,376,95,"undefined"],[378,106,376,104],[379,6,377,4],[379,7,377,5],[379,8,377,6],[380,6,378,4],[381,6,379,4],[382,6,379,4],[382,7,380,5,"filter"],[382,13,380,11],[382,14,380,12],[382,15,380,13,"cb"],[382,17,380,15],[382,19,380,17,"i"],[382,20,380,18],[382,22,380,20,"self"],[382,26,380,24],[382,31,380,29,"cb"],[382,33,380,31],[382,37,380,35,"self"],[382,41,380,39],[382,42,380,40,"lastIndexOf"],[382,53,380,51],[382,54,380,52,"cb"],[382,56,380,54],[382,57,380,55],[382,62,380,60,"i"],[382,63,380,61],[382,64,380,62],[383,6,381,4,"listeners"],[383,15,381,13],[383,16,381,14,"forEach"],[383,23,381,21],[383,24,381,22,"listener"],[383,32,381,30],[383,36,381,34,"listener"],[383,44,381,42],[383,47,381,45,"e"],[383,48,381,46],[383,49,381,47],[383,50,381,48],[384,4,382,2],[384,5,382,3],[384,6,382,4],[385,4,383,2],[385,8,383,2,"useFocusEvents"],[385,38,383,16],[385,40,383,17],[386,6,384,4,"state"],[386,11,384,9],[387,6,385,4,"emitter"],[388,4,386,2],[388,5,386,3],[388,6,386,4],[389,4,387,2,"React"],[389,9,387,7],[389,10,387,8,"useEffect"],[389,19,387,17],[389,20,387,18],[389,26,387,24],[390,6,388,4,"emitter"],[390,13,388,11],[390,14,388,12,"emit"],[390,18,388,16],[390,19,388,17],[391,8,389,6,"type"],[391,12,389,10],[391,14,389,12],[391,21,389,19],[392,8,390,6,"data"],[392,12,390,10],[392,14,390,12],[393,10,391,8,"state"],[394,8,392,6],[395,6,393,4],[395,7,393,5],[395,8,393,6],[396,4,394,2],[396,5,394,3],[396,7,394,5],[396,8,394,6,"emitter"],[396,15,394,13],[396,17,394,15,"state"],[396,22,394,20],[396,23,394,21],[396,24,394,22],[397,4,395,2],[397,8,395,2,"_useChildListeners"],[397,26,395,2],[397,29,398,6],[397,33,398,6,"useChildListeners"],[397,70,398,23],[397,72,398,24],[397,73,398,25],[398,6,396,15,"childListeners"],[398,20,396,29],[398,23,396,29,"_useChildListeners"],[398,41,396,29],[398,42,396,4,"listeners"],[398,51,396,13],[399,6,397,4,"addListener"],[399,17,397,15],[399,20,397,15,"_useChildListeners"],[399,38,397,15],[399,39,397,4,"addListener"],[399,50,397,15],[400,4,399,2],[400,8,399,2,"_useKeyedChildListene"],[400,29,399,2],[400,32,402,6],[400,36,402,6,"useKeyedChildListeners"],[400,82,402,28],[400,84,402,29],[400,85,402,30],[401,6,400,4,"keyedListeners"],[401,20,400,18],[401,23,400,18,"_useKeyedChildListene"],[401,44,400,18],[401,45,400,4,"keyedListeners"],[401,59,400,18],[402,6,401,4,"addKeyedListener"],[402,22,401,20],[402,25,401,20,"_useKeyedChildListene"],[402,46,401,20],[402,47,401,4,"addKeyedListener"],[402,63,401,20],[403,4,403,2],[403,8,403,8,"onAction"],[403,16,403,16],[403,19,403,19],[403,23,403,19,"useOnAction"],[403,47,403,30],[403,49,403,31],[404,6,404,4,"router"],[404,12,404,10],[405,6,405,4,"getState"],[405,14,405,12],[406,6,406,4,"setState"],[406,14,406,12],[407,6,407,4,"key"],[407,9,407,7],[407,11,407,9,"route"],[407,16,407,14],[407,18,407,16,"key"],[407,21,407,19],[408,6,408,4,"actionListeners"],[408,21,408,19],[408,23,408,21,"childListeners"],[408,37,408,35],[408,38,408,36,"action"],[408,44,408,42],[409,6,409,4,"beforeRemoveListeners"],[409,27,409,25],[409,29,409,27,"keyedListeners"],[409,43,409,41],[409,44,409,42,"beforeRemove"],[409,56,409,54],[410,6,410,4,"routerConfigOptions"],[410,25,410,23],[410,27,410,25],[411,8,411,6,"routeNames"],[411,18,411,16],[412,8,412,6,"routeParamList"],[412,22,412,20],[413,8,413,6,"routeGetIdList"],[414,6,414,4],[414,7,414,5],[415,6,415,4,"emitter"],[416,4,416,2],[416,5,416,3],[416,6,416,4],[417,4,417,2],[417,8,417,8,"onRouteFocus"],[417,20,417,20],[417,23,417,23],[417,27,417,23,"useOnRouteFocus"],[417,59,417,38],[417,61,417,39],[418,6,418,4,"router"],[418,12,418,10],[419,6,419,4,"key"],[419,9,419,7],[419,11,419,9,"route"],[419,16,419,14],[419,18,419,16,"key"],[419,21,419,19],[420,6,420,4,"getState"],[420,14,420,12],[421,6,421,4,"setState"],[422,4,422,2],[422,5,422,3],[422,6,422,4],[423,4,423,2],[423,8,423,8,"navigation"],[423,18,423,18],[423,21,423,21],[423,25,423,21,"useNavigationHelpers"],[423,67,423,41],[423,69,423,42],[424,6,424,4,"id"],[424,8,424,6],[424,10,424,8,"options"],[424,17,424,15],[424,18,424,16,"id"],[424,20,424,18],[425,6,425,4,"onAction"],[425,14,425,12],[426,6,426,4,"getState"],[426,14,426,12],[427,6,427,4,"emitter"],[427,13,427,11],[428,6,428,4,"router"],[428,12,428,10],[429,6,429,4,"stateRef"],[430,4,430,2],[430,5,430,3],[430,6,430,4],[431,4,431,2],[431,8,431,2,"useFocusedListenersChildrenAdapter"],[431,78,431,36],[431,80,431,37],[432,6,432,4,"navigation"],[432,16,432,14],[433,6,433,4,"focusedListeners"],[433,22,433,20],[433,24,433,22,"childListeners"],[433,38,433,36],[433,39,433,37,"focus"],[434,4,434,2],[434,5,434,3],[434,6,434,4],[435,4,435,2],[435,8,435,2,"useOnGetState"],[435,36,435,15],[435,38,435,16],[436,6,436,4,"getState"],[436,14,436,12],[437,6,437,4,"getStateListeners"],[437,23,437,21],[437,25,437,23,"keyedListeners"],[437,39,437,37],[437,40,437,38,"getState"],[438,4,438,2],[438,5,438,3],[438,6,438,4],[439,4,439,2],[439,8,439,2,"_useDescriptors"],[439,23,439,2],[439,26,442,6],[439,30,442,6,"useDescriptors"],[439,61,442,20],[439,63,442,21],[440,8,443,4,"state"],[440,13,443,9],[441,8,444,4,"screens"],[441,15,444,11],[442,8,445,4,"navigation"],[442,18,445,14],[443,8,446,4,"screenOptions"],[443,21,446,17],[444,8,447,4,"screenLayout"],[444,20,447,16],[445,8,448,4,"onAction"],[445,16,448,12],[446,8,449,4,"getState"],[446,16,449,12],[447,8,450,4,"setState"],[447,16,450,12],[448,8,451,4,"onRouteFocus"],[448,20,451,16],[449,8,452,4,"addListener"],[449,19,452,15],[450,8,453,4,"addKeyedListener"],[450,24,453,20],[451,8,454,4,"router"],[451,14,454,10],[452,8,455,4],[453,8,456,4,"emitter"],[454,6,457,2],[454,7,457,3],[454,8,457,4],[455,6,440,4,"describe"],[455,14,440,12],[455,17,440,12,"_useDescriptors"],[455,32,440,12],[455,33,440,4,"describe"],[455,41,440,12],[456,6,441,4,"descriptors"],[456,17,441,15],[456,20,441,15,"_useDescriptors"],[456,35,441,15],[456,36,441,4,"descriptors"],[456,47,441,15],[457,4,458,2],[457,8,458,2,"useCurrentRender"],[457,42,458,18],[457,44,458,19],[458,6,459,4,"state"],[458,11,459,9],[459,6,460,4,"navigation"],[459,16,460,14],[460,6,461,4,"descriptors"],[461,4,462,2],[461,5,462,3],[461,6,462,4],[462,4,463,2],[462,8,463,8,"NavigationContent"],[462,25,463,25],[462,28,463,28],[462,32,463,28,"useComponent"],[462,58,463,40],[462,60,463,41,"children"],[462,68,463,49],[462,72,463,53],[463,6,464,4],[463,10,464,10,"element"],[463,17,464,17],[463,20,464,20,"layout"],[463,26,464,26],[463,30,464,30],[463,34,464,34],[463,37,464,37,"layout"],[463,43,464,43],[463,44,464,44],[464,8,465,6,"state"],[464,13,465,11],[465,8,466,6,"descriptors"],[465,19,466,17],[466,8,467,6,"navigation"],[466,18,467,16],[467,8,468,6,"children"],[468,6,469,4],[468,7,469,5],[468,8,469,6],[468,11,469,9,"children"],[468,19,469,17],[469,6,470,4],[469,13,470,11],[469,26,470,24],[469,30,470,24,"_jsx"],[469,45,470,28],[469,47,470,29,"NavigationHelpersContext"],[469,97,470,53],[469,98,470,54,"Provider"],[469,106,470,62],[469,108,470,64],[470,8,471,6,"value"],[470,13,471,11],[470,15,471,13,"navigation"],[470,25,471,23],[471,8,472,6,"children"],[471,16,472,14],[471,18,472,16],[471,31,472,29],[471,35,472,29,"_jsx"],[471,50,472,33],[471,52,472,34,"PreventRemoveProvider"],[471,96,472,55],[471,98,472,57],[472,10,473,8,"children"],[472,18,473,16],[472,20,473,18,"element"],[473,8,474,6],[473,9,474,7],[474,6,475,4],[474,7,475,5],[474,8,475,6],[475,4,476,2],[475,5,476,3],[475,6,476,4],[476,4,477,2],[476,11,477,9],[477,6,478,4,"state"],[477,11,478,9],[478,6,479,4,"navigation"],[478,16,479,14],[479,6,480,4,"describe"],[479,14,480,12],[480,6,481,4,"descriptors"],[480,17,481,15],[481,6,482,4,"NavigationContent"],[482,4,483,2],[482,5,483,3],[483,2,484,0],[484,0,484,1],[484,3]],"functionMap":{"names":["<global>","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useIsomorphicLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;mBCoC,iED;oCEO;0DCC;GD6B;oBEE;KF0C;CFG;OKS;8BCY;4DCC,qDD;GDI;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYqB,yFZ;kBWI;GXE;oBa6B;GbK;kBWM;WGW;KHM;GXE;4BeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBa;CLQ"}},"type":"js/module"}]}